<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>一叶知秋</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://muyinchen.github.io/"/>
  <updated>2016-11-17T15:55:04.095Z</updated>
  <id>https://muyinchen.github.io/</id>
  
  <author>
    <name>知秋</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Migo商城2.0  搭建前台系统 十三</title>
    <link href="https://muyinchen.github.io/2016/11/17/Migo%E5%95%86%E5%9F%8E2.0%20%20%E9%97%A8%E6%88%B7%E9%A6%96%E9%A1%B5%E5%B7%A6%E4%BE%A7%E5%95%86%E5%93%81%E7%B1%BB%E7%9B%AE%E6%98%BE%E7%A4%BA%20%E5%8D%81%E4%B8%89/"/>
    <id>https://muyinchen.github.io/2016/11/17/Migo商城2.0  门户首页左侧商品类目显示 十三/</id>
    <published>2016-11-17T15:50:14.316Z</published>
    <updated>2016-11-17T15:55:04.095Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Migo商城2-0-门户首页左侧商品类目显示-十四"><a href="#Migo商城2-0-门户首页左侧商品类目显示-十四" class="headerlink" title="Migo商城2.0  门户首页左侧商品类目显示 十四"></a>Migo商城2.0  门户首页左侧商品类目显示 十四</h2><p>新建后台提供系统服务，这里就不再新建专门提供服务的项目了(也是因为访问的网址里有rest这个字眼了)</p>
<p>先看下jd的商品类目返回的数据格式：</p>
<p><img src="http://og0sybnix.bkt.clouddn.com/jdsplmfx.png" alt=""></p>
<a id="more"></a>
<p>因为扒的页面是jd之前的，没有添加这么多，缺少了1 3 4部分，其实也就添加了几个键值对，不影响数据结构的设计</p>
<h4 id="本项目要实现的数据结构-部分数据-："><a href="#本项目要实现的数据结构-部分数据-：" class="headerlink" title="本项目要实现的数据结构(部分数据)："></a>本项目要实现的数据结构(部分数据)：</h4><figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="attr">"data"</span>: [</div><div class="line">        &#123;</div><div class="line">            <span class="attr">"u"</span>: <span class="string">"/products/1.html"</span>,</div><div class="line">            <span class="attr">"n"</span>: <span class="string">"&lt;a href='/products/1.html'&gt;图书、音像、电子书刊&lt;/a&gt;"</span>,</div><div class="line">            <span class="attr">"i"</span>: [</div><div class="line">                &#123;</div><div class="line">                    <span class="attr">"u"</span>: <span class="string">"/products/2.html"</span>,</div><div class="line">                    <span class="attr">"n"</span>: <span class="string">"电子书刊"</span>,</div><div class="line">                    <span class="attr">"i"</span>: [</div><div class="line">                        <span class="string">"/products/3.html|电子书"</span>,</div><div class="line">                        <span class="string">"/products/4.html|网络原创"</span>,</div><div class="line">                        <span class="string">"/products/5.html|数字杂志"</span>,</div><div class="line">                        <span class="string">"/products/6.html|多媒体图书"</span></div><div class="line">                    ]</div><div class="line">                &#125;,</div><div class="line">                &#123;</div><div class="line">                    <span class="attr">"u"</span>: <span class="string">"/products/7.html"</span>,</div><div class="line">                    <span class="attr">"n"</span>: <span class="string">"音像"</span>,</div><div class="line">                    <span class="attr">"i"</span>: [</div><div class="line">                        <span class="string">"/products/8.html|音乐"</span>,</div><div class="line">                        <span class="string">"/products/9.html|影视"</span>,</div><div class="line">                        <span class="string">"/products/10.html|教育音像"</span></div><div class="line">                    ]</div><div class="line">                &#125;,</div><div class="line">                &#123;</div><div class="line">                    <span class="attr">"u"</span>: <span class="string">"/products/11.html"</span>,</div><div class="line">                    <span class="attr">"n"</span>: <span class="string">"英文原版"</span>,</div><div class="line">                    <span class="attr">"i"</span>: [</div><div class="line">                        <span class="string">"/products/12.html|少儿"</span>,</div><div class="line">                        <span class="string">"/products/13.html|商务投资"</span>,</div><div class="line">                        <span class="string">"/products/14.html|英语学习与考试"</span>,</div><div class="line">                        <span class="string">"/products/15.html|小说"</span>,</div><div class="line">                        <span class="string">"/products/16.html|传记"</span>,</div><div class="line">                        <span class="string">"/products/17.html|励志"</span></div><div class="line">                    ]</div><div class="line">                &#125;</div><div class="line">              &#125;</div></pre></td></tr></table></figure>
<p><img src="http://og0sybnix.bkt.clouddn.com/lmfx.png" alt=""></p>
<p>因为没有设计专门的<code>rest</code>服务工程，这里将结构pojo放在<code>common</code>工程中以供通用，代码如下：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.migo.pojo;</div><div class="line"></div><div class="line"><span class="keyword">import</span> com.fasterxml.jackson.annotation.JsonProperty;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.util.List;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Author  知秋</div><div class="line"> * Created by kauw on 2016/10/9.</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CatNode</span> </span>&#123;</div><div class="line">  <span class="comment">// 序列化成json数据时为 u ,不明白请谷歌</span></div><div class="line">    <span class="meta">@JsonProperty</span>(<span class="string">"u"</span>)</div><div class="line">    <span class="keyword">private</span> String url;</div><div class="line">    <span class="meta">@JsonProperty</span>(<span class="string">"n"</span>)</div><div class="line">    <span class="keyword">private</span> String name;</div><div class="line">    <span class="meta">@JsonProperty</span>(<span class="string">"i"</span>)</div><div class="line">    <span class="keyword">private</span> List items;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> List <span class="title">getItems</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> items;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setItems</span><span class="params">(List items)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.items = items;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> name;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.name = name;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUrl</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> url;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUrl</span><span class="params">(String url)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.url = url;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.migo.pojo;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.util.List;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Author  知秋</div><div class="line"> * Created by kauw on 2016/10/9.</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ItemCatResult</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> List data;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> List <span class="title">getData</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> data;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setData</span><span class="params">(List data)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.data = data;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>为更好的符合类的名字的含义，和更好的理解性，对<code>ItemCatResult</code> 稍做改造</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.migo.pojo;</div><div class="line"></div><div class="line"><span class="keyword">import</span> com.fasterxml.jackson.annotation.JsonProperty;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.util.ArrayList;</div><div class="line"><span class="keyword">import</span> java.util.List;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Author  知秋</div><div class="line"> * Created by kauw on 2016/10/9.</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ItemCatResult</span> </span>&#123;</div><div class="line">    <span class="meta">@JsonProperty</span>(<span class="string">"data"</span>)</div><div class="line">    <span class="keyword">private</span> List&lt;CatNode&gt; catNodes=<span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> List&lt;CatNode&gt; <span class="title">getCatNodes</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> catNodes;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCatNodes</span><span class="params">(List&lt;CatNode&gt; catNodes)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.catNodes = catNodes;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>前台访问的<code>URL</code> :  <code>URL_Serv: &quot;http://tomcat.migo.com/rest/webs/item/cat?callback=category.getDataService&quot;</code>   <code>lib-v1.js 1173行</code></p>
<h3 id="后台代码："><a href="#后台代码：" class="headerlink" title="后台代码："></a>后台代码：</h3><h4 id="service"><a href="#service" class="headerlink" title="service"></a>service</h4><p>从<code>tb_item_cat</code>表中取数据，单表查询，可以使用逆向工程生成的代码</p>
<p>返回结果：<code>ItemCatResult</code></p>
<p>参数：没有</p>
<p>业务逻辑：根据<code>parentid</code>查询子节点列表，并递归调用</p>
<p></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line">     * 查询，并生成jd页面类似的树状结构</div><div class="line">     * <span class="doctag">@return</span></div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> ItemCatResult <span class="title">getItemCatList</span><span class="params">()</span></span>&#123;</div><div class="line">        ItemCatResult itemCatResult=<span class="keyword">new</span> ItemCatResult();</div><div class="line"></div><div class="line">        <span class="comment">//调用递归方法查询商品分类列表</span></div><div class="line">        List catList=getItemCatList(<span class="number">0L</span>);</div><div class="line">        <span class="comment">//返回结果</span></div><div class="line">        itemCatResult.setCatNodes(catList);</div><div class="line">        <span class="keyword">return</span> itemCatResult;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> List <span class="title">getItemCatList</span><span class="params">(<span class="keyword">long</span> parentId)</span> </span>&#123;</div><div class="line">        <span class="comment">//根据parentId查询列表</span></div><div class="line"></div><div class="line"></div><div class="line">        ItemCat example=<span class="keyword">new</span> ItemCat();</div><div class="line">        example.setParentId(parentId);</div><div class="line">        List&lt;ItemCat&gt; catList = <span class="keyword">super</span>.queryListByWhere(example);</div><div class="line">        List resultList=<span class="keyword">new</span> ArrayList();</div><div class="line">        <span class="keyword">int</span> count=<span class="number">0</span>;</div><div class="line">        <span class="keyword">for</span> (ItemCat itemCat : catList) &#123;</div><div class="line">            <span class="comment">//如果是父节点</span></div><div class="line">            <span class="keyword">if</span> (itemCat.getIsParent()) &#123;</div><div class="line">                CatNode node=<span class="keyword">new</span> CatNode();</div><div class="line">                node.setUrl(<span class="string">"/products/"</span>+itemCat.getId()+<span class="string">".html"</span>);</div><div class="line">                <span class="comment">//如果当前节点为第一级节点</span></div><div class="line">                <span class="keyword">if</span> (itemCat.getParentId()==<span class="number">0</span>) &#123;</div><div class="line">                    node.setName(<span class="string">"&lt;a href='/products/"</span>+itemCat.getId()+<span class="string">".html'&gt;"</span>+itemCat.getName()+<span class="string">"&lt;/a&gt;"</span>);</div><div class="line">                &#125;<span class="keyword">else</span> &#123;</div><div class="line">                    node.setName(itemCat.getName());</div><div class="line">                &#125;</div><div class="line">                node.setItems(getItemCatList(itemCat.getId()));</div><div class="line">                <span class="comment">//将node添加到列表</span></div><div class="line">                resultList.add(node);</div><div class="line">                count++;</div><div class="line">                <span class="comment">//第一层只取14条记录</span></div><div class="line">                <span class="keyword">if</span> (parentId==<span class="number">0</span>&amp;&amp;count&gt;=<span class="number">14</span>)&#123;</div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">                &#125;</div><div class="line">            &#125;<span class="keyword">else</span> &#123;</div><div class="line">                <span class="comment">//如果是最底层叶子节点</span></div><div class="line">                String item = <span class="string">"/products/"</span>+itemCat.getId()+<span class="string">".html|"</span> + itemCat.getName();</div><div class="line">                resultList.add(item);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> resultList;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<h4 id="controller"><a href="#controller" class="headerlink" title="controller"></a><code>controller</code></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.migo.controller.webs;</div><div class="line"></div><div class="line"><span class="keyword">import</span> com.migo.pojo.ItemCatResult;</div><div class="line"><span class="keyword">import</span> com.migo.service.ItemCatService;</div><div class="line"><span class="keyword">import</span> org.slf4j.Logger;</div><div class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</div><div class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</div><div class="line"><span class="keyword">import</span> org.springframework.http.HttpStatus;</div><div class="line"><span class="keyword">import</span> org.springframework.http.ResponseEntity;</div><div class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMethod;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Author  知秋</div><div class="line"> * Created by kauw on 2016/11/17.</div><div class="line"> */</div><div class="line"><span class="meta">@Controller</span></div><div class="line"><span class="meta">@RequestMapping</span>(<span class="string">"webs/item/cat"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebsItemCatController</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger logger= LoggerFactory.getLogger(WebsItemCatController.class);</div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="keyword">private</span> ItemCatService itemCatService;</div><div class="line"></div><div class="line">    <span class="meta">@RequestMapping</span>(method = RequestMethod.GET)</div><div class="line">    <span class="function"><span class="keyword">public</span> ResponseEntity&lt;ItemCatResult&gt; <span class="title">getItemCatList</span><span class="params">()</span></span>&#123;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            <span class="keyword">if</span> (logger.isInfoEnabled()) &#123;</div><div class="line">                logger.info(<span class="string">"查询商品类目数据服务"</span>);</div><div class="line">            &#125;</div><div class="line">            ItemCatResult itemCatList = <span class="keyword">this</span>.itemCatService.getItemCatList();</div><div class="line">            <span class="keyword">return</span> ResponseEntity.ok(itemCatList);</div><div class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">           logger.error(<span class="string">"查询商品类目数据服务 失败"</span>, e);</div><div class="line">            <span class="keyword">return</span> ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(<span class="keyword">null</span>);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="测试："><a href="#测试：" class="headerlink" title="测试："></a>测试：</h4><p><img src="http://og0sybnix.bkt.clouddn.com/sxwb.png" alt=""></p>
<p>因为前端门户系统访问后台服务系统相当于跨域请求，这里，得使用<code>jsonp</code>，不了解的可以谷歌一下，回头有时间我会安利一下这个东西的原理，其实很简单，无非就是访问个js片段，具体看下面三点</p>
<blockquote>
<p>1、  jsonp通过script标签的src可以跨域请求的特性，加载资源</p>
<p>2、  将加载的资源（通过一个方法名将数据进行包裹）当做是js脚本解析</p>
<p>3、  定义一个回调函数，获取传入的数据</p>
</blockquote>
<p>添加<code>callback</code>参数</p>
<p>修改<code>controller</code>代码</p>
<p><code>MappingJacksonValue</code>要求<code>springmvc</code>必须是<code>4.1</code>以上版本。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line">package com.migo.controller.webs;</div><div class="line"></div><div class="line">import com.migo.pojo.ItemCatResult;</div><div class="line">import com.migo.service.ItemCatService;</div><div class="line">import com.migo.utils.JsonUtils;</div><div class="line">import org.slf4j.Logger;</div><div class="line">import org.slf4j.LoggerFactory;</div><div class="line">import org.springframework.beans.factory.annotation.Autowired;</div><div class="line">import org.springframework.http.HttpStatus;</div><div class="line">import org.springframework.http.ResponseEntity;</div><div class="line">import org.springframework.http.converter.json.MappingJacksonValue;</div><div class="line">import org.springframework.stereotype.Controller;</div><div class="line">import org.springframework.util.StringUtils;</div><div class="line">import org.springframework.web.bind.annotation.RequestMapping;</div><div class="line">import org.springframework.web.bind.annotation.RequestMethod;</div><div class="line"></div><div class="line">/**</div><div class="line"> * Author  知秋</div><div class="line"> * Created by kauw on 2016/11/17.</div><div class="line"> */</div><div class="line">@Controller</div><div class="line">@RequestMapping("webs/item/cat")</div><div class="line">public class WebsItemCatController &#123;</div><div class="line">    private static final Logger logger= LoggerFactory.getLogger(WebsItemCatController.class);</div><div class="line">    @Autowired</div><div class="line">    private ItemCatService itemCatService;</div><div class="line"></div><div class="line">    @RequestMapping(method = RequestMethod.GET)</div><div class="line">    public ResponseEntity&lt;Object&gt; getItemCatList(String callback)&#123;</div><div class="line">        try &#123;</div><div class="line">            if (logger.isInfoEnabled()) &#123;</div><div class="line">                logger.info("查询商品类目数据服务");</div><div class="line">            &#125;</div><div class="line">            ItemCatResult itemCatList = this.itemCatService.getItemCatList();</div><div class="line">            if (StringUtils.isEmpty(callback)) &#123;</div><div class="line">                String json = JsonUtils.objectToJson(itemCatList);</div><div class="line"></div><div class="line">                return ResponseEntity.ok((Object) json);</div><div class="line">            &#125;</div><div class="line">            //如果字符串不为空，需要支持jsonp调用</div><div class="line">            MappingJacksonValue mappingJacksonValue=new MappingJacksonValue(itemCatList);</div><div class="line">            mappingJacksonValue.setJsonpFunction(callback);</div><div class="line">            return ResponseEntity.ok((Object) mappingJacksonValue);</div><div class="line">        &#125; catch (Exception e) &#123;</div><div class="line">           logger.error("查询商品类目数据服务 失败", e);</div><div class="line">            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(null);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="运行结果："><a href="#运行结果：" class="headerlink" title="运行结果："></a>运行结果：</h4><p><img src="http://og0sybnix.bkt.clouddn.com/cgsx.png" alt=""></p>
<h3 id="进一步改造jsonp的支持"><a href="#进一步改造jsonp的支持" class="headerlink" title="进一步改造jsonp的支持"></a>进一步改造<code>jsonp</code>的支持</h3><p>这是之前写的一个关于消息转换器的Demo，拿出一个类来足以说明了，看代码注释即可(可以处理输入和输出)</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.zhiqiu.messageconverter;</div><div class="line"></div><div class="line"><span class="keyword">import</span> com.zhiqiu.domain.DemoObj;</div><div class="line"><span class="keyword">import</span> org.springframework.http.HttpInputMessage;</div><div class="line"><span class="keyword">import</span> org.springframework.http.HttpOutputMessage;</div><div class="line"><span class="keyword">import</span> org.springframework.http.converter.AbstractHttpMessageConverter;</div><div class="line"><span class="keyword">import</span> org.springframework.http.converter.HttpMessageNotReadableException;</div><div class="line"><span class="keyword">import</span> org.springframework.http.converter.HttpMessageNotWritableException;</div><div class="line"><span class="keyword">import</span> org.springframework.util.StreamUtils;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.io.IOException;</div><div class="line"><span class="keyword">import</span> java.nio.charset.Charset;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Author  知秋</div><div class="line"> * Created by kauw on 2016/10/1.</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyMessageConverter</span> <span class="keyword">extends</span> <span class="title">AbstractHttpMessageConverter</span>&lt;<span class="title">DemoObj</span>&gt;</span>&#123;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 表明只处理DemoObj这个类</div><div class="line">     * Class类的isAssignableFrom(Class cls)方法，</div><div class="line">     * 如果调用这个方法的class或接口 与 参数cls表示的类或接口相同，</div><div class="line">     * 或者是参数cls表示的类或接口的父类，则返回true。</div><div class="line">     * 形象地：自身类.class.isAssignableFrom(自身类或子类.class) 返回true</div><div class="line">     * <span class="doctag">@param</span> clazz</div><div class="line">     * <span class="doctag">@return</span></div><div class="line">     */</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">boolean</span> <span class="title">supports</span><span class="params">(Class&lt;?&gt; clazz)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> DemoObj.class.isAssignableFrom(clazz) ;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     *</div><div class="line">     *处理请求数据</div><div class="line">     */</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> DemoObj <span class="title">readInternal</span><span class="params">(Class&lt;? extends DemoObj&gt; clazz, HttpInputMessage inputMessage)</span> <span class="keyword">throws</span> IOException, HttpMessageNotReadableException </span>&#123;</div><div class="line">        String temp= StreamUtils.copyToString(inputMessage.getBody(),</div><div class="line">                Charset.forName(<span class="string">"utf-8"</span>));</div><div class="line">        String[] tempArr=temp.split(<span class="string">"-"</span>);</div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> DemoObj(<span class="keyword">new</span> Long(tempArr[<span class="number">0</span>]),tempArr[<span class="number">1</span>]);</div><div class="line">    &#125;</div><div class="line">    <span class="comment">/**</span></div><div class="line">    * <span class="doctag">@author</span> kauw 2016/10/1</div><div class="line">    * <span class="doctag">@time</span> 23:45</div><div class="line">    * 处理如何输出数据到response</div><div class="line">    */</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">writeInternal</span><span class="params">(DemoObj obj, HttpOutputMessage outputMessage)</span> <span class="keyword">throws</span> IOException, HttpMessageNotWritableException </span>&#123;</div><div class="line"></div><div class="line">        String out=<span class="string">"hello:"</span>+obj.getId()+<span class="string">"-"</span>+obj.getName();</div><div class="line">        outputMessage.getBody().write(out.getBytes());</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>因为<code>StringHttpMessageConverter</code>默认字符集为<code>ISO-8859-1</code> 如下部分源码码所示，修改<code>springmvc</code>配置文件的 <code>mvc:annotation-driven</code>，在自定义的转换器里去做就可以了，这里重写上面的 <code>writeInternal</code>方法</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StringHttpMessageConverter</span> <span class="keyword">extends</span> <span class="title">AbstractHttpMessageConverter</span>&lt;<span class="title">String</span>&gt; </span>&#123;</div><div class="line"></div><div class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Charset DEFAULT_CHARSET = Charset.forName(<span class="string">"ISO-8859-1"</span>);</div><div class="line"></div><div class="line"></div><div class="line">	<span class="keyword">private</span> <span class="keyword">final</span> Charset defaultCharset;</div><div class="line"></div><div class="line">	<span class="keyword">private</span> <span class="keyword">final</span> List&lt;Charset&gt; availableCharsets;</div><div class="line"></div><div class="line">	<span class="keyword">private</span> <span class="keyword">boolean</span> writeAcceptCharset = <span class="keyword">true</span>;</div></pre></td></tr></table></figure>
<h4 id="在common工程中添加自定义消息转换器"><a href="#在common工程中添加自定义消息转换器" class="headerlink" title="在common工程中添加自定义消息转换器"></a>在<code>common</code>工程中添加自定义消息转换器</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.migo.messageconverter;</div><div class="line"></div><div class="line"><span class="keyword">import</span> com.fasterxml.jackson.core.JsonEncoding;</div><div class="line"><span class="keyword">import</span> com.fasterxml.jackson.core.JsonProcessingException;</div><div class="line"><span class="keyword">import</span> org.apache.commons.io.IOUtils;</div><div class="line"><span class="keyword">import</span> org.apache.commons.lang3.StringUtils;</div><div class="line"><span class="keyword">import</span> org.springframework.http.HttpOutputMessage;</div><div class="line"><span class="keyword">import</span> org.springframework.http.converter.HttpMessageNotWritableException;</div><div class="line"><span class="keyword">import</span> org.springframework.http.converter.json.MappingJackson2HttpMessageConverter;</div><div class="line"><span class="keyword">import</span> org.springframework.web.context.request.RequestContextHolder;</div><div class="line"><span class="keyword">import</span> org.springframework.web.context.request.ServletRequestAttributes;</div><div class="line"></div><div class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</div><div class="line"><span class="keyword">import</span> java.io.IOException;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CallbackMappingJackson2HttpMessageConverter</span> <span class="keyword">extends</span> <span class="title">MappingJackson2HttpMessageConverter</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="comment">// 做jsonp的支持的标识，在请求参数中加该参数</span></div><div class="line">    <span class="keyword">private</span> String callbackName;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">writeInternal</span><span class="params">(Object object, HttpOutputMessage outputMessage)</span> <span class="keyword">throws</span> IOException,</span></div><div class="line">            HttpMessageNotWritableException &#123;</div><div class="line">        <span class="comment">// 从threadLocal中获取当前的Request对象</span></div><div class="line">        HttpServletRequest request = ((ServletRequestAttributes) RequestContextHolder</div><div class="line">                .currentRequestAttributes()).getRequest();</div><div class="line">        String callbackParam = request.getParameter(callbackName);</div><div class="line">        <span class="keyword">if</span> (StringUtils.isEmpty(callbackParam)) &#123;</div><div class="line">            <span class="comment">// 没有找到callback参数，直接返回json数据</span></div><div class="line">            <span class="keyword">super</span>.writeInternal(object, outputMessage);</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            JsonEncoding encoding = getJsonEncoding(outputMessage.getHeaders().getContentType());</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                String result = callbackParam + <span class="string">"("</span> + <span class="keyword">super</span>.getObjectMapper().writeValueAsString(object)</div><div class="line">                        + <span class="string">");"</span>;</div><div class="line">                IOUtils.write(result, outputMessage.getBody(), encoding.getJavaName());</div><div class="line">            &#125; <span class="keyword">catch</span> (JsonProcessingException ex) &#123;</div><div class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> HttpMessageNotWritableException(<span class="string">"Could not write JSON: "</span> + ex.getMessage(), ex);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getCallbackName</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> callbackName;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCallbackName</span><span class="params">(String callbackName)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.callbackName = callbackName;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="在manage工程中配置springmvc-xml"><a href="#在manage工程中配置springmvc-xml" class="headerlink" title="在manage工程中配置springmvc.xml"></a>在<code>manage</code>工程中配置<code>springmvc.xml</code></h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></div><div class="line">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xmlns:p</span>=<span class="string">"http://www.springframework.org/schema/p"</span></div><div class="line">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></div><div class="line">       <span class="attr">xmlns:mvc</span>=<span class="string">"http://www.springframework.org/schema/mvc"</span></div><div class="line">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></div><div class="line">        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd</div><div class="line">        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.migo.controller"</span> /&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 加载配置文件 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">"classpath:properties/*.properties"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">mvc:message-converters</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"com.migo.messageconverter.CallbackMappingJackson2HttpMessageConverter"</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"callbackName"</span> <span class="attr">value</span>=<span class="string">"callback"</span>/&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">mvc:message-converters</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">mvc:annotation-driven</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">bean</span></span></div><div class="line">            <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.InternalResourceViewResolver"</span>&gt;</div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"prefix"</span> <span class="attr">value</span>=<span class="string">"/WEB-INF/views/"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suffix"</span> <span class="attr">value</span>=<span class="string">".jsp"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- 配置多媒体解析器 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"multipartResolver"</span></span></div><div class="line">          <span class="attr">class</span>=<span class="string">"org.springframework.web.multipart.commons.CommonsMultipartResolver"</span>&gt;</div><div class="line">        <span class="comment">&lt;!-- 设定默认编码 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"defaultEncoding"</span> <span class="attr">value</span>=<span class="string">"UTF-8"</span>/&gt;</span></div><div class="line">        <span class="comment">&lt;!-- 设定文件上传的最大值5MB，5*1024*1024 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxUploadSize"</span> <span class="attr">value</span>=<span class="string">"5242880"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="重启项目进行测试：结果如下图："><a href="#重启项目进行测试：结果如下图：" class="headerlink" title="重启项目进行测试：结果如下图："></a>重启项目进行测试：结果如下图：</h4><p><img src="http://og0sybnix.bkt.clouddn.com/ecdd.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Migo商城2-0-门户首页左侧商品类目显示-十四&quot;&gt;&lt;a href=&quot;#Migo商城2-0-门户首页左侧商品类目显示-十四&quot; class=&quot;headerlink&quot; title=&quot;Migo商城2.0  门户首页左侧商品类目显示 十四&quot;&gt;&lt;/a&gt;Migo商城2.0  门户首页左侧商品类目显示 十四&lt;/h2&gt;&lt;p&gt;新建后台提供系统服务，这里就不再新建专门提供服务的项目了(也是因为访问的网址里有rest这个字眼了)&lt;/p&gt;
&lt;p&gt;先看下jd的商品类目返回的数据格式：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://og0sybnix.bkt.clouddn.com/jdsplmfx.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Migo商城2.0" scheme="https://muyinchen.github.io/categories/Migo%E5%95%86%E5%9F%8E2-0/"/>
    
    
      <category term="Migo商城2.0" scheme="https://muyinchen.github.io/tags/Migo%E5%95%86%E5%9F%8E2-0/"/>
    
  </entry>
  
  <entry>
    <title>Migo商城2.0  搭建前台系统 十三</title>
    <link href="https://muyinchen.github.io/2016/11/16/Migo%E5%95%86%E5%9F%8E2.0%20%E6%90%AD%E5%BB%BA%E5%89%8D%E5%8F%B0%E7%B3%BB%E7%BB%9F%20%E5%8D%81%E4%B8%89/"/>
    <id>https://muyinchen.github.io/2016/11/16/Migo商城2.0 搭建前台系统 十三/</id>
    <published>2016-11-16T13:57:05.562Z</published>
    <updated>2016-11-16T13:58:23.134Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Migo商城2-0-搭建前台系统-十三"><a href="#Migo商城2-0-搭建前台系统-十三" class="headerlink" title="Migo商城2.0 搭建前台系统 十三"></a>Migo商城2.0 搭建前台系统 十三</h2><p>先来张本系统的系统架构：</p>
<p><img src="http://og0sybnix.bkt.clouddn.com/abc.bmp" alt=""></p>
<p>搭建商城门户系统，也就是前台系统</p>
<p>所使用的技术</p>
<a id="more"></a>
<p>后台技术： <code>Spring</code> <code>SpringMVC</code></p>
<p>前台技术：<code>html</code>、<code>CSS</code>、<code>JS</code></p>
<blockquote>
<p>如果不使用Mybatis，商品的数据从何而来？ – 来源于<code>Mysql</code>数据库</p>
<p>获取数据的途径：</p>
<p>1、  从JDBC获取</p>
<p>a)        优点</p>
<pre><code>i.             直接，获取的途径较短，简单
</code></pre><p>b)        缺点</p>
<pre><code>   i.             对后台系统团队而言，数据不安全（只要开放的账户是只读的账户即可）

 ii.             前端系统团队需要有学习的成本，才能使用数据库

iii.             依赖、耦合度太高，后端团队将数据库结构修改，那么其他团队必须跟着修改逻辑，才能使用

iv.             直接走数据库查询，无法添加缓存逻辑
</code></pre><p>2、  通过后台系统接口获取</p>
<p>a)        优点</p>
<pre><code>   i.             耦合度降低，后端团队只要保证接口的返回数据格式不变化，其他团队就无需升级

 ii.             数据安全

iii.             前端团队无需了解学习后端团队的底层数据库结构

iv.             后端团队可以在接口处添加缓存逻辑
</code></pre><p>b)        缺点</p>
<p>获取的路径较长（不是真正的缺点）</p>
</blockquote>
<h3 id="创建migo-portal"><a href="#创建migo-portal" class="headerlink" title="创建migo-portal"></a>创建migo-portal</h3><p>就是个maven工程，过程就不多说了</p>
<p>导入依赖，<code>pom.xml</code>内容：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></div><div class="line">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></div><div class="line">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</div><div class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.migo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></div><div class="line"></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>migo-portal<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.migo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>common<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="comment">&lt;!-- 单元测试 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-log4j12<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="comment">&lt;!-- Jackson Json处理工具包 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="comment">&lt;!-- JSP相关 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="comment">&lt;!-- Apache工具组件 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-lang3<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"></div><div class="line"></div><div class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tomcat.maven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tomcat7-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">port</span>&gt;</span>8082<span class="tag">&lt;/<span class="name">port</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">path</span>&gt;</span>/<span class="tag">&lt;/<span class="name">path</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="工程结构如下："><a href="#工程结构如下：" class="headerlink" title="工程结构如下："></a>工程结构如下：</h4><p><img src="http://og0sybnix.bkt.clouddn.com/qianduanxt.png" alt=""></p>
<h5 id="applicationContext-xml"><a href="#applicationContext-xml" class="headerlink" title="applicationContext.xml"></a><code>applicationContext.xml</code></h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></div><div class="line">	<span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span> <span class="attr">xmlns:p</span>=<span class="string">"http://www.springframework.org/schema/p"</span></div><div class="line">	<span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span> <span class="attr">xmlns:tx</span>=<span class="string">"http://www.springframework.org/schema/tx"</span></div><div class="line">	<span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></div><div class="line">	<span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd</span></div><div class="line">	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd</div><div class="line">	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd</div><div class="line">	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd"&gt;</div><div class="line"></div><div class="line">	<span class="comment">&lt;!-- 加载配置文件--&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">"classpath:evn/*.properties"</span>/&gt;</span></div><div class="line"></div><div class="line">	</div><div class="line">	<span class="comment">&lt;!-- 扫描包 --&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.migo"</span>/&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></div></pre></td></tr></table></figure>
<h5 id="springmvc-xml"><a href="#springmvc-xml" class="headerlink" title="springmvc.xml"></a><code>springmvc.xml</code></h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></div><div class="line">	<span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xmlns:p</span>=<span class="string">"http://www.springframework.org/schema/p"</span></div><div class="line">	<span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></div><div class="line">	<span class="attr">xmlns:mvc</span>=<span class="string">"http://www.springframework.org/schema/mvc"</span></div><div class="line">	<span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd</span></div><div class="line">        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd</div><div class="line">        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd"&gt;</div><div class="line"></div><div class="line">	<span class="comment">&lt;!-- 注解驱动 --&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">mvc:annotation-driven</span>/&gt;</span></div><div class="line">	</div><div class="line">	<span class="comment">&lt;!-- Controller的扫描包 --&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.migo.portal.controller"</span>/&gt;</span></div><div class="line">	</div><div class="line"></div><div class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.InternalResourceViewResolver"</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"prefix"</span> <span class="attr">value</span>=<span class="string">"/WEB-INF/views/"</span>/&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suffix"</span> <span class="attr">value</span>=<span class="string">".jsp"</span>/&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line">	</div><div class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></div></pre></td></tr></table></figure>
<h5 id="web-xml"><a href="#web-xml" class="headerlink" title="web.xml"></a><code>web.xml</code></h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></div><div class="line">         <span class="attr">xmlns</span>=<span class="string">"http://java.sun.com/xml/ns/javaee"</span></div><div class="line">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"</span></div><div class="line">         <span class="attr">id</span>=<span class="string">"WebApp_ID"</span> <span class="attr">version</span>=<span class="string">"2.5"</span>&gt;</div><div class="line">    <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>migo-portal<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">context-param</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:spring/applicationContext*.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!--Spring的ApplicationContext 载入 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">listener</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">listener</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- 编码过滤器，以UTF8编码 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">filter</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>UTF8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- 配置SpringMVC框架入口 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>migo-portal<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:spring/springmvc.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>migo-portal<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!--</span></div><div class="line">                       伪静态有利于SEO（搜索引擎优化）</div><div class="line">         --&gt;</div><div class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.html<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.html<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></div></pre></td></tr></table></figure>
<h5 id="最后，导入静态页面，见源码"><a href="#最后，导入静态页面，见源码" class="headerlink" title="最后，导入静态页面，见源码"></a>最后，导入静态页面，见源码</h5><h4 id="写一个controller展示首页"><a href="#写一个controller展示首页" class="headerlink" title="写一个controller展示首页"></a>写一个<code>controller</code>展示首页</h4><p><code>IndexController</code></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.migo.portal.controller;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMethod;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Author  知秋</div><div class="line"> * Created by kauw on 2016/11/16.</div><div class="line"> */</div><div class="line"><span class="meta">@Controller</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IndexController</span> </span>&#123;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 首页</div><div class="line">     */</div><div class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"index"</span>,method = RequestMethod.GET)</div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">()</span></span>&#123;</div><div class="line"></div><div class="line">        <span class="keyword">return</span> <span class="string">"index"</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h5 id="配置nginx"><a href="#配置nginx" class="headerlink" title="配置nginx"></a>配置<code>nginx</code></h5><p><img src="http://og0sybnix.bkt.clouddn.com/nginxpz1.png" alt=""></p>
<h5 id="配置本地host"><a href="#配置本地host" class="headerlink" title="配置本地host"></a>配置本地host</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="number">192.168</span>.42.128 www.migo.com</div></pre></td></tr></table></figure>
<p>测试：</p>
<p><img src="http://og0sybnix.bkt.clouddn.com/syzs.png" alt=""></p>
<p>搭建完毕，本篇到此为止</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Migo商城2-0-搭建前台系统-十三&quot;&gt;&lt;a href=&quot;#Migo商城2-0-搭建前台系统-十三&quot; class=&quot;headerlink&quot; title=&quot;Migo商城2.0 搭建前台系统 十三&quot;&gt;&lt;/a&gt;Migo商城2.0 搭建前台系统 十三&lt;/h2&gt;&lt;p&gt;先来张本系统的系统架构：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://og0sybnix.bkt.clouddn.com/abc.bmp&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;搭建商城门户系统，也就是前台系统&lt;/p&gt;
&lt;p&gt;所使用的技术&lt;/p&gt;
    
    </summary>
    
      <category term="Migo商城2.0" scheme="https://muyinchen.github.io/categories/Migo%E5%95%86%E5%9F%8E2-0/"/>
    
    
      <category term="Migo商城2.0" scheme="https://muyinchen.github.io/tags/Migo%E5%95%86%E5%9F%8E2-0/"/>
    
  </entry>
  
  <entry>
    <title>Migo商城2.0 新增商品添加规格参数的实现  十二</title>
    <link href="https://muyinchen.github.io/2016/11/15/Migo%E5%95%86%E5%9F%8E2.0%20%20%E6%96%B0%E5%A2%9E%E5%95%86%E5%93%81%E6%B7%BB%E5%8A%A0%E8%A7%84%E6%A0%BC%E5%8F%82%E6%95%B0%E7%9A%84%E5%AE%9E%E7%8E%B0%20%20%E5%8D%81%E4%BA%8C/"/>
    <id>https://muyinchen.github.io/2016/11/15/Migo商城2.0  新增商品添加规格参数的实现  十二/</id>
    <published>2016-11-15T15:00:15.122Z</published>
    <updated>2016-11-15T15:01:28.042Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Migo商城2-0-新增商品添加规格参数的实现-十二"><a href="#Migo商城2-0-新增商品添加规格参数的实现-十二" class="headerlink" title="Migo商城2.0  新增商品添加规格参数的实现  十二"></a>Migo商城2.0  新增商品添加规格参数的实现  十二</h2><h3 id="页面展示规格参数模板"><a href="#页面展示规格参数模板" class="headerlink" title="页面展示规格参数模板"></a>页面展示规格参数模板</h3><p>在商品添加或者商品修改时，根据商品的分类id查询此商品分类对应的规格参数模板。根据规格参数模板，生成一个表单供用户使用</p>
<a id="more"></a>
<p><img src="http://og0sybnix.bkt.clouddn.com/xzspmb.png" alt=""></p>
<h4 id="迭代相应js代码"><a href="#迭代相应js代码" class="headerlink" title="迭代相应js代码"></a>迭代相应js代码</h4><p>为实现restful风格 修改为ajax格式的，同时和其他功能公用同一个方法，改造访问<code>URL</code> <code>url: &quot;/rest/item/param/&quot; + node.id</code>：</p>
<p>和上面对比应该发现，restful风格代码更加直观，逻辑处理更加清晰可见！</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">changeItemParam : <span class="function"><span class="keyword">function</span>(<span class="params">node,formId</span>)</span>&#123;</div><div class="line">    	$.ajax(&#123;</div><div class="line">			   <span class="attr">type</span>: <span class="string">"GET"</span>,</div><div class="line">			   <span class="attr">url</span>: <span class="string">"/rest/item/param/"</span> + node.id,</div><div class="line">			   <span class="attr">statusCode</span> : &#123;</div><div class="line">				   <span class="number">200</span> : <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</div><div class="line">					   $(<span class="string">"#"</span>+formId+<span class="string">" .params"</span>).show();</div><div class="line">						 <span class="keyword">var</span> paramData = <span class="built_in">JSON</span>.parse(data.paramData);</div><div class="line">						 <span class="keyword">var</span> html = <span class="string">"&lt;ul&gt;"</span>;</div><div class="line">						 <span class="keyword">for</span>(<span class="keyword">var</span> i <span class="keyword">in</span> paramData)&#123;</div><div class="line">							 <span class="keyword">var</span> pd = paramData[i];</div><div class="line">							 html+=<span class="string">"&lt;li&gt;&lt;table&gt;"</span>;</div><div class="line">							 html+=<span class="string">"&lt;tr&gt;&lt;td colspan=\"2\" class=\"group\"&gt;"</span>+pd.group+<span class="string">"&lt;/td&gt;&lt;/tr&gt;"</span>;</div><div class="line">							 </div><div class="line">							 <span class="keyword">for</span>(<span class="keyword">var</span> j <span class="keyword">in</span> pd.params)&#123;</div><div class="line">								 <span class="keyword">var</span> ps = pd.params[j];</div><div class="line">								 html+=<span class="string">"&lt;tr&gt;&lt;td class=\"param\"&gt;&lt;span&gt;"</span>+ps+<span class="string">"&lt;/span&gt;: &lt;/td&gt;&lt;td&gt;&lt;input autocomplete=\"off\" type=\"text\"/&gt;&lt;/td&gt;&lt;/tr&gt;"</span>;</div><div class="line">							 &#125;</div><div class="line">							 </div><div class="line">							 html+=<span class="string">"&lt;/li&gt;&lt;/table&gt;"</span>;</div><div class="line">						 &#125;</div><div class="line">						 html+= <span class="string">"&lt;/ul&gt;"</span>;</div><div class="line">						 $(<span class="string">"#"</span>+formId+<span class="string">" .params td"</span>).eq(<span class="number">1</span>).html(html);</div><div class="line">				   &#125;,</div><div class="line">				   <span class="number">404</span> : <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">					   $(<span class="string">"#"</span>+formId+<span class="string">" .params"</span>).hide();</div><div class="line">					   $(<span class="string">"#"</span>+formId+<span class="string">" .params td"</span>).eq(<span class="number">1</span>).empty();</div><div class="line">				   &#125;,</div><div class="line">				   <span class="number">500</span> : <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">					   alert(<span class="string">"error"</span>);</div><div class="line">				   &#125;</div><div class="line">			   &#125;</div><div class="line">			&#125;);</div><div class="line">&#125;,</div></pre></td></tr></table></figure>
<h4 id="展示效果"><a href="#展示效果" class="headerlink" title="展示效果"></a>展示效果</h4><p><img src="http://og0sybnix.bkt.clouddn.com/spmbzs.png" alt=""></p>
<h4 id="通过js代码把用户提交的数据生成json数据格式"><a href="#通过js代码把用户提交的数据生成json数据格式" class="headerlink" title="通过js代码把用户提交的数据生成json数据格式"></a>通过js代码把用户提交的数据生成json数据格式</h4><p>上章有讲，可以对比下</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//输入的规格参数数据保存为json</span></div><div class="line">		<span class="keyword">var</span> paramJson = [];</div><div class="line">		$(<span class="string">"#itemAddForm .params li"</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params">i,e</span>)</span>&#123;</div><div class="line">			<span class="keyword">var</span> trs = $(e).find(<span class="string">"tr"</span>);</div><div class="line">			<span class="keyword">var</span> group = trs.eq(<span class="number">0</span>).text();</div><div class="line">			<span class="keyword">var</span> ps = [];</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">1</span>;i&lt;trs.length;i++)&#123;</div><div class="line">				<span class="keyword">var</span> tr = trs.eq(i);</div><div class="line">				ps.push(&#123;</div><div class="line">					<span class="string">"k"</span> : $.trim(tr.find(<span class="string">"td"</span>).eq(<span class="number">0</span>).find(<span class="string">"span"</span>).text()),</div><div class="line">					<span class="string">"v"</span> : $.trim(tr.find(<span class="string">"input"</span>).val())</div><div class="line">				&#125;);</div><div class="line">			&#125;</div><div class="line">			paramJson.push(&#123;</div><div class="line">				<span class="string">"group"</span> : group,</div><div class="line">				<span class="string">"params"</span>: ps</div><div class="line">			&#125;);</div><div class="line">		&#125;);</div><div class="line">		paramJson = <span class="built_in">JSON</span>.stringify(paramJson);</div><div class="line">		</div><div class="line">		$(<span class="string">"#itemAddForm [name=itemParams]"</span>).val(paramJson);</div></pre></td></tr></table></figure>
<h4 id="后台实现"><a href="#后台实现" class="headerlink" title="后台实现"></a>后台实现</h4><blockquote>
<p>只需要在Controller中添加一个参数，接收商品的规格参数即可。</p>
<p>Service中也需要添加一个参数，增加插入规格参数表的处理。</p>
</blockquote>
<h5 id="改造ItemService-saveItem中-方法-如下："><a href="#改造ItemService-saveItem中-方法-如下：" class="headerlink" title="改造ItemService  saveItem中 方法 如下："></a>改造<code>ItemService</code>  <code>saveItem</code>中 方法 如下：</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//desc参考前端页面传过来的数据是序列化成字符串的</span></div><div class="line">    <span class="function"><span class="keyword">public</span> Boolean <span class="title">saveItem</span><span class="params">(Item item,String desc,String itemParams)</span></span>&#123;</div><div class="line">        <span class="comment">// 1、生成商品id</span></div><div class="line">        <span class="keyword">long</span> itemId = IDUtils.genItemId();</div><div class="line">        <span class="comment">// 2、对TbItem对象补全属性。</span></div><div class="line">        item.setId(itemId);</div><div class="line"></div><div class="line">        <span class="comment">//'商品状态，1-正常，2-下架，3-删除'</span></div><div class="line">        item.setStatus(<span class="number">1</span>);</div><div class="line"></div><div class="line"></div><div class="line">        <span class="comment">//保存商品数据</span></div><div class="line">        Integer save = <span class="keyword">super</span>.save(item);</div><div class="line"></div><div class="line">        ItemDesc itemDesc=<span class="keyword">new</span> ItemDesc();</div><div class="line">        itemDesc.setItemDesc(desc);</div><div class="line">        itemDesc.setItemId(item.getId());</div><div class="line"></div><div class="line">        <span class="comment">//保存商品描述数据</span></div><div class="line">        Integer save1 = <span class="keyword">this</span>.itemDescService.save(itemDesc);</div><div class="line"></div><div class="line">        <span class="comment">//保存商品规格参数数据</span></div><div class="line">        ItemParamItem itemParamItem=<span class="keyword">new</span> ItemParamItem();</div><div class="line">        itemParamItem.setItemId(item.getId());</div><div class="line">        itemParamItem.setParamData(itemParams);</div><div class="line">        Integer save2 = <span class="keyword">this</span>.itemParamItemService.save(itemParamItem);</div><div class="line">        <span class="keyword">return</span> save.intValue()==<span class="number">1</span>&amp;&amp;save1.intValue()==<span class="number">1</span>&amp;&amp;save2==<span class="number">1</span>;</div><div class="line"></div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<h5 id="改造controller"><a href="#改造controller" class="headerlink" title="改造controller"></a>改造<code>controller</code></h5><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line">     * 新增商品</div><div class="line">     */</div><div class="line">    <span class="meta">@RequestMapping</span>(method = RequestMethod.POST)</div><div class="line">    <span class="function"><span class="keyword">public</span> ResponseEntity&lt;Void&gt; <span class="title">addItem</span><span class="params">(Item item, @RequestParam(<span class="string">"desc"</span>)</span> String desc,</span></div><div class="line">                                        @<span class="title">RequestParam</span><span class="params">(<span class="string">"itemParams"</span>)</span> String itemParams) &#123;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (LOGGER.isInfoEnabled()) &#123;</div><div class="line">            LOGGER.info(<span class="string">"新增商品，item = &#123;&#125;, desc = &#123;&#125;"</span>, item, desc);</div><div class="line">        &#125;</div><div class="line">        <span class="comment">/**</span></div><div class="line">         * TODO 校验以后完善</div><div class="line">         */</div><div class="line">        <span class="keyword">if</span> (item.getPrice() == <span class="keyword">null</span> || item.getPrice().intValue() == <span class="number">0</span>) &#123;</div><div class="line">            <span class="keyword">if</span> (LOGGER.isInfoEnabled()) &#123;</div><div class="line">                LOGGER.info(<span class="string">"新增商品时用户输入的参数不合法，item = &#123;&#125;, desc = &#123;&#125;,itemParams"</span>, item, desc);</div><div class="line">            &#125;</div><div class="line">            <span class="comment">// 参数有误，返回400</span></div><div class="line">            <span class="comment">//ResponseEntity&lt;Void&gt; build();</span></div><div class="line">            <span class="keyword">return</span> ResponseEntity.status(HttpStatus.BAD_REQUEST).build();</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            Boolean saveItem = <span class="keyword">this</span>.itemService.saveItem(item, desc,itemParams);</div><div class="line">            <span class="keyword">if</span> (saveItem) &#123;</div><div class="line">                <span class="keyword">if</span> (LOGGER.isInfoEnabled()) &#123;</div><div class="line">                    LOGGER.info(<span class="string">"新增商品成功! id = &#123;&#125;"</span>, item.getId());</div><div class="line">                &#125;</div><div class="line">                <span class="comment">//CREATED(201, "Created"),</span></div><div class="line">                <span class="keyword">return</span> ResponseEntity.status(HttpStatus.CREATED).build();</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">            LOGGER.error(<span class="string">"新增商品失败! item = "</span> + item + <span class="string">", desc = "</span> + desc, e);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).build();</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>运行项目，添加商品</p>
<p><img src="http://og0sybnix.bkt.clouddn.com/addsp1.png" alt=""></p>
<p>数据库存储数据格式：</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line">[</div><div class="line">    &#123;</div><div class="line">        <span class="attr">"group"</span>: <span class="string">"主体"</span>,</div><div class="line">        <span class="attr">"params"</span>: [</div><div class="line">            &#123;</div><div class="line">                <span class="attr">"k"</span>: <span class="string">"品牌"</span>,</div><div class="line">                <span class="attr">"v"</span>: <span class="string">"OPPO"</span></div><div class="line">            &#125;,</div><div class="line">            &#123;</div><div class="line">                <span class="attr">"k"</span>: <span class="string">"型号"</span>,</div><div class="line">                <span class="attr">"v"</span>: <span class="string">"R9s"</span></div><div class="line">            &#125;,</div><div class="line">            &#123;</div><div class="line">                <span class="attr">"k"</span>: <span class="string">"颜色"</span>,</div><div class="line">                <span class="attr">"v"</span>: <span class="string">"黑色"</span></div><div class="line">            &#125;,</div><div class="line">            &#123;</div><div class="line">                <span class="attr">"k"</span>: <span class="string">"上市年份"</span>,</div><div class="line">                <span class="attr">"v"</span>: <span class="string">"2016年"</span></div><div class="line">            &#125;</div><div class="line">        ]</div><div class="line">    &#125;,</div><div class="line">    &#123;</div><div class="line">        <span class="attr">"group"</span>: <span class="string">"网络"</span>,</div><div class="line">        <span class="attr">"params"</span>: [</div><div class="line">            &#123;</div><div class="line">                <span class="attr">"k"</span>: <span class="string">"4G网络制式"</span>,</div><div class="line">                <span class="attr">"v"</span>: <span class="string">"4G：移动（TD-LTE)；4G：联通(FDD-LTE)；4G：电信(FDD-LTE)"</span></div><div class="line">            &#125;,</div><div class="line">            &#123;</div><div class="line">                <span class="attr">"k"</span>: <span class="string">"3G网络制式"</span>,</div><div class="line">                <span class="attr">"v"</span>: <span class="string">"3G：移动(TD-SCDMA)；3G：联通(WCDMA)；3G：电信(CDMA2000)；2G：移动（GSM）+联通(GSM)；2G：电信(CDMA)"</span></div><div class="line">            &#125;,</div><div class="line">            &#123;</div><div class="line">                <span class="attr">"k"</span>: <span class="string">"2G网络制式"</span>,</div><div class="line">                <span class="attr">"v"</span>: <span class="string">"2G：GSM 850/900/1800/1900；2G：CDMA 800；3G：TD-SCDMA 1900/2000；3G：CDMA2000；3G：WCDMA：850/900/1700/1900/2100MHz"</span></div><div class="line">            &#125;</div><div class="line">        ]</div><div class="line">    &#125;,</div><div class="line">    &#123;</div><div class="line">        <span class="attr">"group"</span>: <span class="string">"存储"</span>,</div><div class="line">        <span class="attr">"params"</span>: [</div><div class="line">            &#123;</div><div class="line">                <span class="attr">"k"</span>: <span class="string">"机身内存"</span>,</div><div class="line">                <span class="attr">"v"</span>: <span class="string">"4GB"</span></div><div class="line">            &#125;,</div><div class="line">            &#123;</div><div class="line">                <span class="attr">"k"</span>: <span class="string">"储存卡类型"</span>,</div><div class="line">                <span class="attr">"v"</span>: <span class="string">"支持MicroSD（TF）"</span></div><div class="line">            &#125;</div><div class="line">        ]</div><div class="line">    &#125;</div><div class="line">]</div></pre></td></tr></table></figure>
<h3 id="编辑商品"><a href="#编辑商品" class="headerlink" title="编辑商品"></a>编辑商品</h3><h4 id="规格参数的回显"><a href="#规格参数的回显" class="headerlink" title="规格参数的回显"></a>规格参数的回显</h4><p>编辑商品时通过商品id查询规格参数数据</p>
<p>前台js代码(<code>item-list.jsp</code>)</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//加载商品规格</span></div><div class="line">        			$.getJSON(<span class="string">'/rest/item/param/item/'</span>+data.id,<span class="function"><span class="keyword">function</span>(<span class="params">_data</span>)</span>&#123;</div><div class="line">        				<span class="keyword">if</span>(_data &amp;&amp; _data.status == <span class="number">200</span> &amp;&amp; _data.data &amp;&amp; _data.data.paramData)&#123;</div><div class="line">        					$(<span class="string">"#itemeEditForm .params"</span>).show();</div><div class="line">        					$(<span class="string">"#itemeEditForm [name=itemParams]"</span>).val(_data.data.paramData);</div><div class="line">        					$(<span class="string">"#itemeEditForm [name=itemParamId]"</span>).val(_data.data.id);</div><div class="line">        					</div><div class="line">        					<span class="comment">//回显商品规格</span></div><div class="line">        					 <span class="keyword">var</span> paramData = <span class="built_in">JSON</span>.parse(_data.data.paramData);</div><div class="line">        					</div><div class="line">        					 <span class="keyword">var</span> html = <span class="string">"&lt;ul&gt;"</span>;</div><div class="line">        					 <span class="keyword">for</span>(<span class="keyword">var</span> i <span class="keyword">in</span> paramData)&#123;</div><div class="line">        						 <span class="keyword">var</span> pd = paramData[i];</div><div class="line">        						 html+=<span class="string">"&lt;li&gt;&lt;table&gt;"</span>;</div><div class="line">        						 html+=<span class="string">"&lt;tr&gt;&lt;td colspan=\"2\" class=\"group\"&gt;"</span>+pd.group+<span class="string">"&lt;/td&gt;&lt;/tr&gt;"</span>;</div><div class="line">        						 </div><div class="line">        						 <span class="keyword">for</span>(<span class="keyword">var</span> j <span class="keyword">in</span> pd.params)&#123;</div><div class="line">        							 <span class="keyword">var</span> ps = pd.params[j];</div><div class="line">        							 html+=<span class="string">"&lt;tr&gt;&lt;td class=\"param\"&gt;&lt;span&gt;"</span>+ps.k+<span class="string">"&lt;/span&gt;: &lt;/td&gt;&lt;td&gt;&lt;input autocomplete=\"off\" type=\"text\" value='"</span>+ps.v+<span class="string">"'/&gt;&lt;/td&gt;&lt;/tr&gt;"</span>;</div><div class="line">        						 &#125;</div><div class="line">        						 </div><div class="line">        						 html+=<span class="string">"&lt;/li&gt;&lt;/table&gt;"</span>;</div><div class="line">        					 &#125;</div><div class="line">        					 html+= <span class="string">"&lt;/ul&gt;"</span>;</div><div class="line">        					 $(<span class="string">"#itemeEditForm .params td"</span>).eq(<span class="number">1</span>).html(html);</div><div class="line">        				&#125;</div><div class="line">        			&#125;);</div></pre></td></tr></table></figure>
<h5 id="后台实现："><a href="#后台实现：" class="headerlink" title="后台实现："></a>后台实现：</h5><p>访问<code>URL</code>: <code>/rest/item/param/item/{itemId}</code></p>
<p><code>controller</code></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.migo.controller;</div><div class="line"></div><div class="line"><span class="keyword">import</span> com.migo.pojo.ItemParamItem;</div><div class="line"><span class="keyword">import</span> com.migo.service.ItemParamItemService;</div><div class="line"><span class="keyword">import</span> org.slf4j.Logger;</div><div class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</div><div class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</div><div class="line"><span class="keyword">import</span> org.springframework.http.HttpStatus;</div><div class="line"><span class="keyword">import</span> org.springframework.http.ResponseEntity;</div><div class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMethod;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Author  知秋</div><div class="line"> * Created by kauw on 2016/11/14.</div><div class="line"> */</div><div class="line"><span class="meta">@Controller</span></div><div class="line"><span class="meta">@RequestMapping</span>(<span class="string">"item/param/item"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ItemParamItemController</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger logger= LoggerFactory.getLogger(ItemParamItemController.class);</div><div class="line"></div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="keyword">private</span> ItemParamItemService itemParamItemService;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 根据商品Id查询商品规格参数数据</div><div class="line">     */</div><div class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"&#123;itemId&#125;"</span>,method = RequestMethod.GET)</div><div class="line">    <span class="function"><span class="keyword">public</span> ResponseEntity&lt;ItemParamItem&gt; <span class="title">showItemParam</span><span class="params">(@PathVariable(<span class="string">"itemId"</span>)</span> Long itemId)</span>&#123;</div><div class="line"></div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            <span class="keyword">if</span>(logger.isInfoEnabled())&#123;</div><div class="line">                logger.info(<span class="string">"根据商品Id查询商品规格参数数据 itemId = &#123;&#125;"</span>,itemId);</div><div class="line">            &#125;</div><div class="line">            ItemParamItem example=<span class="keyword">new</span> ItemParamItem();</div><div class="line">            example.setItemId(itemId);</div><div class="line">            ItemParamItem itemParamItem = <span class="keyword">this</span>.itemParamItemService.queryOne(example);</div><div class="line">            <span class="keyword">if</span> (<span class="keyword">null</span>==itemParamItem)&#123;</div><div class="line">                <span class="keyword">return</span> ResponseEntity.status(HttpStatus.NOT_FOUND).body(<span class="keyword">null</span>);</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">return</span> ResponseEntity.ok(itemParamItem);</div><div class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">          logger.error(<span class="string">"根据商品Id查询商品规格参数数据 失败 itemId = &#123;&#125;"</span>,itemId,e);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(<span class="keyword">null</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>运行项目：发现无法回显商品描述，还有商品参数回显404 后台日志信息：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">2016-11-15 21:55:59,022 [http-bio-8080-exec-10] [com.migo.controller.ItemParamItemController]-[INFO] 根据商品Id查询商品规格参数数据 itemId = 147921564322726  //开始！！！！！！！！！！！</div><div class="line">2016-11-15 21:55:59,022 [http-bio-8080-exec-10] [org.springframework.jdbc.datasource.DataSourceTransactionManager]-[DEBUG] Creating new transaction with name [com.migo.service.ItemParamItemService.queryOne]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly</div><div class="line">2016-11-15 21:55:59,026 [http-bio-8080-exec-10] [org.springframework.jdbc.datasource.DataSourceTransactionManager]-[DEBUG] Acquired Connection [com.mysql.jdbc.JDBC4Connection@5f46a96d] for JDBC transaction</div><div class="line">2016-11-15 21:55:59,026 [http-bio-8080-exec-10] [org.springframework.jdbc.datasource.DataSourceUtils]-[DEBUG] Setting JDBC Connection [com.mysql.jdbc.JDBC4Connection@5f46a96d] read-only</div><div class="line">2016-11-15 21:55:59,026 [http-bio-8080-exec-10] [org.springframework.jdbc.datasource.DataSourceTransactionManager]-[DEBUG] Switching JDBC Connection [com.mysql.jdbc.JDBC4Connection@5f46a96d] to manual commit</div><div class="line">2016-11-15 21:55:59,027 [http-bio-8080-exec-10] [org.mybatis.spring.SqlSessionUtils]-[DEBUG] Creating a new SqlSession</div><div class="line">2016-11-15 21:55:59,027 [http-bio-8080-exec-10] [org.mybatis.spring.SqlSessionUtils]-[DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3fd7b476]</div><div class="line">2016-11-15 21:55:59,027 [http-bio-8080-exec-10] [org.mybatis.spring.transaction.SpringManagedTransaction]-[DEBUG] JDBC Connection [com.mysql.jdbc.JDBC4Connection@5f46a96d] will be managed by Spring</div><div class="line">2016-11-15 21:55:59,028 [http-bio-8080-exec-10] [com.migo.mapper.ItemParamItemMapper.selectOne]-[DEBUG] ==&gt;  Preparing: SELECT created,updated,id,item_id,param_data FROM tb_item_param_item WHERE item_id = ?   //发送sql语句！！！！！！</div><div class="line">2016-11-15 21:55:59,028 [http-bio-8080-exec-10] [com.migo.mapper.ItemParamItemMapper.selectOne]-[DEBUG] ==&gt; Parameters: 147921564322726(Long)  //传递参数 ！！！！！</div><div class="line">2016-11-15 21:55:59,028 [http-bio-8080-exec-10] [com.migo.mapper.ItemParamItemMapper.selectOne]-[DEBUG] &lt;==      Total: 0 //查询结果！！！！！！！</div></pre></td></tr></table></figure>
<p>查后台数据库，发现新增加商品id正常，但是desc 和商品规格参数所对应的商品id为0，遂修改新增商品service代码如下：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//desc参考前端页面传过来的数据是序列化成字符串的</span></div><div class="line">    <span class="function"><span class="keyword">public</span> Boolean <span class="title">saveItem</span><span class="params">(Item item,String desc,String itemParams)</span></span>&#123;</div><div class="line">        <span class="comment">// 1、生成商品id</span></div><div class="line">        <span class="keyword">long</span> itemId = IDUtils.genItemId();</div><div class="line">        <span class="comment">// 2、对TbItem对象补全属性。</span></div><div class="line">        item.setId(itemId);</div><div class="line"></div><div class="line">        <span class="comment">//'商品状态，1-正常，2-下架，3-删除'</span></div><div class="line">        item.setStatus(<span class="number">1</span>);</div><div class="line"></div><div class="line"></div><div class="line">        <span class="comment">//保存商品数据</span></div><div class="line">        Integer save = <span class="keyword">super</span>.save(item);</div><div class="line"></div><div class="line">        ItemDesc itemDesc=<span class="keyword">new</span> ItemDesc();</div><div class="line">        itemDesc.setItemDesc(desc);</div><div class="line">        itemDesc.setItemId(itemId);</div><div class="line"></div><div class="line">        <span class="comment">//保存商品描述数据</span></div><div class="line">        Integer save1 = <span class="keyword">this</span>.itemDescService.save(itemDesc);</div><div class="line"></div><div class="line">        <span class="comment">//保存商品规格参数数据</span></div><div class="line">        ItemParamItem itemParamItem=<span class="keyword">new</span> ItemParamItem();</div><div class="line">        itemParamItem.setItemId(itemId);</div><div class="line">        itemParamItem.setParamData(itemParams);</div><div class="line">        Integer save2 = <span class="keyword">this</span>.itemParamItemService.save(itemParamItem);</div><div class="line">        <span class="keyword">return</span> save.intValue()==<span class="number">1</span>&amp;&amp;save1.intValue()==<span class="number">1</span>&amp;&amp;save2==<span class="number">1</span>;</div><div class="line"></div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>接着查询，返回数据显示正常，但是页面显示不正确：</p>
<p>查看前端js代码发现，为迭代完全，真坑，遂修改：</p>
<p>因为restful风格之后，完全可以直接拿到参数了，无须中间多那一层，以前是做了一层封装，请参考 <code>migo商城第一版</code> 源码</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//加载商品规格</span></div><div class="line">        			$.getJSON(<span class="string">'/rest/item/param/item/'</span>+data.id,<span class="function"><span class="keyword">function</span>(<span class="params">_data</span>)</span>&#123;</div><div class="line">        				</div><div class="line">        					$(<span class="string">"#itemeEditForm .params"</span>).show();</div><div class="line">        					$(<span class="string">"#itemeEditForm [name=itemParams]"</span>).val(_data.paramData);</div><div class="line">        					$(<span class="string">"#itemeEditForm [name=itemParamId]"</span>).val(_data.id);</div><div class="line">        					</div><div class="line">        					<span class="comment">//回显商品规格</span></div><div class="line">        					 <span class="keyword">var</span> paramData = <span class="built_in">JSON</span>.parse(_data.paramData);</div><div class="line">        					</div><div class="line">        					 <span class="keyword">var</span> html = <span class="string">"&lt;ul&gt;"</span>;</div><div class="line">        					 <span class="keyword">for</span>(<span class="keyword">var</span> i <span class="keyword">in</span> paramData)&#123;</div><div class="line">        						 <span class="keyword">var</span> pd = paramData[i];</div><div class="line">        						 html+=<span class="string">"&lt;li&gt;&lt;table&gt;"</span>;</div><div class="line">        						 html+=<span class="string">"&lt;tr&gt;&lt;td colspan=\"2\" class=\"group\"&gt;"</span>+pd.group+<span class="string">"&lt;/td&gt;&lt;/tr&gt;"</span>;</div><div class="line">        						 </div><div class="line">        						 <span class="keyword">for</span>(<span class="keyword">var</span> j <span class="keyword">in</span> pd.params)&#123;</div><div class="line">        							 <span class="keyword">var</span> ps = pd.params[j];</div><div class="line">        							 html+=<span class="string">"&lt;tr&gt;&lt;td class=\"param\"&gt;&lt;span&gt;"</span>+ps.k+<span class="string">"&lt;/span&gt;: &lt;/td&gt;&lt;td&gt;&lt;input autocomplete=\"off\" type=\"text\" value='"</span>+ps.v+<span class="string">"'/&gt;&lt;/td&gt;&lt;/tr&gt;"</span>;</div><div class="line">        						 &#125;</div><div class="line">        						 </div><div class="line">        						 html+=<span class="string">"&lt;/li&gt;&lt;/table&gt;"</span>;</div><div class="line">        					 &#125;</div><div class="line">        					 html+= <span class="string">"&lt;/ul&gt;"</span>;</div><div class="line">        					 $(<span class="string">"#itemeEditForm .params td"</span>).eq(<span class="number">1</span>).html(html);</div><div class="line">        				</div><div class="line">        			&#125;);</div><div class="line">        			</div><div class="line">        			migo.init(&#123;</div><div class="line">        				<span class="string">"pics"</span> : data.image,</div><div class="line">        				<span class="string">"cid"</span> : data.cid,</div><div class="line">        				<span class="attr">fun</span>:<span class="function"><span class="keyword">function</span>(<span class="params">node</span>)</span>&#123;</div><div class="line">        					migo.changeItemParam(node, <span class="string">"itemeEditForm"</span>);</div><div class="line">        				&#125;</div><div class="line">        			&#125;);</div><div class="line">        		&#125;</div><div class="line">        	&#125;).window(<span class="string">"open"</span>);</div></pre></td></tr></table></figure>
<p>最终结果展示：</p>
<p><img src="http://og0sybnix.bkt.clouddn.com/hxzs.png" alt=""></p>
<h4 id="最后，更新规格参数数据"><a href="#最后，更新规格参数数据" class="headerlink" title="最后，更新规格参数数据"></a>最后，更新规格参数数据</h4><p>后台实现：</p>
<p>  <code>ItemParamItemService</code></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.migo.service;</div><div class="line"></div><div class="line"><span class="keyword">import</span> com.migo.mapper.ItemParamItemMapper;</div><div class="line"><span class="keyword">import</span> com.migo.pojo.ItemParamItem;</div><div class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</div><div class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</div><div class="line"><span class="keyword">import</span> tk.mybatis.mapper.entity.Example;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.util.Date;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Author  知秋</div><div class="line"> * Created by kauw on 2016/11/14.</div><div class="line"> */</div><div class="line"><span class="meta">@Service</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ItemParamItemService</span> <span class="keyword">extends</span> <span class="title">BaseService</span>&lt;<span class="title">ItemParamItem</span>&gt; </span>&#123;</div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="keyword">private</span> ItemParamItemMapper itemParamItemMapper;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 更新商品规格参数数据</div><div class="line">     * <span class="doctag">@param</span> itemId</div><div class="line">     * <span class="doctag">@param</span> itemParams</div><div class="line">     * <span class="doctag">@return</span></div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">updateItemParamItem</span><span class="params">(Long itemId, String itemParams)</span> </span>&#123;</div><div class="line">        ItemParamItem itemParamItem=<span class="keyword">new</span> ItemParamItem();</div><div class="line">        itemParamItem.setParamData(itemParams);</div><div class="line">        itemParamItem.setUpdated(<span class="keyword">new</span> Date());</div><div class="line"></div><div class="line">        <span class="comment">//更新</span></div><div class="line">        Example example=<span class="keyword">new</span> Example(ItemParamItem.class);</div><div class="line">        example.createCriteria().andEqualTo(<span class="string">"itemId"</span>,itemId);</div><div class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.itemParamItemMapper.updateByExampleSelective(itemParamItem,example);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><code>ItemService</code></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line">    * 商品修改</div><div class="line">    */</div><div class="line">   <span class="function"><span class="keyword">public</span> Boolean <span class="title">updateItem</span><span class="params">(Item item,String desc,String itemParams)</span></span>&#123;</div><div class="line">       <span class="comment">//强制设置不能更新的字段为空,防止恶意修改</span></div><div class="line">       item.setStatus(<span class="keyword">null</span>);</div><div class="line">       item.setCreated(<span class="keyword">null</span>);</div><div class="line"></div><div class="line">       Integer change1 = <span class="keyword">super</span>.updateSelective(item);</div><div class="line"></div><div class="line">       <span class="comment">//更新商品描述</span></div><div class="line">       ItemDesc itemDesc=<span class="keyword">new</span> ItemDesc();</div><div class="line">       itemDesc.setItemId(item.getId());</div><div class="line">       itemDesc.setItemDesc(desc);</div><div class="line">       Integer change2 = <span class="keyword">this</span>.itemDescService.updateSelective(itemDesc);</div><div class="line"></div><div class="line">       Integer change3 = <span class="keyword">this</span>.itemParamItemService.updateItemParamItem(item.getId(), itemParams);</div><div class="line"></div><div class="line">       <span class="keyword">return</span> change1.intValue()==<span class="number">1</span>&amp;&amp;change2.intValue()==<span class="number">1</span>&amp;&amp;change3.intValue()==<span class="number">1</span>;</div><div class="line"></div><div class="line">   &#125;</div></pre></td></tr></table></figure>
<p><code>ItemController</code> 修改实现</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line">    * 更新商品数据</div><div class="line">    */</div><div class="line">   <span class="meta">@RequestMapping</span>(method = RequestMethod.PUT)</div><div class="line">   <span class="function"><span class="keyword">public</span> ResponseEntity&lt;Void&gt; <span class="title">updateItem</span><span class="params">(Item item, @RequestParam(<span class="string">"desc"</span>)</span> String desc,</span></div><div class="line">                                          @<span class="title">RequestParam</span><span class="params">(<span class="string">"itemParams"</span>)</span> String itemParams)&#123;</div><div class="line">       <span class="keyword">if</span> (LOGGER.isInfoEnabled()) &#123;</div><div class="line">           LOGGER.info(<span class="string">"修改商品，item = &#123;&#125;, desc = &#123;&#125;"</span>, item, desc);</div><div class="line">       &#125;</div><div class="line">       <span class="comment">/**</span></div><div class="line">        * TODO 校验以后完善</div><div class="line">        */</div><div class="line">       <span class="keyword">if</span> (item.getPrice() == <span class="keyword">null</span> || item.getPrice().intValue() == <span class="number">0</span>) &#123;</div><div class="line">           <span class="keyword">if</span> (LOGGER.isInfoEnabled()) &#123;</div><div class="line">               LOGGER.info(<span class="string">"修改商品时用户输入的参数不合法，item = &#123;&#125;, desc = &#123;&#125;"</span>, item, desc);</div><div class="line">           &#125;</div><div class="line">           <span class="comment">// 参数有误，返回400</span></div><div class="line">           <span class="comment">//ResponseEntity&lt;Void&gt; build();</span></div><div class="line">           <span class="keyword">return</span> ResponseEntity.status(HttpStatus.BAD_REQUEST).build();</div><div class="line">       &#125;</div><div class="line"></div><div class="line">       <span class="keyword">try</span> &#123;</div><div class="line">           Boolean updateItem = <span class="keyword">this</span>.itemService.updateItem(item, desc,itemParams);</div><div class="line">           <span class="keyword">if</span> (updateItem) &#123;</div><div class="line">               <span class="keyword">if</span> (LOGGER.isInfoEnabled()) &#123;</div><div class="line">                   LOGGER.info(<span class="string">"修改商品成功! id = &#123;&#125;"</span>, item.getId());</div><div class="line">               &#125;</div><div class="line">               <span class="comment">//CREATED(201, "Created"),</span></div><div class="line">               <span class="keyword">return</span> ResponseEntity.status(HttpStatus.CREATED).build();</div><div class="line">           &#125;</div><div class="line">       &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">           LOGGER.error(<span class="string">"修改商品失败! item = "</span> + item + <span class="string">", desc = "</span> + desc, e);</div><div class="line">       &#125;</div><div class="line">       <span class="keyword">return</span> ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).build();</div><div class="line">   &#125;</div></pre></td></tr></table></figure>
<p>启动项目测试，后台日志分析：</p>
<p><img src="http://og0sybnix.bkt.clouddn.com/zzxgsp.png" alt=""></p>
<p>通过日志，能看到很多东西，可见添加日志代码的重要性和查看日志的重要性，很多bug都是通过日志发现解决的</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Migo商城2-0-新增商品添加规格参数的实现-十二&quot;&gt;&lt;a href=&quot;#Migo商城2-0-新增商品添加规格参数的实现-十二&quot; class=&quot;headerlink&quot; title=&quot;Migo商城2.0  新增商品添加规格参数的实现  十二&quot;&gt;&lt;/a&gt;Migo商城2.0  新增商品添加规格参数的实现  十二&lt;/h2&gt;&lt;h3 id=&quot;页面展示规格参数模板&quot;&gt;&lt;a href=&quot;#页面展示规格参数模板&quot; class=&quot;headerlink&quot; title=&quot;页面展示规格参数模板&quot;&gt;&lt;/a&gt;页面展示规格参数模板&lt;/h3&gt;&lt;p&gt;在商品添加或者商品修改时，根据商品的分类id查询此商品分类对应的规格参数模板。根据规格参数模板，生成一个表单供用户使用&lt;/p&gt;
    
    </summary>
    
      <category term="Migo商城2.0" scheme="https://muyinchen.github.io/categories/Migo%E5%95%86%E5%9F%8E2-0/"/>
    
    
      <category term="Migo商城2.0" scheme="https://muyinchen.github.io/tags/Migo%E5%95%86%E5%9F%8E2-0/"/>
    
  </entry>
  
  <entry>
    <title>Migo商城2.0 商品规格参数的实现(2)  十一</title>
    <link href="https://muyinchen.github.io/2016/11/15/Migo%E5%95%86%E5%9F%8E2.0%20%20%E5%95%86%E5%93%81%E8%A7%84%E6%A0%BC%E5%8F%82%E6%95%B0%E7%9A%84%E5%AE%9E%E7%8E%B0(2)%20%20%E5%8D%81%E4%B8%80/"/>
    <id>https://muyinchen.github.io/2016/11/15/Migo商城2.0  商品规格参数的实现(2)  十一/</id>
    <published>2016-11-15T11:43:56.931Z</published>
    <updated>2016-11-15T11:50:51.388Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Migo商城2-0-商品规格参数的实现-2-十一"><a href="#Migo商城2-0-商品规格参数的实现-2-十一" class="headerlink" title="Migo商城2.0  商品规格参数的实现(2)  十一"></a>Migo商城2.0  商品规格参数的实现(2)  十一</h2><p>   接上篇</p>
<h4 id="初始化类目选择组件里的回调函数的执行："><a href="#初始化类目选择组件里的回调函数的执行：" class="headerlink" title="初始化类目选择组件里的回调函数的执行："></a>初始化类目选择组件里的回调函数的执行：</h4><p><img src="http://og0sybnix.bkt.clouddn.com/mubanhuidiao.png" alt=""></p>
<a id="more"></a>
<h4 id="点击提交的js代码："><a href="#点击提交的js代码：" class="headerlink" title="点击提交的js代码："></a>点击提交的js代码：</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">"#itemParamAddTable .submit"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">  <span class="comment">//这里就是拼接出下面的数据格式的代码，然后stringfy序列化json字符串</span></div><div class="line">			<span class="keyword">var</span> params = [];</div><div class="line">			<span class="keyword">var</span> groups = $(<span class="string">"#itemParamAddTable [name=group]"</span>);</div><div class="line">			groups.each(<span class="function"><span class="keyword">function</span>(<span class="params">i,e</span>)</span>&#123;</div><div class="line">				<span class="keyword">var</span> p = $(e).parentsUntil(<span class="string">"ul"</span>).parent().find(<span class="string">"[name=param]"</span>);</div><div class="line">				<span class="keyword">var</span> _ps = [];</div><div class="line">				p.each(<span class="function"><span class="keyword">function</span>(<span class="params">_i,_e</span>)</span>&#123;</div><div class="line">					<span class="keyword">var</span> _val = $(_e).siblings(<span class="string">"input"</span>).val();</div><div class="line">					<span class="keyword">if</span>($.trim(_val).length&gt;<span class="number">0</span>)&#123;</div><div class="line">						_ps.push(_val);						</div><div class="line">					&#125;</div><div class="line">				&#125;);</div><div class="line">				<span class="keyword">var</span> _val = $(e).siblings(<span class="string">"input"</span>).val();</div><div class="line">				<span class="keyword">if</span>($.trim(_val).length&gt;<span class="number">0</span> &amp;&amp; _ps.length &gt; <span class="number">0</span>)&#123;</div><div class="line">					params.push(&#123;</div><div class="line">						<span class="string">"group"</span>:_val,</div><div class="line">						<span class="string">"params"</span>:_ps</div><div class="line">					&#125;);					</div><div class="line">				&#125;</div><div class="line">			&#125;);</div><div class="line">			<span class="keyword">var</span> url = <span class="string">"/rest/item/param/"</span>+$(<span class="string">"#itemParamAddTable [name=cid]"</span>).val();</div><div class="line">         <span class="comment">//JSON.stringify将js的对象序列化为json字符串，之前有人见有人犯过这样的小错误</span></div><div class="line">			$.post(url,&#123;<span class="string">"paramData"</span>:<span class="built_in">JSON</span>.stringify(params)&#125;,<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</div><div class="line">				$.messager.alert(<span class="string">'提示'</span>,<span class="string">'新增商品规格成功!'</span>,<span class="literal">undefined</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">					$(<span class="string">".panel-tool-close"</span>).click();</div><div class="line">   					$(<span class="string">"#itemParamList"</span>).datagrid(<span class="string">"reload"</span>);</div><div class="line">   				&#125;);</div><div class="line">			&#125;);</div><div class="line">		&#125;);</div><div class="line">	&#125;);</div></pre></td></tr></table></figure>
<h4 id="提交的数据格式为："><a href="#提交的数据格式为：" class="headerlink" title="提交的数据格式为："></a>提交的数据格式为：</h4><figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">[</div><div class="line">    &#123;</div><div class="line">        <span class="attr">"group"</span>: <span class="string">"主体"</span>,</div><div class="line">        <span class="attr">"params"</span>: [</div><div class="line">            <span class="string">"品牌\t"</span>,</div><div class="line">            <span class="string">"类型"</span>,</div><div class="line">            <span class="string">"适用型号"</span></div><div class="line">        ]</div><div class="line">    &#125;,</div><div class="line">    &#123;</div><div class="line">        <span class="attr">"group"</span>: <span class="string">"规格"</span>,</div><div class="line">        <span class="attr">"params"</span>: [</div><div class="line">            <span class="string">"容量"</span>,</div><div class="line">            <span class="string">"速度级别"</span>,</div><div class="line">            <span class="string">"读写速度\t"</span></div><div class="line">        ]</div><div class="line">    &#125;</div><div class="line">]</div></pre></td></tr></table></figure>
<h4 id="后台实现："><a href="#后台实现：" class="headerlink" title="后台实现："></a>后台实现：</h4><p>提交的URL：<code>/rest/item/param/{cid}</code></p>
<p>请求参数：<code>Long cid</code> <code>String paramData</code></p>
<p>代码实现：</p>
<h5 id="controller："><a href="#controller：" class="headerlink" title="controller："></a><code>controller</code>：</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line">    * 新增规格参数模板</div><div class="line">    */</div><div class="line">   <span class="meta">@RequestMapping</span>(value = <span class="string">"&#123;itemCatId&#125;"</span>,method = RequestMethod.POST)</div><div class="line">   <span class="function"><span class="keyword">public</span> ResponseEntity&lt;Void&gt; <span class="title">addItemParamByItemCatId</span><span class="params">(</span></span></div><div class="line">           @PathVariable(<span class="string">"itemCatId"</span>) Long itemCatId,@<span class="title">RequestParam</span><span class="params">(<span class="string">"paramData"</span>)</span> String paramData</div><div class="line">   )&#123;</div><div class="line">       <span class="keyword">try</span> &#123;</div><div class="line">           <span class="keyword">if</span> (logger.isInfoEnabled()) &#123;</div><div class="line">               logger.info(<span class="string">"新增某商品规格模板参数模板 itemCatId= &#123;&#125;，paramData = &#123;&#125;"</span>,itemCatId,paramData);</div><div class="line">           &#125;</div><div class="line">           ItemParam itemparam=<span class="keyword">new</span> ItemParam();</div><div class="line">           itemparam.setId(<span class="keyword">null</span>);   <span class="comment">//置空，防止恶意修改 `id` bigint(20) NOT NULL AUTO_INCREMENT</span></div><div class="line">           itemparam.setItemCatId(itemCatId);</div><div class="line">           itemparam.setParamData(paramData);</div><div class="line">           <span class="keyword">this</span>.itemParmService.save(itemparam);</div><div class="line">           <span class="keyword">return</span> ResponseEntity.status(HttpStatus.CREATED).build();</div><div class="line">       &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">           logger.error(<span class="string">"新增某商品规格模板参数模板 失败 itemCatId= &#123;&#125;，"</span>+itemCatId+<span class="string">"paramData = &#123;&#125;"</span>+paramData,e);</div><div class="line">       &#125;</div><div class="line">       <span class="keyword">return</span> ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).build();</div><div class="line">   &#125;</div></pre></td></tr></table></figure>
<p>打算添加个对讲机的，谁知道jd太水，没有这个规格参数</p>
<p>添加个遥控车的参数</p>
<h4 id="运行项目，测试结果如图："><a href="#运行项目，测试结果如图：" class="headerlink" title="运行项目，测试结果如图："></a>运行项目，测试结果如图：</h4><p><img src="http://og0sybnix.bkt.clouddn.com/xinzengggcs.png" alt=""></p>
<h4 id="添加的数据在数据库里的格式："><a href="#添加的数据在数据库里的格式：" class="headerlink" title="添加的数据在数据库里的格式："></a>添加的数据在数据库里的格式：</h4><figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">[</div><div class="line">    &#123;</div><div class="line">        <span class="attr">"group"</span>: <span class="string">"主体"</span>,</div><div class="line">        <span class="attr">"params"</span>: [</div><div class="line">            <span class="string">"品牌"</span>,</div><div class="line">            <span class="string">"车型"</span>,</div><div class="line">            <span class="string">"包装\t"</span></div><div class="line">        ]</div><div class="line">    &#125;,</div><div class="line">    &#123;</div><div class="line">        <span class="attr">"group"</span>: <span class="string">"电源"</span>,</div><div class="line">        <span class="attr">"params"</span>: [</div><div class="line">            <span class="string">"充电\t"</span>,</div><div class="line">            <span class="string">"无线遥控"</span>,</div><div class="line">            <span class="string">"有线遥控\t"</span></div><div class="line">        ]</div><div class="line">    &#125;,</div><div class="line">    &#123;</div><div class="line">        <span class="attr">"group"</span>: <span class="string">"尺寸"</span>,</div><div class="line">        <span class="attr">"params"</span>: [</div><div class="line">            <span class="string">"产品净尺寸（长*宽*高"</span>,</div><div class="line">            <span class="string">"带包装尺寸（长*宽*高"</span></div><div class="line">        ]</div><div class="line">    &#125;</div><div class="line">]</div></pre></td></tr></table></figure>
<h3 id="查询规格参数模板列表"><a href="#查询规格参数模板列表" class="headerlink" title="查询规格参数模板列表"></a>查询规格参数模板列表</h3><p>请求URL：<code>/rest/item/param/list</code></p>
<p>因返回的数据格式涉及到两张表 <code>tb_item_param</code> <code>tb_item_cat</code>  所以不能使用<code>通用mapper</code></p>
<h4 id="新建pojo-ItemParamexd"><a href="#新建pojo-ItemParamexd" class="headerlink" title="新建pojo ItemParamexd"></a>新建<code>pojo</code> <code>ItemParamexd</code></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.migo.pojo;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.util.Date;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Author  知秋</div><div class="line"> * Created by kauw on 2016/10/6.</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ItemParamexd</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> Long id;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> Long itemCatId;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> Date created;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> Date updated;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> String paramData;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> String itemCatName;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> Date <span class="title">getCreated</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> created;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCreated</span><span class="params">(Date created)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.created = created;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> Long <span class="title">getId</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> id;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Long id)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.id = id;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> Long <span class="title">getItemCatId</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> itemCatId;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setItemCatId</span><span class="params">(Long itemCatId)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.itemCatId = itemCatId;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getItemCatName</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> itemCatName;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setItemCatName</span><span class="params">(String itemCatName)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.itemCatName = itemCatName;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getParamData</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> paramData;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setParamData</span><span class="params">(String paramData)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.paramData = paramData;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> Date <span class="title">getUpdated</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> updated;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUpdated</span><span class="params">(Date updated)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.updated = updated;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="新建mapper-ItemparamexdMapper"><a href="#新建mapper-ItemparamexdMapper" class="headerlink" title="新建mapper  ItemparamexdMapper"></a>新建<code>mapper</code>  <code>ItemparamexdMapper</code></h4><p> 这里就直接使用注解查询了(参照第一版的<code>xml</code>配置，可做对比)</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.migo.mapper;</div><div class="line"></div><div class="line"><span class="keyword">import</span> com.migo.pojo.ItemParamexd;</div><div class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Select;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.util.List;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Author  知秋</div><div class="line"> * Created by kauw on 2016/10/6.</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ItemparamexdMapper</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Select</span>(<span class="string">" select\n"</span> +</div><div class="line">            <span class="string">"         a.id id ,a.item_cat_id itemCatId,a.created created,a.updated updated,a.param_data paramData,b.`name` itemCatName\n"</span> +</div><div class="line">            <span class="string">"        FROM\n"</span> +</div><div class="line">            <span class="string">"        tb_item_param AS a LEFT JOIN  tb_item_cat  as b\n"</span> +</div><div class="line">            <span class="string">"        ON\n"</span> +</div><div class="line">            <span class="string">"        a.item_cat_id=b.id "</span>)</div><div class="line">    <span class="function">List&lt;ItemParamexd&gt; <span class="title">selectList</span><span class="params">()</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="service功能实现："><a href="#service功能实现：" class="headerlink" title="service功能实现："></a>service功能实现：</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.migo.service;</div><div class="line"></div><div class="line"><span class="keyword">import</span> com.github.pagehelper.PageHelper;</div><div class="line"><span class="keyword">import</span> com.github.pagehelper.PageInfo;</div><div class="line"><span class="keyword">import</span> com.migo.mapper.ItemparamexdMapper;</div><div class="line"><span class="keyword">import</span> com.migo.pojo.EasyUIDataGridResult;</div><div class="line"><span class="keyword">import</span> com.migo.pojo.ItemParam;</div><div class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</div><div class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.util.List;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Author  知秋</div><div class="line"> * Created by kauw on 2016/11/14.</div><div class="line">*/</div><div class="line"><span class="meta">@Service</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ItemParmService</span> <span class="keyword">extends</span> <span class="title">BaseService</span>&lt;<span class="title">ItemParam</span>&gt; </span>&#123;</div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="keyword">private</span> ItemparamexdMapper itemparamexdMapper;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> EasyUIDataGridResult <span class="title">getItemParamList</span><span class="params">(<span class="keyword">int</span> page, <span class="keyword">int</span> rows)</span> </span>&#123;</div><div class="line">        <span class="comment">//分页处理</span></div><div class="line">        PageHelper.startPage(page, rows);</div><div class="line">        <span class="comment">//执行查询</span></div><div class="line"></div><div class="line">        List list = itemparamexdMapper.selectList();</div><div class="line">        <span class="comment">//取分页信息</span></div><div class="line">        PageInfo pageInfo = <span class="keyword">new</span> PageInfo&lt;&gt;(list);</div><div class="line">        <span class="comment">//返回处理结果</span></div><div class="line">        EasyUIDataGridResult result = <span class="keyword">new</span> EasyUIDataGridResult();</div><div class="line">        result.setTotal(pageInfo.getTotal());</div><div class="line">        result.setRows(pageInfo.getList());</div><div class="line">        <span class="keyword">return</span> result;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="controller实现："><a href="#controller实现：" class="headerlink" title="controller实现："></a>controller实现：</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line">     * 查询规格参数模板列表</div><div class="line">     */</div><div class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"/list"</span>,method = RequestMethod.GET)</div><div class="line">    <span class="function"><span class="keyword">public</span> ResponseEntity&lt;EasyUIDataGridResult&gt; <span class="title">getItemparmList</span><span class="params">(Integer page,Integer rows)</span></span>&#123;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            <span class="keyword">if</span> (logger.isInfoEnabled()) &#123;</div><div class="line">                logger.info(<span class="string">"查询商品规格模板参数模板 page= &#123;&#125;，rows = &#123;&#125;"</span>,page,rows);</div><div class="line">            &#125;</div><div class="line">            EasyUIDataGridResult result=<span class="keyword">this</span>.itemParmService.getItemParamList(page,rows);</div><div class="line">            <span class="keyword">return</span> ResponseEntity.ok(result);</div><div class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">            logger.error(<span class="string">"查询商品规格参数模板列表出错：page="</span>+page+<span class="string">",rows="</span>+rows,e);</div><div class="line">            <span class="keyword">return</span> ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(<span class="keyword">null</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<h4 id="启动项目，运行查看："><a href="#启动项目，运行查看：" class="headerlink" title="启动项目，运行查看："></a>启动项目，运行查看：</h4><p><img src="http://og0sybnix.bkt.clouddn.com/ggcslb.png" alt=""></p>
<p>因删除比较简单，这里就不做了</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Migo商城2-0-商品规格参数的实现-2-十一&quot;&gt;&lt;a href=&quot;#Migo商城2-0-商品规格参数的实现-2-十一&quot; class=&quot;headerlink&quot; title=&quot;Migo商城2.0  商品规格参数的实现(2)  十一&quot;&gt;&lt;/a&gt;Migo商城2.0  商品规格参数的实现(2)  十一&lt;/h2&gt;&lt;p&gt;   接上篇&lt;/p&gt;
&lt;h4 id=&quot;初始化类目选择组件里的回调函数的执行：&quot;&gt;&lt;a href=&quot;#初始化类目选择组件里的回调函数的执行：&quot; class=&quot;headerlink&quot; title=&quot;初始化类目选择组件里的回调函数的执行：&quot;&gt;&lt;/a&gt;初始化类目选择组件里的回调函数的执行：&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;http://og0sybnix.bkt.clouddn.com/mubanhuidiao.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Migo商城2.0" scheme="https://muyinchen.github.io/categories/Migo%E5%95%86%E5%9F%8E2-0/"/>
    
    
      <category term="Migo商城2.0" scheme="https://muyinchen.github.io/tags/Migo%E5%95%86%E5%9F%8E2-0/"/>
    
  </entry>
  
  <entry>
    <title>Migo商城2.0 商品规格参数的实现(1) 十</title>
    <link href="https://muyinchen.github.io/2016/11/14/Migo%E5%95%86%E5%9F%8E2.0%20%20%E5%95%86%E5%93%81%E8%A7%84%E6%A0%BC%E5%8F%82%E6%95%B0%E7%9A%84%E5%AE%9E%E7%8E%B0(1)%20%E5%8D%81/"/>
    <id>https://muyinchen.github.io/2016/11/14/Migo商城2.0  商品规格参数的实现(1) 十/</id>
    <published>2016-11-14T15:30:46.983Z</published>
    <updated>2016-11-14T15:36:46.131Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Migo商城2-0-商品规格参数的实现-1-十"><a href="#Migo商城2-0-商品规格参数的实现-1-十" class="headerlink" title="Migo商城2.0  商品规格参数的实现(1) 十"></a>Migo商城2.0  商品规格参数的实现(1) 十</h2><p>先看看一张jd的商品规格的截图吧</p>
<p><img src="http://og0sybnix.bkt.clouddn.com/guigecanshu.png" alt=""></p>
<p>分析：</p>
<a id="more"></a>
<p>规格参数：</p>
<p>1、同一类商品的规格分类相同</p>
<p>2、同一类商品的规格项一致</p>
<p>3、不同商品的规格参数不同</p>
<p>思路：</p>
<p>第一种方式：</p>
<blockquote>
<p>可以把数据保存到表中</p>
<p>表就不画了，单单这个功能所涉及的表：<code>商品分类表</code> <code>规格参数-分类表</code> <code>商品表</code>  <code>规格参数-商品规格参数</code>  <code>规格参数-规格项表</code></p>
<p>想想就觉得 查询的sql语句比较复杂，需要关联的表很多，会给数据库造成很大压力。不推荐使用此方法</p>
</blockquote>
<p>第二种方法：</p>
<blockquote>
<p>1、可以把规格分组和规格项使用json数据表示，保存到一个字段中。规格参数模板。</p>
<p>2、添加商品时读取规格参数的模板，根据模板生成表单，供客户输入规格参数。</p>
<p>3、把动态表单中的内容读取出来生成json数据保存到数据库中。</p>
<p>4、展示规格参数时，根据商品id读取规格参数json数据生成html展示到jsp页面</p>
</blockquote>
<p><img src="http://og0sybnix.bkt.clouddn.com/mubanliucheng.png" alt=""></p>
<p>具体实现：</p>
<p>1、  模板如何存储？</p>
<p>a)        存储到数据库</p>
<p>b)        字段不能固定</p>
<ol>
<li>Map</li>
<li>Json   这里选择这种</li>
</ol>
<p>2、  存储的json结构 以后添加(TODO) 不想打开上个项目单独拿数据了，请原谅我的懒惰！</p>
<h3 id="模板结构"><a href="#模板结构" class="headerlink" title="模板结构"></a>模板结构</h3><h3 id="数据库表结构"><a href="#数据库表结构" class="headerlink" title="数据库表结构"></a>数据库表结构</h3><p><img src="http://og0sybnix.bkt.clouddn.com/guigembb.png" alt=""></p>
<p>后台实现</p>
<p>添加mapper：</p>
<p><img src="http://og0sybnix.bkt.clouddn.com/addmapper.png" alt=""></p>
<p>创建service：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Author  知秋</div><div class="line"> * Created by kauw on 2016/11/14.</div><div class="line">*/</div><div class="line"><span class="meta">@Service</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ItemParmService</span> <span class="keyword">extends</span> <span class="title">BaseService</span>&lt;<span class="title">ItemParam</span>&gt; </span>&#123;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Author  知秋</div><div class="line"> * Created by kauw on 2016/11/14.</div><div class="line"> */</div><div class="line"><span class="meta">@Service</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ItemParamItemService</span> <span class="keyword">extends</span> <span class="title">BaseService</span>&lt;<span class="title">ItemParamItem</span>&gt; </span>&#123;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>选择类目</p>
<p>根据选择的类目进行判断，如果该类目所对应的模板存在，提醒用户已经存在，如果模板不存在，可以创建模板</p>
<p>根据商品的分类id查询tb_item_param表，如果查询到结果说明此模板已经添加</p>
<p><img src="http://og0sybnix.bkt.clouddn.com/lm1.png" alt=""></p>
<p>这里js代码改造下，使其更加适合restful格式化：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">$.ajax(&#123;</div><div class="line">				   type: <span class="string">"GET"</span>,</div><div class="line">				   url: <span class="string">"/rest/item/param/"</span> + node.id,</div><div class="line">				   statusCode : &#123;</div><div class="line">					   <span class="number">200</span> : function()&#123;</div><div class="line">						   <span class="comment">//模板存在</span></div><div class="line">						   $.messager.alert(<span class="string">"提示"</span>, <span class="string">"该类目已经添加，请选择其他类目。"</span>, undefined, function()&#123;</div><div class="line">								 $(<span class="string">"#itemParamAddTable .selectItemCat"</span>).click();</div><div class="line">							  &#125;);</div><div class="line">					   &#125;,</div><div class="line">					   <span class="number">404</span> : function()&#123;</div><div class="line">						   <span class="comment">//模板不存在</span></div><div class="line">						   $(<span class="string">".addGroupTr"</span>).show();</div><div class="line">					   &#125;,</div><div class="line">					   <span class="number">500</span> : function()&#123;</div><div class="line">						   alert(<span class="string">"error"</span>);</div><div class="line">					   &#125;</div><div class="line">				   &#125;</div><div class="line">				&#125;);</div></pre></td></tr></table></figure>
<blockquote>
<p>请求的url：<code>/item/param/{cid}</code></p>
<p>参数：<code>cid</code></p>
</blockquote>
<p>controller:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.migo.controller;</div><div class="line"></div><div class="line"><span class="keyword">import</span> com.migo.pojo.ItemParam;</div><div class="line"><span class="keyword">import</span> com.migo.service.ItemParmService;</div><div class="line"><span class="keyword">import</span> org.slf4j.Logger;</div><div class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</div><div class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</div><div class="line"><span class="keyword">import</span> org.springframework.http.HttpStatus;</div><div class="line"><span class="keyword">import</span> org.springframework.http.ResponseEntity;</div><div class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMethod;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Author  知秋</div><div class="line"> * Created by kauw on 2016/11/14.</div><div class="line"> */</div><div class="line"><span class="meta">@Controller</span></div><div class="line"><span class="meta">@RequestMapping</span>(<span class="string">"item/param"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ItemParamController</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Logger logger= LoggerFactory.getLogger(ItemParamController.class);</div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="keyword">private</span> ItemParmService itemParmService;</div><div class="line"></div><div class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"&#123;itemCatId&#125;"</span> ,method = RequestMethod.GET)</div><div class="line">    <span class="function"><span class="keyword">public</span> ResponseEntity&lt;ItemParam&gt; <span class="title">getItemParamByCid</span><span class="params">(@PathVariable(<span class="string">"itemCatId"</span>)</span> Long itemCatId)</span>&#123;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            <span class="keyword">if</span> (logger.isInfoEnabled()) &#123;</div><div class="line">                logger.info(<span class="string">"查询某商品规格模板参数模板 itemCatId= &#123;&#125;"</span>,itemCatId);</div><div class="line">            &#125;</div><div class="line">            ItemParam example=<span class="keyword">new</span> ItemParam();</div><div class="line">            example.setItemCatId(itemCatId);</div><div class="line">            ItemParam itemParam = <span class="keyword">this</span>.itemParmService.queryOne(example);</div><div class="line">            <span class="keyword">if</span> (itemParam==<span class="keyword">null</span>) &#123;</div><div class="line">                <span class="keyword">if</span> (logger.isInfoEnabled()) &#123;</div><div class="line">                    logger.info(<span class="string">"所查询商品规格模板参数模板 不存在 itemCatId= &#123;&#125;"</span>,itemCatId);</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">return</span> ResponseEntity.status(HttpStatus.NOT_FOUND).body(<span class="keyword">null</span>);</div><div class="line"></div><div class="line">            &#125;</div><div class="line">            <span class="keyword">return</span> ResponseEntity.ok(itemParam);</div><div class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">            logger.error(<span class="string">"查询某商品规格模板参数模板 失败 itemCatId= &#123;&#125;"</span>,itemCatId,e);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(<span class="keyword">null</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>运行测试结果：</p>
<p><img src="http://og0sybnix.bkt.clouddn.com/spleimucx.png" alt=""></p>
<p>今天晚上有点事，耽搁了，就到这里吧，明天继续</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Migo商城2-0-商品规格参数的实现-1-十&quot;&gt;&lt;a href=&quot;#Migo商城2-0-商品规格参数的实现-1-十&quot; class=&quot;headerlink&quot; title=&quot;Migo商城2.0  商品规格参数的实现(1) 十&quot;&gt;&lt;/a&gt;Migo商城2.0  商品规格参数的实现(1) 十&lt;/h2&gt;&lt;p&gt;先看看一张jd的商品规格的截图吧&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://og0sybnix.bkt.clouddn.com/guigecanshu.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;分析：&lt;/p&gt;
    
    </summary>
    
      <category term="Migo商城2.0" scheme="https://muyinchen.github.io/categories/Migo%E5%95%86%E5%9F%8E2-0/"/>
    
    
      <category term="Migo商城2.0" scheme="https://muyinchen.github.io/tags/Migo%E5%95%86%E5%9F%8E2-0/"/>
    
  </entry>
  
  <entry>
    <title>Migo商城2.0 商品的编辑 九</title>
    <link href="https://muyinchen.github.io/2016/11/14/Migo%E5%95%86%E5%9F%8E2.0%20%20%E5%95%86%E5%93%81%E7%9A%84%E7%BC%96%E8%BE%91%20%E4%B9%9D/"/>
    <id>https://muyinchen.github.io/2016/11/14/Migo商城2.0  商品的编辑 九/</id>
    <published>2016-11-14T10:32:07.487Z</published>
    <updated>2016-11-14T10:40:15.613Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Migo商城2-0-商品的编辑-九"><a href="#Migo商城2-0-商品的编辑-九" class="headerlink" title="Migo商城2.0  商品的编辑 九"></a>Migo商城2.0  商品的编辑 九</h2><p>商品的添加查询做完，接着就是修改和删除了</p>
<p>先做修改，也就是编辑</p>
<h3 id="商品编辑："><a href="#商品编辑：" class="headerlink" title="商品编辑："></a>商品编辑：</h3><p>需求的核心应该是<code>数据的回显</code><br><a id="more"></a></p>
<p>看前端js代码，没有截图的看注释，已经很清楚了！</p>
<p><img src="http://og0sybnix.bkt.clouddn.com/%E5%95%86%E5%93%81%E9%80%89%E6%8B%A9.png" alt=""></p>
<p><img src="http://og0sybnix.bkt.clouddn.com/%E9%80%89%E6%8B%A9%E5%99%A8%E4%BD%8D%E7%BD%AEDemo.png" alt=""></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">        <span class="attr">text</span>:<span class="string">'编辑'</span>,</div><div class="line">        <span class="attr">iconCls</span>:<span class="string">'icon-edit'</span>,</div><div class="line">        <span class="attr">handler</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        	<span class="keyword">var</span> ids = getSelectionsIds();</div><div class="line">          <span class="comment">//1、	判断选中的行数</span></div><div class="line">        	<span class="keyword">if</span>(ids.length == <span class="number">0</span>)&#123;</div><div class="line">        		$.messager.alert(<span class="string">'提示'</span>,<span class="string">'必须选择一个商品才能编辑!'</span>);</div><div class="line">        		<span class="keyword">return</span> ;</div><div class="line">        	&#125;</div><div class="line">        	<span class="keyword">if</span>(ids.indexOf(<span class="string">','</span>) &gt; <span class="number">0</span>)&#123;</div><div class="line">        		$.messager.alert(<span class="string">'提示'</span>,<span class="string">'只能选择一个商品!'</span>);</div><div class="line">        		<span class="keyword">return</span> ;</div><div class="line">        	&#125;</div><div class="line"> &lt;!-- &lt;div id="itemEditWindow" class="easyui-window" title="编辑商品" data-		  options="modal:true,closed:true,iconCls:'icon-save',href:'/rest/page/item-edit'" style="width:80%;height:80%;padding:10px;"&gt;</div><div class="line">&lt;/div&gt; --&gt;</div><div class="line">        	$(<span class="string">"#itemEditWindow"</span>).window(&#123;</div><div class="line">              <span class="comment">//页面加载完执行，加载页面看上面的div代码块里的href</span></div><div class="line">        		onLoad :<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        			<span class="comment">//回显数据</span></div><div class="line">        			<span class="keyword">var</span> data = $(<span class="string">"#itemList"</span>).datagrid(<span class="string">"getSelections"</span>)[<span class="number">0</span>];</div><div class="line">        			data.priceView = migo.formatPrice(data.price);</div><div class="line">        			$(<span class="string">"#itemeEditForm"</span>).form(<span class="string">"load"</span>,data);</div><div class="line">        			</div><div class="line">        			<span class="comment">// 加载商品描述</span></div><div class="line">        			$.getJSON(<span class="string">'/rest/item/desc/'</span>+data.id,<span class="function"><span class="keyword">function</span>(<span class="params">_data</span>)</span>&#123;</div><div class="line">        				itemEditEditor.html(_data.itemDesc);</div><div class="line">        			&#125;);</div><div class="line">        			</div><div class="line">        			<span class="comment">//加载商品规格</span></div><div class="line">        			$.getJSON(<span class="string">'/rest/item/param/item/query/'</span>+data.id,<span class="function"><span class="keyword">function</span>(<span class="params">_data</span>)</span>&#123;</div><div class="line">        				<span class="keyword">if</span>(_data &amp;&amp; _data.status == <span class="number">200</span> &amp;&amp; _data.data &amp;&amp; _data.data.paramData)&#123;</div><div class="line">        					$(<span class="string">"#itemeEditForm .params"</span>).show();</div><div class="line">        					$(<span class="string">"#itemeEditForm [name=itemParams]"</span>).val(_data.data.paramData);</div><div class="line">        					$(<span class="string">"#itemeEditForm [name=itemParamId]"</span>).val(_data.data.id);</div><div class="line">        					</div><div class="line">        					<span class="comment">//回显商品规格</span></div><div class="line">        					 <span class="keyword">var</span> paramData = <span class="built_in">JSON</span>.parse(_data.data.paramData);</div><div class="line">        					</div><div class="line">        					 <span class="keyword">var</span> html = <span class="string">"&lt;ul&gt;"</span>;</div><div class="line">        					 <span class="keyword">for</span>(<span class="keyword">var</span> i <span class="keyword">in</span> paramData)&#123;</div><div class="line">        						 <span class="keyword">var</span> pd = paramData[i];</div><div class="line">        						 html+=<span class="string">"&lt;li&gt;&lt;table&gt;"</span>;</div><div class="line">        						 html+=<span class="string">"&lt;tr&gt;&lt;td colspan=\"2\" class=\"group\"&gt;"</span>+pd.group+<span class="string">"&lt;/td&gt;&lt;/tr&gt;"</span>;</div><div class="line">        						 </div><div class="line">        						 <span class="keyword">for</span>(<span class="keyword">var</span> j <span class="keyword">in</span> pd.params)&#123;</div><div class="line">        							 <span class="keyword">var</span> ps = pd.params[j];</div><div class="line">        							 html+=<span class="string">"&lt;tr&gt;&lt;td class=\"param\"&gt;&lt;span&gt;"</span>+ps.k+<span class="string">"&lt;/span&gt;: &lt;/td&gt;&lt;td&gt;&lt;input autocomplete=\"off\" type=\"text\" value='"</span>+ps.v+<span class="string">"'/&gt;&lt;/td&gt;&lt;/tr&gt;"</span>;</div><div class="line">        						 &#125;</div><div class="line">        						 </div><div class="line">        						 html+=<span class="string">"&lt;/li&gt;&lt;/table&gt;"</span>;</div><div class="line">        					 &#125;</div><div class="line">        					 html+= <span class="string">"&lt;/ul&gt;"</span>;</div><div class="line">        					 $(<span class="string">"#itemeEditForm .params td"</span>).eq(<span class="number">1</span>).html(html);</div><div class="line">        				&#125;</div><div class="line">        			&#125;);</div><div class="line">        			</div><div class="line">        			migo.init(&#123;</div><div class="line">                      <span class="comment">//这里已经看过很多次了，修改类目想要显示类目名称可自行这里添加修改的</span></div><div class="line">                      <span class="comment">//图片的回显就不说了，init方便会自动调用</span></div><div class="line">        				<span class="string">"pics"</span> : data.image,</div><div class="line">        				<span class="string">"cid"</span> : data.cid,</div><div class="line">        				<span class="attr">fun</span>:<span class="function"><span class="keyword">function</span>(<span class="params">node</span>)</span>&#123;</div><div class="line">        					migo.changeItemParam(node, <span class="string">"itemeEditForm"</span>);</div><div class="line">        				&#125;</div><div class="line">        			&#125;);</div><div class="line">        		&#125;</div><div class="line">        	&#125;).window(<span class="string">"open"</span>); <span class="comment">//将close变为true</span></div><div class="line">        &#125;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 初始化选择类目组件</span></div><div class="line">    initItemCat : <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</div><div class="line">    	$(<span class="string">".selectItemCat"</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params">i,e</span>)</span>&#123;</div><div class="line">    		<span class="keyword">var</span> _ele = $(e);</div><div class="line">    		<span class="keyword">if</span>(data &amp;&amp; data.cid)&#123;</div><div class="line">    			_ele.after(<span class="string">"&lt;span style='margin-left:10px;'&gt;"</span>+data.cid+<span class="string">"&lt;/span&gt;"</span>);</div><div class="line">    		&#125;<span class="keyword">else</span>&#123;</div><div class="line">    			_ele.after(<span class="string">"&lt;span style='margin-left:10px;'&gt;&lt;/span&gt;"</span>);</div><div class="line">    		&#125;</div><div class="line">    		_ele.unbind(<span class="string">'click'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    			$(<span class="string">"&lt;div&gt;"</span>).css(&#123;<span class="attr">padding</span>:<span class="string">"5px"</span>&#125;).html(<span class="string">"&lt;ul&gt;"</span>)</div><div class="line">    			.window(&#123;</div><div class="line">    				<span class="attr">width</span>:<span class="string">'500'</span>,</div><div class="line">    			    <span class="attr">height</span>:<span class="string">"450"</span>,</div><div class="line">    			    <span class="attr">modal</span>:<span class="literal">true</span>,</div><div class="line">    			    <span class="attr">closed</span>:<span class="literal">true</span>,</div><div class="line">    			    <span class="attr">iconCls</span>:<span class="string">'icon-save'</span>,</div><div class="line">    			    <span class="attr">title</span>:<span class="string">'选择类目'</span>,</div><div class="line">    			    <span class="attr">onOpen</span> : <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    			    	<span class="keyword">var</span> _win = <span class="keyword">this</span>;</div><div class="line">    			    	$(<span class="string">"ul"</span>,_win).tree(&#123;</div><div class="line">    			    		<span class="attr">url</span>:<span class="string">'/rest/item/cat/'</span>,</div><div class="line">							<span class="attr">method</span>:<span class="string">"GET"</span>,</div><div class="line">    			    		<span class="attr">animate</span>:<span class="literal">true</span>,</div><div class="line">    			    		<span class="attr">onClick</span> : <span class="function"><span class="keyword">function</span>(<span class="params">node</span>)</span>&#123;</div><div class="line">    			    			<span class="keyword">if</span>($(<span class="keyword">this</span>).tree(<span class="string">"isLeaf"</span>,node.target))&#123;</div><div class="line">    			    				<span class="comment">// 填写到cid中</span></div><div class="line">    			    				_ele.parent().find(<span class="string">"[name=cid]"</span>).val(node.id);</div><div class="line">    			    				_ele.next().text(node.text).attr(<span class="string">"cid"</span>,node.id);</div><div class="line">    			    				$(_win).window(<span class="string">'close'</span>);</div><div class="line">    			    				<span class="keyword">if</span>(data &amp;&amp; data.fun)&#123;</div><div class="line">    			    					data.fun.call(<span class="keyword">this</span>,node);</div><div class="line">    			    				&#125;</div><div class="line">    			    			&#125;</div><div class="line">    			    		&#125;</div><div class="line">    			    	&#125;);</div><div class="line">    			    &#125;,</div><div class="line">    			    <span class="attr">onClose</span> : <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    			    	$(<span class="keyword">this</span>).window(<span class="string">"destroy"</span>);</div><div class="line">    			    &#125;</div><div class="line">    			&#125;).window(<span class="string">'open'</span>);</div><div class="line">    		&#125;);</div><div class="line">    	&#125;);</div><div class="line">    &#125;,</div></pre></td></tr></table></figure>
<p>请求的URL：<code>&#39;/rest/item/desc/&#39;+data.id</code> 即<code>item/desc/{itemId}</code></p>
<h4 id="后台代码："><a href="#后台代码：" class="headerlink" title="后台代码："></a>后台代码：</h4><p>controller：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.migo.controller;</div><div class="line"></div><div class="line"><span class="keyword">import</span> com.migo.pojo.ItemDesc;</div><div class="line"><span class="keyword">import</span> com.migo.service.ItemDescService;</div><div class="line"><span class="keyword">import</span> org.slf4j.Logger;</div><div class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</div><div class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</div><div class="line"><span class="keyword">import</span> org.springframework.http.HttpStatus;</div><div class="line"><span class="keyword">import</span> org.springframework.http.ResponseEntity;</div><div class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMethod;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Author  知秋</div><div class="line"> * Created by kauw on 2016/11/14.</div><div class="line"> */</div><div class="line"><span class="meta">@Controller</span></div><div class="line"><span class="meta">@RequestMapping</span>(<span class="string">"item/desc"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ItemDescController</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger logger= LoggerFactory.getLogger(ItemDescController.class);</div><div class="line"></div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="keyword">private</span> ItemDescService itemDescService;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 根据商品id查询商品描述信息</div><div class="line">     */</div><div class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"&#123;itemId&#125;"</span>,method = RequestMethod.GET)</div><div class="line">    <span class="function"><span class="keyword">public</span> ResponseEntity&lt;ItemDesc&gt; <span class="title">queryItemDescByItemId</span><span class="params">(</span></span></div><div class="line">            @PathVariable(<span class="string">"itemId"</span>) Long itemId</div><div class="line">    )&#123;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (logger.isInfoEnabled())&#123;</div><div class="line">            logger.info(<span class="string">"商品描述信息查询 id = &#123;&#125;"</span>,itemId);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            ItemDesc itemDesc = <span class="keyword">this</span>.itemDescService.queryById(itemId);</div><div class="line">            <span class="keyword">if</span> (itemDesc==<span class="keyword">null</span>)&#123;</div><div class="line">                <span class="keyword">return</span> ResponseEntity.status(HttpStatus.NOT_FOUND).body(<span class="keyword">null</span>);</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">return</span> ResponseEntity.ok(itemDesc);</div><div class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">            logger.error(<span class="string">"商品描述查询失败id = &#123;&#125;"</span>,itemId,e);</div><div class="line"></div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(<span class="keyword">null</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="运行项目，操作结果如图："><a href="#运行项目，操作结果如图：" class="headerlink" title="运行项目，操作结果如图："></a>运行项目，操作结果如图：</h4><p><img src="http://og0sybnix.bkt.clouddn.com/%E7%BC%96%E8%BE%91%E5%9B%9E%E6%98%BE%E6%88%90%E5%8A%9F.png" alt=""></p>
<h4 id="最后，就是商品修改的提交"><a href="#最后，就是商品修改的提交" class="headerlink" title="最后，就是商品修改的提交"></a>最后，就是商品修改的提交</h4><p>先看前台js代码：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</div><div class="line">	<span class="keyword">var</span> itemEditEditor ;</div><div class="line">	$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">		<span class="comment">//实例化编辑器</span></div><div class="line">		itemEditEditor = migo.createEditor(<span class="string">"#itemeEditForm [name=desc]"</span>);</div><div class="line">	&#125;);</div><div class="line">	</div><div class="line">	<span class="function"><span class="keyword">function</span> <span class="title">submitForm</span>(<span class="params"></span>)</span>&#123;</div><div class="line">		<span class="keyword">if</span>(!$(<span class="string">'#itemeEditForm'</span>).form(<span class="string">'validate'</span>))&#123;</div><div class="line">			$.messager.alert(<span class="string">'提示'</span>,<span class="string">'表单还未填写完成!'</span>);</div><div class="line">			<span class="keyword">return</span> ;</div><div class="line">		&#125;</div><div class="line">		$(<span class="string">"#itemeEditForm [name=price]"</span>).val(<span class="built_in">eval</span>($(<span class="string">"#itemeEditForm [name=priceView]"</span>).val()) * <span class="number">100</span>);</div><div class="line">		itemEditEditor.sync();</div><div class="line">		</div><div class="line">		<span class="keyword">var</span> paramJson = [];</div><div class="line">		$(<span class="string">"#itemeEditForm .params li"</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params">i,e</span>)</span>&#123;</div><div class="line">			<span class="keyword">var</span> trs = $(e).find(<span class="string">"tr"</span>);</div><div class="line">			<span class="keyword">var</span> group = trs.eq(<span class="number">0</span>).text();</div><div class="line">			<span class="keyword">var</span> ps = [];</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">1</span>;i&lt;trs.length;i++)&#123;</div><div class="line">				<span class="keyword">var</span> tr = trs.eq(i);</div><div class="line">				ps.push(&#123;</div><div class="line">					<span class="string">"k"</span> : $.trim(tr.find(<span class="string">"td"</span>).eq(<span class="number">0</span>).find(<span class="string">"span"</span>).text()),</div><div class="line">					<span class="string">"v"</span> : $.trim(tr.find(<span class="string">"input"</span>).val())</div><div class="line">				&#125;);</div><div class="line">			&#125;</div><div class="line">			paramJson.push(&#123;</div><div class="line">				<span class="string">"group"</span> : group,</div><div class="line">				<span class="string">"params"</span>: ps</div><div class="line">			&#125;);</div><div class="line">		&#125;);</div><div class="line">		paramJson = <span class="built_in">JSON</span>.stringify(paramJson);</div><div class="line">		</div><div class="line">		$(<span class="string">"#itemeEditForm [name=itemParams]"</span>).val(paramJson);</div><div class="line">		</div><div class="line">		<span class="comment">//提交到后台的RESTful</span></div><div class="line">		$.ajax(&#123;</div><div class="line">		   <span class="attr">type</span>: <span class="string">"PUT"</span>,</div><div class="line">		   <span class="attr">url</span>: <span class="string">"/rest/item"</span>,</div><div class="line">		   <span class="attr">data</span>: $(<span class="string">"#itemeEditForm"</span>).serialize(),</div><div class="line">		   <span class="attr">success</span>: <span class="function"><span class="keyword">function</span>(<span class="params">msg</span>)</span>&#123;</div><div class="line">			   $.messager.alert(<span class="string">'提示'</span>,<span class="string">'修改商品成功!'</span>,<span class="string">'info'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">					$(<span class="string">"#itemEditWindow"</span>).window(<span class="string">'close'</span>);</div><div class="line">					$(<span class="string">"#itemList"</span>).datagrid(<span class="string">"reload"</span>);</div><div class="line">				&#125;);</div><div class="line">		   &#125;,</div><div class="line">		   <span class="attr">error</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">			   $.messager.alert(<span class="string">'提示'</span>,<span class="string">'修改商品失败!'</span>);</div><div class="line">		   &#125;</div><div class="line">		&#125;);</div><div class="line">	&#125;</div><div class="line">&lt;<span class="regexp">/script&gt;</span></div></pre></td></tr></table></figure>
<p>和商品添加页面提交一样，这里同样未来做到更加明了的restful化，具体请参考 商品添加 那篇博文</p>
<p>js修改如下：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//提交到后台的RESTful</span></div><div class="line">		$.ajax(&#123;</div><div class="line">		   <span class="attr">type</span>: <span class="string">"PUT"</span>,</div><div class="line">		   <span class="attr">url</span>: <span class="string">"/rest/item"</span>,</div><div class="line">		   <span class="attr">data</span>: $(<span class="string">"#itemeEditForm"</span>).serialize(),</div><div class="line">		   <span class="attr">statusCode</span> : &#123;</div><div class="line">			   <span class="number">204</span> : <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">				   $.messager.alert(<span class="string">'提示'</span>,<span class="string">'修改商品成功!'</span>,<span class="string">'info'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">						$(<span class="string">"#itemEditWindow"</span>).window(<span class="string">'close'</span>);</div><div class="line">						$(<span class="string">"#itemList"</span>).datagrid(<span class="string">"reload"</span>);</div><div class="line">					&#125;);</div><div class="line">			   &#125;,</div><div class="line">			   <span class="number">400</span> : <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">				   $.messager.alert(<span class="string">'提示'</span>,<span class="string">'请求参数不合法!'</span>);</div><div class="line">			   &#125;,</div><div class="line">			   <span class="number">500</span> : <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">				   $.messager.alert(<span class="string">'提示'</span>,<span class="string">'修改商品失败!'</span>);</div><div class="line">			   &#125;</div><div class="line">		   &#125;</div><div class="line">		&#125;);</div></pre></td></tr></table></figure>
<h3 id="后台实现"><a href="#后台实现" class="headerlink" title="后台实现"></a>后台实现</h3><h4 id="service："><a href="#service：" class="headerlink" title="service："></a>service：</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line">  * 商品修改</div><div class="line">  */</div><div class="line"> <span class="function"><span class="keyword">public</span> Boolean <span class="title">updateItem</span><span class="params">(Item item,String desc)</span></span>&#123;</div><div class="line">     <span class="comment">//强制设置不能更新的字段为空,防止恶意修改</span></div><div class="line">     item.setStatus(<span class="keyword">null</span>);</div><div class="line">     item.setCreated(<span class="keyword">null</span>);</div><div class="line"></div><div class="line">     Integer change1 = <span class="keyword">super</span>.updateSelective(item);</div><div class="line"></div><div class="line">     <span class="comment">//更新商品描述</span></div><div class="line">     ItemDesc itemDesc=<span class="keyword">new</span> ItemDesc();</div><div class="line">     itemDesc.setItemId(item.getId());</div><div class="line">     itemDesc.setItemDesc(desc);</div><div class="line">     Integer change2 = <span class="keyword">this</span>.itemDescService.updateSelective(itemDesc);</div><div class="line"></div><div class="line">     <span class="keyword">return</span> change1.intValue()==<span class="number">1</span>&amp;&amp;change2.intValue()==<span class="number">1</span>;</div><div class="line"></div><div class="line"> &#125;</div></pre></td></tr></table></figure>
<h4 id="controller实现："><a href="#controller实现：" class="headerlink" title="controller实现："></a>controller实现：</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line">     * 更新商品数据</div><div class="line">     */</div><div class="line">    <span class="meta">@RequestMapping</span>(method = RequestMethod.PUT)</div><div class="line">    <span class="function"><span class="keyword">public</span> ResponseEntity&lt;Void&gt; <span class="title">updateItem</span><span class="params">(Item item, @RequestParam(<span class="string">"desc"</span>)</span> String desc)</span>&#123;</div><div class="line">        <span class="keyword">if</span> (LOGGER.isInfoEnabled()) &#123;</div><div class="line">            LOGGER.info(<span class="string">"修改商品，item = &#123;&#125;, desc = &#123;&#125;"</span>, item, desc);</div><div class="line">        &#125;</div><div class="line">        <span class="comment">/**</span></div><div class="line">         * TODO 校验以后完善</div><div class="line">         */</div><div class="line">        <span class="keyword">if</span> (item.getPrice() == <span class="keyword">null</span> || item.getPrice().intValue() == <span class="number">0</span>) &#123;</div><div class="line">            <span class="keyword">if</span> (LOGGER.isInfoEnabled()) &#123;</div><div class="line">                LOGGER.info(<span class="string">"修改商品时用户输入的参数不合法，item = &#123;&#125;, desc = &#123;&#125;"</span>, item, desc);</div><div class="line">            &#125;</div><div class="line">            <span class="comment">// 参数有误，返回400</span></div><div class="line">            <span class="comment">//ResponseEntity&lt;Void&gt; build();</span></div><div class="line">            <span class="keyword">return</span> ResponseEntity.status(HttpStatus.BAD_REQUEST).build();</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            Boolean updateItem = <span class="keyword">this</span>.itemService.updateItem(item, desc);</div><div class="line">            <span class="keyword">if</span> (updateItem) &#123;</div><div class="line">                <span class="keyword">if</span> (LOGGER.isInfoEnabled()) &#123;</div><div class="line">                    LOGGER.info(<span class="string">"修改商品成功! id = &#123;&#125;"</span>, item.getId());</div><div class="line">                &#125;</div><div class="line">                <span class="comment">//CREATED(201, "Created"),</span></div><div class="line">                <span class="keyword">return</span> ResponseEntity.status(HttpStatus.CREATED).build();</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">            LOGGER.error(<span class="string">"修改商品失败! item = "</span> + item + <span class="string">", desc = "</span> + desc, e);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).build();</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<h4 id="启动项目，测试"><a href="#启动项目，测试" class="headerlink" title="启动项目，测试"></a>启动项目，测试</h4><p>结果：</p>
<p><img src="http://og0sybnix.bkt.clouddn.com/%E5%95%86%E5%93%81%E4%BF%AE%E6%94%B9%E6%88%90%E5%8A%9F.png" alt=""></p>
<p>商品的删除很简单，这里就不去说了，边写博客边迭代进程实在太慢，先实现主要的</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Migo商城2-0-商品的编辑-九&quot;&gt;&lt;a href=&quot;#Migo商城2-0-商品的编辑-九&quot; class=&quot;headerlink&quot; title=&quot;Migo商城2.0  商品的编辑 九&quot;&gt;&lt;/a&gt;Migo商城2.0  商品的编辑 九&lt;/h2&gt;&lt;p&gt;商品的添加查询做完，接着就是修改和删除了&lt;/p&gt;
&lt;p&gt;先做修改，也就是编辑&lt;/p&gt;
&lt;h3 id=&quot;商品编辑：&quot;&gt;&lt;a href=&quot;#商品编辑：&quot; class=&quot;headerlink&quot; title=&quot;商品编辑：&quot;&gt;&lt;/a&gt;商品编辑：&lt;/h3&gt;&lt;p&gt;需求的核心应该是&lt;code&gt;数据的回显&lt;/code&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Migo商城2.0" scheme="https://muyinchen.github.io/categories/Migo%E5%95%86%E5%9F%8E2-0/"/>
    
    
      <category term="Migo商城2.0" scheme="https://muyinchen.github.io/tags/Migo%E5%95%86%E5%9F%8E2-0/"/>
    
  </entry>
  
  <entry>
    <title>Migo商城2.0 查询商品列表的实现 八</title>
    <link href="https://muyinchen.github.io/2016/11/13/Migo%E5%95%86%E5%9F%8E2.0%20%E6%9F%A5%E8%AF%A2%E5%95%86%E5%93%81%E5%88%97%E8%A1%A8%E7%9A%84%E5%AE%9E%E7%8E%B0%20%E5%85%AB%20/"/>
    <id>https://muyinchen.github.io/2016/11/13/Migo商城2.0 查询商品列表的实现 八 /</id>
    <published>2016-11-13T12:35:41.356Z</published>
    <updated>2016-11-13T12:37:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Migo商城2-0-查询商品列表的实现-八"><a href="#Migo商城2-0-查询商品列表的实现-八" class="headerlink" title="Migo商城2.0 查询商品列表的实现 八"></a>Migo商城2.0 查询商品列表的实现 八</h2><h3 id="展示商品列表："><a href="#展示商品列表：" class="headerlink" title="展示商品列表："></a>展示商品列表：</h3><h4 id="请求的URL："><a href="#请求的URL：" class="headerlink" title="请求的URL："></a>请求的URL：</h4><p><img src="http://og0sybnix.bkt.clouddn.com/itemlist.png" alt=""></p>
<p>在商品数据处理这里，默认情况下，会直接显示返回的数据，但是有些情况下不能直接显示，如：价格、日期，需要自己指定formatter函数</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">th</span> <span class="attr">data-options</span>=<span class="string">"field:'status',width:60,align:'center',formatter:migo.formatItemStatus"</span>&gt;</span>状态<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">       <span class="tag">&lt;<span class="name">th</span> <span class="attr">data-options</span>=<span class="string">"field:'created',width:130,align:'center',formatter:migo.formatDateTime"</span>&gt;</span>创建日期<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">       <span class="tag">&lt;<span class="name">th</span> <span class="attr">data-options</span>=<span class="string">"field:'updated',width:130,align:'center',formatter:migo.formatDateTime"</span>&gt;</span>更新日期<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div></pre></td></tr></table></figure>
<a id="more"></a>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 格式化时间</span></div><div class="line">	formatDateTime : <span class="function"><span class="keyword">function</span>(<span class="params">val,row</span>)</span>&#123;</div><div class="line">		<span class="keyword">var</span> now = <span class="keyword">new</span> <span class="built_in">Date</span>(val);</div><div class="line">    	<span class="keyword">return</span> now.format(<span class="string">"yyyy-MM-dd hh:mm:ss"</span>);</div><div class="line">	&#125;,</div><div class="line">	<span class="comment">// 格式化连接</span></div><div class="line">	formatUrl : <span class="function"><span class="keyword">function</span>(<span class="params">val,row</span>)</span>&#123;</div><div class="line">		<span class="keyword">if</span>(val)&#123;</div><div class="line">			<span class="keyword">return</span> <span class="string">"&lt;a href='"</span>+val+<span class="string">"' target='_blank'&gt;查看&lt;/a&gt;"</span>;			</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">return</span> <span class="string">""</span>;</div><div class="line">	&#125;,</div><div class="line">	<span class="comment">// 格式化价格</span></div><div class="line">	formatPrice : <span class="function"><span class="keyword">function</span>(<span class="params">val,row</span>)</span>&#123;</div><div class="line">		<span class="keyword">return</span> (val/<span class="number">100</span>).toFixed(<span class="number">2</span>);</div><div class="line">	&#125;,</div><div class="line">	<span class="comment">// 格式化商品的状态</span></div><div class="line">	formatItemStatus : <span class="function"><span class="keyword">function</span> <span class="title">formatStatus</span>(<span class="params">val,row</span>)</span>&#123;</div><div class="line">        <span class="keyword">if</span> (val == <span class="number">1</span>)&#123;</div><div class="line">            <span class="keyword">return</span> <span class="string">'正常'</span>;</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(val == <span class="number">2</span>)&#123;</div><div class="line">        	<span class="keyword">return</span> <span class="string">'&lt;span style="color:red;"&gt;下架&lt;/span&gt;'</span>;</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">        	<span class="keyword">return</span> <span class="string">'未知'</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;,</div></pre></td></tr></table></figure>
<p>而上面的日期格式化，这里通过在Date对象的原型上进行扩展format,其实就是个类似Java里的继承，这也是js松散编程的自由性的体现</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">Date</span>.prototype.format = <span class="function"><span class="keyword">function</span>(<span class="params">format</span>)</span>&#123; </div><div class="line">    <span class="keyword">var</span> o =  &#123; </div><div class="line">    <span class="string">"M+"</span> : <span class="keyword">this</span>.getMonth()+<span class="number">1</span>, <span class="comment">//month </span></div><div class="line">    <span class="string">"d+"</span> : <span class="keyword">this</span>.getDate(), <span class="comment">//day </span></div><div class="line">    <span class="string">"h+"</span> : <span class="keyword">this</span>.getHours(), <span class="comment">//hour </span></div><div class="line">    <span class="string">"m+"</span> : <span class="keyword">this</span>.getMinutes(), <span class="comment">//minute </span></div><div class="line">    <span class="string">"s+"</span> : <span class="keyword">this</span>.getSeconds(), <span class="comment">//second </span></div><div class="line">    <span class="string">"q+"</span> : <span class="built_in">Math</span>.floor((<span class="keyword">this</span>.getMonth()+<span class="number">3</span>)/<span class="number">3</span>), <span class="comment">//quarter </span></div><div class="line">    <span class="string">"S"</span> : <span class="keyword">this</span>.getMilliseconds() <span class="comment">//millisecond </span></div><div class="line">    &#125;;</div><div class="line">    <span class="keyword">if</span>(<span class="regexp">/(y+)/</span>.test(format))&#123; </div><div class="line">    	format = format.replace(<span class="built_in">RegExp</span>.$<span class="number">1</span>, (<span class="keyword">this</span>.getFullYear()+<span class="string">""</span>).substr(<span class="number">4</span> - <span class="built_in">RegExp</span>.$<span class="number">1.</span>length)); </div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> k <span class="keyword">in</span> o)  &#123; </div><div class="line">	    <span class="keyword">if</span>(<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"("</span>+ k +<span class="string">")"</span>).test(format))&#123; </div><div class="line">	    	format = format.replace(<span class="built_in">RegExp</span>.$<span class="number">1</span>, <span class="built_in">RegExp</span>.$<span class="number">1.</span>length==<span class="number">1</span> ? o[k] : (<span class="string">"00"</span>+ o[k]).substr((<span class="string">""</span>+ o[k]).length)); </div><div class="line">	    &#125; </div><div class="line">    &#125; </div><div class="line">    <span class="keyword">return</span> format; </div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<h4 id="Service的实现："><a href="#Service的实现：" class="headerlink" title="Service的实现："></a>Service的实现：</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line">     * 查询商品列表</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> EasyUIDataGridResult <span class="title">getItemList</span><span class="params">(Integer page,Integer rows)</span></span>&#123;</div><div class="line"></div><div class="line">        <span class="comment">//执行查询</span></div><div class="line">        Example example=<span class="keyword">new</span> Example(Item.class);</div><div class="line">        example.orderBy(<span class="string">"updated"</span>).desc();</div><div class="line"></div><div class="line">       <span class="comment">// example.setOrderByClause("updated DESC");</span></div><div class="line">        PageHelper.startPage(page,rows);</div><div class="line"></div><div class="line">        List&lt;Item&gt; itemList = <span class="keyword">this</span>.itemMapper.selectByExample(example);</div><div class="line"></div><div class="line">        PageInfo&lt;Item&gt; pageInfo=<span class="keyword">new</span> PageInfo&lt;&gt;(itemList);</div><div class="line">        <span class="comment">//返回处理结果</span></div><div class="line">        EasyUIDataGridResult result=<span class="keyword">new</span> EasyUIDataGridResult();</div><div class="line">        result.setTotal(pageInfo.getTotal());</div><div class="line">        result.setRows(pageInfo.getList());</div><div class="line">        <span class="comment">//return new EasyUIDataGridResult(pageInfo.getList(), pageInfo.getTotal());</span></div><div class="line">        <span class="keyword">return</span> result;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<h4 id="controller实现"><a href="#controller实现" class="headerlink" title="controller实现"></a>controller实现</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@RequestMapping</span>(method = RequestMethod.GET)</div><div class="line">    <span class="function"><span class="keyword">public</span> ResponseEntity&lt;EasyUIDataGridResult&gt; <span class="title">getItemList</span><span class="params">(</span></span></div><div class="line">            @RequestParam(value = <span class="string">"page"</span>, defaultValue = <span class="string">"0"</span>) Integer page,</div><div class="line">            @<span class="title">RequestParam</span><span class="params">(value = <span class="string">"rows"</span>, defaultValue = <span class="string">"30"</span>)</span> Integer rows) &#123;</div><div class="line"></div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            EasyUIDataGridResult itemList = <span class="keyword">this</span>.itemService.getItemList(page, rows);</div><div class="line">            <span class="keyword">return</span> ResponseEntity.ok(itemList);</div><div class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line"></div><div class="line">            LOGGER.error(<span class="string">"查询商品出错：page="</span>+page+<span class="string">",rows="</span>+rows,e);</div><div class="line">            <span class="keyword">return</span> ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(<span class="keyword">null</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>这里测试下</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@org</span>.junit.<span class="function">Test</span></div><div class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span>&#123;</div><div class="line">       PageHelper.startPage(<span class="number">1</span>, <span class="number">20</span>); <span class="comment">// 核心分页代码</span></div><div class="line">       List&lt;Item&gt; cls =  itemMapper.selectAll();</div><div class="line">       <span class="keyword">for</span> (Item item : cls) &#123;</div><div class="line">           System.out.println(item.getTitle());</div><div class="line">       &#125;</div><div class="line">   &#125;</div></pre></td></tr></table></figure>
<h3 id="开发出现bug："><a href="#开发出现bug：" class="headerlink" title="开发出现bug："></a>开发出现bug：</h3><p>运行项目后发现没有分页，debug发现分页插件不好使，最后通过查pagehelper和通用mapper的文档发现自己配置有错误，修改如下：</p>
<p>Mybatis配置文件修改如下：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</div><div class="line"><span class="meta">&lt;!DOCTYPE configuration</span></div><div class="line">        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"</div><div class="line">        "http://mybatis.org/dtd/mybatis-3-config.dtd"&gt;</div><div class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">settings</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- Globally enables or disables any caches configured in any mapper under this configuration --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"cacheEnabled"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></div><div class="line">        <span class="comment">&lt;!-- Sets the number of seconds the driver will wait for a response from the database --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"defaultStatementTimeout"</span> <span class="attr">value</span>=<span class="string">"3000"</span>/&gt;</span></div><div class="line">        <span class="comment">&lt;!-- Enables automatic mapping from classic database column names A_COLUMN to camel case classic Java property names aColumn --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"mapUnderscoreToCamelCase"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></div><div class="line">        <span class="comment">&lt;!-- Allows JDBC support for generated keys. A compatible driver is required.</span></div><div class="line">        This setting forces generated keys to be used if set to true,</div><div class="line">         as some drivers deny compatibility but still work --&gt;</div><div class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"useGeneratedKeys"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">settings</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- Continue going here --&gt;</span></div><div class="line">    <span class="comment">&lt;!--&lt;plugins&gt;</span></div><div class="line">        &amp;lt;!&amp;ndash; 配置分页助手 &amp;ndash;&amp;gt;</div><div class="line">        &lt;plugin interceptor="com.github.pagehelper.PageHelper"&gt;</div><div class="line">            &lt;property name="dialect" value="mysql" /&gt;</div><div class="line"></div><div class="line">            &amp;lt;!&amp;ndash; 该参数默认为false &amp;ndash;&amp;gt;</div><div class="line">            &amp;lt;!&amp;ndash; 设置为true时，会将RowBounds第一个参数offset当成pageNum页码使用 &amp;ndash;&amp;gt;</div><div class="line">            &amp;lt;!&amp;ndash; 和startPage中的pageNum效果一样&amp;ndash;&amp;gt;</div><div class="line">            &lt;property name="offsetAsPageNum" value="true"/&gt;</div><div class="line">            &amp;lt;!&amp;ndash; 该参数默认为false &amp;ndash;&amp;gt;</div><div class="line">            &amp;lt;!&amp;ndash; 设置为true时，使用RowBounds分页会进行count查询 &amp;ndash;&amp;gt;</div><div class="line">            &lt;property name="rowBoundsWithCount" value="true"/&gt;</div><div class="line">            &amp;lt;!&amp;ndash; 设置为true时，如果pageSize=0或者RowBounds.limit = 0就会查询出全部的结果 &amp;ndash;&amp;gt;</div><div class="line">            &amp;lt;!&amp;ndash; （相当于没有执行分页查询，但是返回结果仍然是Page类型）&amp;ndash;&amp;gt;</div><div class="line">            &lt;property name="pageSizeZero" value="true"/&gt;</div><div class="line">            &amp;lt;!&amp;ndash; 3.3.0版本可用 - 分页参数合理化，默认false禁用 &amp;ndash;&amp;gt;</div><div class="line">            &amp;lt;!&amp;ndash; 启用合理化时，如果pageNum&lt;1会查询第一页，如果pageNum&gt;pages会查询最后一页 &amp;ndash;&amp;gt;</div><div class="line">            &amp;lt;!&amp;ndash; 禁用合理化时，如果pageNum&lt;1或pageNum&gt;pages会返回空数据 &amp;ndash;&amp;gt;</div><div class="line">            &lt;property name="reasonable" value="false"/&gt;</div><div class="line">        &lt;/plugin&gt;</div><div class="line"></div><div class="line">    &lt;/plugins&gt;--&gt;</div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></div></pre></td></tr></table></figure>
<p><code>applicationContext-dao.xml</code>配置如下</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></div><div class="line">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span> <span class="attr">xmlns:p</span>=<span class="string">"http://www.springframework.org/schema/p"</span></div><div class="line">       <span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span> <span class="attr">xmlns:tx</span>=<span class="string">"http://www.springframework.org/schema/tx"</span></div><div class="line">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></div><div class="line">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd</span></div><div class="line">	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd</div><div class="line">	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd</div><div class="line">	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd"&gt;</div><div class="line">    <span class="comment">&lt;!-- 数据库连接池 --&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 加载配置文件 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">"classpath:properties/*.properties"</span> /&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 数据库连接池 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"dataSource"</span> <span class="attr">class</span>=<span class="string">"com.alibaba.druid.pool.DruidDataSource"</span></span></div><div class="line">          <span class="attr">destroy-method</span>=<span class="string">"close"</span>&gt;</div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.url&#125;"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.username&#125;"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.password&#125;"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driverClassName"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.driver&#125;"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxActive"</span> <span class="attr">value</span>=<span class="string">"10"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"minIdle"</span> <span class="attr">value</span>=<span class="string">"5"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- 配置mybatis的SessionFactory --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"sqlSessionFactory"</span> <span class="attr">class</span>=<span class="string">"org.mybatis.spring.SqlSessionFactoryBean"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span>/&gt;</span></div><div class="line">       <span class="comment">&lt;!-- &lt;property name="mapperLocations" value="classpath:/mybatis/mappers/**/*.xml"/&gt;--&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"typeAliasesPackage"</span> <span class="attr">value</span>=<span class="string">"com.migo.pojo"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"plugins"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">array</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"com.github.pagehelper.PageHelper"</span>&gt;</span></div><div class="line">                    <span class="comment">&lt;!-- 这里的几个配置主要演示如何使用，如果不理解，一定要去掉下面的配置 --&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"properties"</span>&gt;</span></div><div class="line">                        <span class="tag">&lt;<span class="name">value</span>&gt;</span></div><div class="line">                            dialect=mysql</div><div class="line">                            <span class="comment">&lt;!--! 3.3.0版本可用 - 分页参数合理化，默认false禁用--&gt;</span></div><div class="line">                            <span class="comment">&lt;!-- 启用合理化时，如果pageNum&lt;1会查询第一页，如果pageNum&gt;pages会查询最后一页 --&gt;</span></div><div class="line">                            <span class="comment">&lt;!-- 禁用合理化时，如果pageNum&lt;1或pageNum&gt;pages会返回空数据 --&gt;</span></div><div class="line">                            reasonable=true</div><div class="line">                            supportMethodsArguments=true</div><div class="line">                            params=count=countSql</div><div class="line">                            autoRuntimeDialect=true</div><div class="line">                        <span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">array</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- 自动扫描注册Mybatis mapper --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"tk.mybatis.spring.mapper.MapperScannerConfigurer"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"basePackage"</span> <span class="attr">value</span>=<span class="string">"com.migo.mapper"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"sqlSessionFactoryBeanName"</span> <span class="attr">value</span>=<span class="string">"sqlSessionFactory"</span>/&gt;</span></div><div class="line">        <span class="comment">&lt;!--下面这个配置可以不写，默认就是这个--&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"properties"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span></div><div class="line">                mappers=tk.mybatis.mapper.common.Mapper</div><div class="line">            <span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="运行后测试效果如图："><a href="#运行后测试效果如图：" class="headerlink" title="运行后测试效果如图："></a>运行后测试效果如图：</h4><p><img src="http://og0sybnix.bkt.clouddn.com/%E6%9F%A5%E8%AF%A2%E5%B9%B6%E5%88%86%E9%A1%B5.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Migo商城2-0-查询商品列表的实现-八&quot;&gt;&lt;a href=&quot;#Migo商城2-0-查询商品列表的实现-八&quot; class=&quot;headerlink&quot; title=&quot;Migo商城2.0 查询商品列表的实现 八&quot;&gt;&lt;/a&gt;Migo商城2.0 查询商品列表的实现 八&lt;/h2&gt;&lt;h3 id=&quot;展示商品列表：&quot;&gt;&lt;a href=&quot;#展示商品列表：&quot; class=&quot;headerlink&quot; title=&quot;展示商品列表：&quot;&gt;&lt;/a&gt;展示商品列表：&lt;/h3&gt;&lt;h4 id=&quot;请求的URL：&quot;&gt;&lt;a href=&quot;#请求的URL：&quot; class=&quot;headerlink&quot; title=&quot;请求的URL：&quot;&gt;&lt;/a&gt;请求的URL：&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;http://og0sybnix.bkt.clouddn.com/itemlist.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;在商品数据处理这里，默认情况下，会直接显示返回的数据，但是有些情况下不能直接显示，如：价格、日期，需要自己指定formatter函数&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;th&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-options&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;field:&#39;status&#39;,width:60,align:&#39;center&#39;,formatter:migo.formatItemStatus&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;状态&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;th&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;th&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-options&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;field:&#39;created&#39;,width:130,align:&#39;center&#39;,formatter:migo.formatDateTime&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;创建日期&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;th&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;th&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;data-options&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;field:&#39;updated&#39;,width:130,align:&#39;center&#39;,formatter:migo.formatDateTime&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;更新日期&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;th&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Migo商城2.0" scheme="https://muyinchen.github.io/categories/Migo%E5%95%86%E5%9F%8E2-0/"/>
    
    
      <category term="Migo商城2.0" scheme="https://muyinchen.github.io/tags/Migo%E5%95%86%E5%9F%8E2-0/"/>
    
  </entry>
  
  <entry>
    <title>Migo商城2.0 商品的添加功能实现 七</title>
    <link href="https://muyinchen.github.io/2016/11/12/Migo%E5%95%86%E5%9F%8E2.0%20%E5%95%86%E5%93%81%E7%9A%84%E6%B7%BB%E5%8A%A0%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0%20%E4%B8%83/"/>
    <id>https://muyinchen.github.io/2016/11/12/Migo商城2.0 商品的添加功能实现 七/</id>
    <published>2016-11-12T06:27:03.750Z</published>
    <updated>2016-11-13T03:44:55.172Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Migo商城2-0-商品的添加功能实现-七"><a href="#Migo商城2-0-商品的添加功能实现-七" class="headerlink" title="Migo商城2.0 商品的添加功能实现 七"></a>Migo商城2.0 商品的添加功能实现 七</h1><p>接着看商品的添加功能</p>
<p>向商品表添加一条记录。</p>
<p>商品的基本信息保存到：tb_item</p>
<p>商品的描述：tb_item_desc</p>
<p>下图数据库表分析 可以看出，为保证商品id不能重复，考虑到并发的需求，将自动增长删除</p>
<p>看下图jd商品id的设计是一个数值类型</p>
<p>这里用一个工具类IDUtils生成id</p>
<blockquote>
<p>这里将商品描述和商品的基本数据分离：</p>
<p> 商品描述的数据量大，会导致数据文件变大，影响查询速度。</p>
<p>后期会对商品描述数据的存储做改造，所以需要将描述数据分离</p>
</blockquote>
<a id="more"></a>
<p><img src="http://og0sybnix.bkt.clouddn.com/%E5%95%86%E5%93%81%E8%A1%A8%E7%BC%BA%E9%99%B7.png" alt=""></p>
<p><img src="http://og0sybnix.bkt.clouddn.com/%E6%9B%B4%E6%94%B9%E5%90%8E%E7%9A%84%E5%95%86%E5%93%81%E8%A1%A8.png" alt=""></p>
<p><img src="http://og0sybnix.bkt.clouddn.com/jd%E5%95%86%E5%93%81id.png" alt=""></p>
<h4 id="点击商品类目的叶子节点产生的事件"><a href="#点击商品类目的叶子节点产生的事件" class="headerlink" title="点击商品类目的叶子节点产生的事件"></a>点击商品类目的叶子节点产生的事件</h4><p>如图：</p>
<p><img src="http://og0sybnix.bkt.clouddn.com/%E5%9B%9E%E8%B0%83.png" alt=""></p>
<p>不再解释过多了</p>
<h4 id="接着看新增页面的中的价格有个注意点："><a href="#接着看新增页面的中的价格有个注意点：" class="headerlink" title="接着看新增页面的中的价格有个注意点："></a>接着看新增页面的中的价格有个注意点：</h4><p><img src="http://og0sybnix.bkt.clouddn.com/%E4%BB%B7%E6%A0%BC%E6%8F%90%E4%BA%A4.png" alt=""></p>
<h4 id="再往下，商品描述，就是kindEditor的使用"><a href="#再往下，商品描述，就是kindEditor的使用" class="headerlink" title="再往下，商品描述，就是kindEditor的使用"></a>再往下，商品描述，就是kindEditor的使用</h4><p>1 导入js文件</p>
<p><img src="http://og0sybnix.bkt.clouddn.com/%E5%AF%BC%E5%85%A5js.png" alt=""></p>
<p>2 商品描述</p>
<p><img src="http://og0sybnix.bkt.clouddn.com/%E5%95%86%E5%93%81%E6%8F%8F%E8%BF%B0.png" alt=""></p>
<p>3 通过JS创建出富文本编辑器</p>
<p><img src="http://og0sybnix.bkt.clouddn.com/kindeditor.png" alt=""></p>
<h4 id="最后，提交商品数据"><a href="#最后，提交商品数据" class="headerlink" title="最后，提交商品数据"></a>最后，提交商品数据</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;a href=<span class="string">"javascript:void(0)"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"easyui-linkbutton"</span> onclick=<span class="string">"submitForm()"</span>&gt;提交&lt;<span class="regexp">/a&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">submitForm</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	<span class="keyword">if</span>(!$(<span class="string">'#itemAddForm'</span>).form(<span class="string">'validate'</span>))&#123;</div><div class="line">		$.messager.alert(<span class="string">'提示'</span>,<span class="string">'表单还未填写完成!'</span>);</div><div class="line">		<span class="keyword">return</span> ;</div><div class="line">	&#125;</div><div class="line">	<span class="comment">//处理商品的价格的单位，将元转化为分</span></div><div class="line">	$(<span class="string">"#itemAddForm [name=price]"</span>).val(<span class="built_in">eval</span>($(<span class="string">"#itemAddForm [name=priceView]"</span>).val()) * <span class="number">100</span>);</div><div class="line">	<span class="comment">//将编辑器中的内容同步到隐藏多行文本中</span></div><div class="line">	itemAddEditor.sync();</div><div class="line">	</div><div class="line">	<span class="comment">//输入的规格参数数据保存为json</span></div><div class="line">	<span class="keyword">var</span> paramJson = [];</div><div class="line">	$(<span class="string">"#itemAddForm .params li"</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params">i,e</span>)</span>&#123;</div><div class="line">		<span class="keyword">var</span> trs = $(e).find(<span class="string">"tr"</span>);</div><div class="line">		<span class="keyword">var</span> group = trs.eq(<span class="number">0</span>).text();</div><div class="line">		<span class="keyword">var</span> ps = [];</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">1</span>;i&lt;trs.length;i++)&#123;</div><div class="line">			<span class="keyword">var</span> tr = trs.eq(i);</div><div class="line">			ps.push(&#123;</div><div class="line">				<span class="string">"k"</span> : $.trim(tr.find(<span class="string">"td"</span>).eq(<span class="number">0</span>).find(<span class="string">"span"</span>).text()),</div><div class="line">				<span class="string">"v"</span> : $.trim(tr.find(<span class="string">"input"</span>).val())</div><div class="line">			&#125;);</div><div class="line">		&#125;</div><div class="line">		paramJson.push(&#123;</div><div class="line">			<span class="string">"group"</span> : group,</div><div class="line">			<span class="string">"params"</span>: ps</div><div class="line">		&#125;);</div><div class="line">	&#125;);</div><div class="line">	paramJson = <span class="built_in">JSON</span>.stringify(paramJson);</div><div class="line">	</div><div class="line">	$(<span class="string">"#itemAddForm [name=itemParams]"</span>).val(paramJson);</div><div class="line">	</div><div class="line">	<span class="comment">/*</span></div><div class="line">	$.post("/rest/item/save",$("#itemAddForm").serialize(), function(data)&#123;</div><div class="line">		if(data.status == 200)&#123;</div><div class="line">			$.messager.alert('提示','新增商品成功!');</div><div class="line">		&#125;</div><div class="line">	&#125;);</div><div class="line">	*/</div><div class="line">	</div><div class="line">	<span class="comment">//提交到后台的RESTful</span></div><div class="line">	$.ajax(&#123;</div><div class="line">	   <span class="attr">type</span>: <span class="string">"POST"</span>,</div><div class="line">	   <span class="attr">url</span>: <span class="string">"/rest/item"</span>,</div><div class="line">	   <span class="attr">data</span>: $(<span class="string">"#itemAddForm"</span>).serialize(),</div><div class="line">	   <span class="attr">success</span>: <span class="function"><span class="keyword">function</span>(<span class="params">msg</span>)</span>&#123;</div><div class="line">		   $.messager.alert(<span class="string">'提示'</span>,<span class="string">'新增商品成功!'</span>);</div><div class="line">	   &#125;,</div><div class="line">	   <span class="attr">error</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">		   $.messager.alert(<span class="string">'提示'</span>,<span class="string">'新增商品失败!'</span>);</div><div class="line">	   &#125;</div><div class="line">	&#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>如何做到更加明了的restful化，查jquery api 发现：</p>
<ul>
<li><ul>
<li><blockquote>
<p><strong>statusCode</strong> (默认值：<code>{}</code>)</p>
<p>类型：<a href="Types.htm#PlainObject">PlainObject</a></p>
<p>数字HTTP代码，以及当响应具有对应的代码时执行的函数，所构成的对象。举个例子，以下代码将提醒响应状态是404：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&gt; $.ajax(&#123;</div><div class="line">&gt;   statusCode: &#123;</div><div class="line">&gt;     <span class="number">404</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">&gt;       alert( <span class="string">"page not found"</span> );</div><div class="line">&gt;     &#125;</div><div class="line">&gt;   &#125;</div><div class="line">&gt; &#125;);</div><div class="line">&gt;</div></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<p>&gt;</p>
<blockquote>
<p>如果请求成功了，状态代码函数会取用和success回调函数同样的参数；如果以失败告终（包括3xx重定向），状态代码函数会取用和error回调函数同样的参数。</p>
<p>1.5</p>
</blockquote>
</li>
</ul>
<p>所以上述代码ajax提交这里可以更改为：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//提交到后台的RESTful</span></div><div class="line">$.ajax(&#123;</div><div class="line">	   <span class="attr">type</span>: <span class="string">"POST"</span>,</div><div class="line">	   <span class="attr">url</span>: <span class="string">"/rest/item"</span>,</div><div class="line">	   <span class="attr">data</span>: $(<span class="string">"#itemAddForm"</span>).serialize(),<span class="comment">//表单序列化,不明白查api</span></div><div class="line">	   statusCode : &#123;</div><div class="line">			   <span class="number">201</span> : <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">				   $.messager.alert(<span class="string">'提示'</span>,<span class="string">'新增商品成功!'</span>);</div><div class="line">			   &#125;,</div><div class="line">				<span class="number">400</span> : <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">				   $.messager.alert(<span class="string">'提示'</span>,<span class="string">'提交的参数不合法!'</span>);</div><div class="line">			   &#125;,</div><div class="line">			   <span class="number">500</span> : <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">				   $.messager.alert(<span class="string">'提示'</span>,<span class="string">'新增商品失败!'</span>);</div><div class="line">			   &#125;</div><div class="line">		   &#125;</div><div class="line"></div><div class="line">	&#125;);</div></pre></td></tr></table></figure>
<h4 id="商品描述后台处理"><a href="#商品描述后台处理" class="headerlink" title="商品描述后台处理"></a>商品描述后台处理</h4><p>因为使用了通用mapper，那就按照通用mapper的方法来</p>
<p>看@id 这样就可以认为是对应表的主键id了，一下子方便了不少，省去了，第一个版本中的添加属性条件的判断</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Table</span>(name = <span class="string">"tb_item_desc"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ItemDesc</span> <span class="keyword">extends</span> <span class="title">BasePojo</span></span>&#123;</div><div class="line">    </div><div class="line">    <span class="meta">@Id</span><span class="comment">//对应tb_item中的id</span></div><div class="line">    <span class="keyword">private</span> Long itemId;</div><div class="line">    </div><div class="line">    <span class="keyword">private</span> String itemDesc;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> Long <span class="title">getItemId</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> itemId;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setItemId</span><span class="params">(Long itemId)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.itemId = itemId;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getItemDesc</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> itemDesc;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setItemDesc</span><span class="params">(String itemDesc)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.itemDesc = itemDesc;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    </div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>service代码实现：</p>
<p>因要保证事务一致性，所以保存商品和商品描述要在一个方法内实现，具体代码如下：</p>
<p><code>ItemDescService</code>：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.migo.service;</div><div class="line"></div><div class="line"><span class="keyword">import</span> com.migo.pojo.ItemDesc;</div><div class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Author  知秋</div><div class="line"> * Created by kauw on 2016/11/12.</div><div class="line"> */</div><div class="line"><span class="meta">@Service</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ItemDescService</span> <span class="keyword">extends</span> <span class="title">BaseService</span>&lt;<span class="title">ItemDesc</span>&gt; </span>&#123;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><code>ItemService</code></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.migo.service;</div><div class="line"></div><div class="line"><span class="keyword">import</span> com.migo.pojo.Item;</div><div class="line"><span class="keyword">import</span> com.migo.pojo.ItemDesc;</div><div class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</div><div class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Author  知秋</div><div class="line"> * Created by kauw on 2016/11/12.</div><div class="line"> */</div><div class="line"><span class="meta">@Service</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ItemService</span> <span class="keyword">extends</span> <span class="title">BaseService</span>&lt;<span class="title">Item</span>&gt; </span>&#123;</div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="keyword">private</span> ItemDescService itemDescService;</div><div class="line">    <span class="comment">//desc参考前端页面传过来的数据是序列化成字符串的</span></div><div class="line">    <span class="function"><span class="keyword">public</span> Boolean <span class="title">saveItem</span><span class="params">(Item item,String desc)</span></span>&#123;</div><div class="line">        item.setId(<span class="keyword">null</span>);<span class="comment">//强制设置id为null，避免产生安全漏洞</span></div><div class="line">        <span class="comment">//'商品状态，1-正常，2-下架，3-删除'</span></div><div class="line">        item.setStatus(<span class="number">1</span>);</div><div class="line"></div><div class="line">        <span class="comment">//保存商品数据</span></div><div class="line">        Integer save = <span class="keyword">super</span>.save(item);</div><div class="line"></div><div class="line">        ItemDesc itemDesc=<span class="keyword">new</span> ItemDesc();</div><div class="line">        itemDesc.setItemDesc(desc);</div><div class="line">        itemDesc.setItemId(item.getId());</div><div class="line"></div><div class="line">        <span class="comment">//保存商品描述数据</span></div><div class="line">        Integer save1 = <span class="keyword">this</span>.itemDescService.save(itemDesc);</div><div class="line">        <span class="keyword">return</span> save.intValue()==<span class="number">1</span>&amp;&amp;save1.intValue()==<span class="number">1</span>;</div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>controller实现</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.migo.controller;</div><div class="line"></div><div class="line"><span class="keyword">import</span> com.migo.pojo.Item;</div><div class="line"><span class="keyword">import</span> com.migo.service.ItemService;</div><div class="line"><span class="keyword">import</span> org.slf4j.Logger;</div><div class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</div><div class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</div><div class="line"><span class="keyword">import</span> org.springframework.http.HttpStatus;</div><div class="line"><span class="keyword">import</span> org.springframework.http.ResponseEntity;</div><div class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMethod;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Author  知秋</div><div class="line"> * Created by kauw on 2016/11/12.</div><div class="line"> */</div><div class="line"><span class="meta">@Controller</span></div><div class="line"><span class="meta">@RequestMapping</span>(<span class="string">"item"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ItemController</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger LOGGER= LoggerFactory.getLogger(ItemController.class);</div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="keyword">private</span> ItemService itemService;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 新增商品</div><div class="line">     */</div><div class="line"><span class="meta">@RequestMapping</span>(method = RequestMethod.POST)</div><div class="line">    <span class="function"><span class="keyword">public</span> ResponseEntity&lt;Void&gt; <span class="title">addItem</span><span class="params">(Item item, @RequestParam(<span class="string">"desc"</span>)</span> String desc)</span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (LOGGER.isInfoEnabled()) &#123;</div><div class="line">        LOGGER.info(<span class="string">"新增商品，item = &#123;&#125;, desc = &#123;&#125;"</span>, item, desc);</div><div class="line">    &#125;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * TODO 校验以后完善</div><div class="line">     */</div><div class="line">    <span class="keyword">if</span> (item.getPrice()==<span class="keyword">null</span>||item.getPrice().intValue()==<span class="number">0</span>)&#123;</div><div class="line">        <span class="keyword">if</span> (LOGGER.isInfoEnabled())&#123;</div><div class="line">            LOGGER.info(<span class="string">"新增商品时用户输入的参数不合法，item = &#123;&#125;, desc = &#123;&#125;"</span>, item, desc);</div><div class="line">        &#125;</div><div class="line">        <span class="comment">// 参数有误，返回400</span></div><div class="line">        <span class="comment">//ResponseEntity&lt;Void&gt; build();</span></div><div class="line">        <span class="keyword">return</span> ResponseEntity.status(HttpStatus.BAD_REQUEST).build();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        Boolean saveItem = <span class="keyword">this</span>.itemService.saveItem(item, desc);</div><div class="line">        <span class="keyword">if</span> (saveItem) &#123;</div><div class="line">            <span class="keyword">if</span> (LOGGER.isInfoEnabled()) &#123;</div><div class="line">                LOGGER.info(<span class="string">"新增商品成功! id = &#123;&#125;"</span>, item.getId());</div><div class="line">            &#125;</div><div class="line">            <span class="comment">//CREATED(201, "Created"),</span></div><div class="line">            <span class="keyword">return</span> ResponseEntity.status(HttpStatus.CREATED).build();</div><div class="line">        &#125;</div><div class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">        LOGGER.error(<span class="string">"新增商品失败! item = "</span> + item + <span class="string">", desc = "</span> + desc, e);</div><div class="line">        e.printStackTrace();</div><div class="line"></div><div class="line"></div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).build();</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>运行项目</p>
<p>出错：</p>
<p><img src="http://og0sybnix.bkt.clouddn.com/%E5%BC%82%E5%B8%B81.png" alt=""></p>
<p>解决：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.migo.mapper;</div><div class="line"></div><div class="line"><span class="keyword">import</span> com.migo.pojo.Item;</div><div class="line"><span class="keyword">import</span> tk.mybatis.mapper.common.Mapper;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Author  知秋</div><div class="line"> * Created by kauw on 2016/11/12.</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ItemMapper</span> <span class="keyword">extends</span> <span class="title">Mapper</span>&lt;<span class="title">Item</span>&gt; </span>&#123;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.migo.mapper;</div><div class="line"></div><div class="line"><span class="keyword">import</span> com.migo.pojo.ItemDesc;</div><div class="line"><span class="keyword">import</span> tk.mybatis.mapper.common.Mapper;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Author  知秋</div><div class="line"> * Created by kauw on 2016/11/12.</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ItemDescMapper</span> <span class="keyword">extends</span> <span class="title">Mapper</span>&lt;<span class="title">ItemDesc</span>&gt; </span>&#123;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>重启运行，添加图片的时候出错：</p>
<p>本来还以为是父子容器的关系，改了一下，发现原来是自己写属性配置文件是搞错了，真坑。。。</p>
<p><img src="http://og0sybnix.bkt.clouddn.com/%E5%9B%BE%E7%89%87%E4%B8%8A%E4%BC%A0%E6%88%90%E5%8A%9F.png" alt=""></p>
<p>图片上传功能完成</p>
<p>插入图片描述，出错：</p>
<p><img src="http://og0sybnix.bkt.clouddn.com/%E5%87%BA%E9%94%992.png" alt=""></p>
<p>解决：</p>
<p><code>PicService</code>代码修改为：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Service</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ItemService</span> <span class="keyword">extends</span> <span class="title">BaseService</span>&lt;<span class="title">Item</span>&gt; </span>&#123;</div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="keyword">private</span> ItemDescService itemDescService;</div><div class="line">    <span class="comment">//desc参考前端页面传过来的数据是序列化成字符串的</span></div><div class="line">    <span class="function"><span class="keyword">public</span> Boolean <span class="title">saveItem</span><span class="params">(Item item,String desc)</span></span>&#123;</div><div class="line">        <span class="comment">// 1、生成商品id</span></div><div class="line">        <span class="keyword">long</span> itemId = IDUtils.genItemId();</div><div class="line">        <span class="comment">// 2、对TbItem对象补全属性。</span></div><div class="line">        item.setId(itemId);</div><div class="line"></div><div class="line">        <span class="comment">//'商品状态，1-正常，2-下架，3-删除'</span></div><div class="line">        item.setStatus(<span class="number">1</span>);</div><div class="line"></div><div class="line">        <span class="comment">//保存商品数据</span></div><div class="line">        Integer save = <span class="keyword">super</span>.save(item);</div><div class="line"></div><div class="line">        ItemDesc itemDesc=<span class="keyword">new</span> ItemDesc();</div><div class="line">        itemDesc.setItemDesc(desc);</div><div class="line">        itemDesc.setItemId(item.getId());</div><div class="line"></div><div class="line">        <span class="comment">//保存商品描述数据</span></div><div class="line">        Integer save1 = <span class="keyword">this</span>.itemDescService.save(itemDesc);</div><div class="line">        <span class="keyword">return</span> save.intValue()==<span class="number">1</span>&amp;&amp;save1.intValue()==<span class="number">1</span>;</div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>商品增加成功，如图所示：</p>
<p><img src="http://og0sybnix.bkt.clouddn.com/%E5%95%86%E5%93%81%E5%A2%9E%E5%8A%A0%E6%88%90%E5%8A%9F.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Migo商城2-0-商品的添加功能实现-七&quot;&gt;&lt;a href=&quot;#Migo商城2-0-商品的添加功能实现-七&quot; class=&quot;headerlink&quot; title=&quot;Migo商城2.0 商品的添加功能实现 七&quot;&gt;&lt;/a&gt;Migo商城2.0 商品的添加功能实现 七&lt;/h1&gt;&lt;p&gt;接着看商品的添加功能&lt;/p&gt;
&lt;p&gt;向商品表添加一条记录。&lt;/p&gt;
&lt;p&gt;商品的基本信息保存到：tb_item&lt;/p&gt;
&lt;p&gt;商品的描述：tb_item_desc&lt;/p&gt;
&lt;p&gt;下图数据库表分析 可以看出，为保证商品id不能重复，考虑到并发的需求，将自动增长删除&lt;/p&gt;
&lt;p&gt;看下图jd商品id的设计是一个数值类型&lt;/p&gt;
&lt;p&gt;这里用一个工具类IDUtils生成id&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这里将商品描述和商品的基本数据分离：&lt;/p&gt;
&lt;p&gt; 商品描述的数据量大，会导致数据文件变大，影响查询速度。&lt;/p&gt;
&lt;p&gt;后期会对商品描述数据的存储做改造，所以需要将描述数据分离&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Migo商城2.0" scheme="https://muyinchen.github.io/categories/Migo%E5%95%86%E5%9F%8E2-0/"/>
    
    
      <category term="Migo商城2.0" scheme="https://muyinchen.github.io/tags/Migo%E5%95%86%E5%9F%8E2-0/"/>
    
  </entry>
  
  <entry>
    <title>Migo商城2.0 图片上传代码实现 六</title>
    <link href="https://muyinchen.github.io/2016/11/11/Migo%E5%95%86%E5%9F%8E%20%E5%9B%BE%E7%89%87%E4%B8%8A%E4%BC%A0%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%20%E5%85%AD/"/>
    <id>https://muyinchen.github.io/2016/11/11/Migo商城 图片上传代码实现 六/</id>
    <published>2016-11-11T13:19:09.192Z</published>
    <updated>2016-11-13T03:50:25.993Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Migo商城-图片上传代码实现-六"><a href="#Migo商城-图片上传代码实现-六" class="headerlink" title="Migo商城 图片上传代码实现 六"></a>Migo商城 图片上传代码实现 六</h2><p>图片服务器搭建完成后，开始回到商品的图片上传功能的实现</p>
<h4 id="先来分析页面代码："><a href="#先来分析页面代码：" class="headerlink" title="先来分析页面代码："></a>先来分析页面代码：</h4><p><img src="http://og0sybnix.bkt.clouddn.com/%E5%9B%BE%E7%89%87%E4%B8%8A%E4%BC%A0%E7%BB%84%E4%BB%B6.png" alt=""></p>
<p><img src="http://og0sybnix.bkt.clouddn.com/up_pic_click.png" alt=""></p>
<p><img src="http://og0sybnix.bkt.clouddn.com/pic_up_params.png" alt="图片上传参数"><br><a id="more"></a></p>
<blockquote>
<p>请求的url：/rest/pic/upload</p>
<p>参数：MultiPartFileuploadFile</p>
<p>上传文件返回的数据是：文本类型的json数据</p>
</blockquote>
<p>查文档<a href="http://kindeditor.net/docs/upload.html" target="_blank" rel="external">http://kindeditor.net/docs/upload.html</a></p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">返回格式(JSON)</div><div class="line"></div><div class="line">//成功时</div><div class="line">&#123;</div><div class="line">        "error" : 0,</div><div class="line">        "url" : "http://www.example.com/path/to/file.ext"</div><div class="line">&#125;</div><div class="line">//失败时</div><div class="line">&#123;</div><div class="line">        "error" : 1,</div><div class="line">        "message" : "错误信息"</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<p>这里使用使用<code>Map</code>设置返回值(请对比<code>migo</code>第一版实现，用的是<code>POJO</code>来做封装，这里换一种方法)</p>
<p>接收的参数：<code>MulitPartFileuploadFile</code></p>
<p>业务逻辑：把图片流上传到图片服务器，使用<code>FastDFSClient</code>工具类上传，返回图片的<code>url</code>。需要把图片服务器的域名或者ip拼接返回的url做为完整的<code>url</code>返回。把<code>url</code>和<code>error</code> 对象封装到<code>map</code>中返回。 </p>
<p>返回值：<code>map</code></p>
</blockquote>
<h4 id="添加依赖："><a href="#添加依赖：" class="headerlink" title="添加依赖："></a>添加依赖：</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>fastdfs_client<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastdfs_client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.25<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="在common工程中加入工具类-FastDFSClient-java"><a href="#在common工程中加入工具类-FastDFSClient-java" class="headerlink" title="在common工程中加入工具类 FastDFSClient.java"></a>在common工程中加入工具类 <code>FastDFSClient.java</code></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.migo.utils;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.csource.common.NameValuePair;</div><div class="line"><span class="keyword">import</span> org.csource.fastdfs.*;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FastDFSClient</span> </span>&#123;</div><div class="line"></div><div class="line">	<span class="keyword">private</span> TrackerClient trackerClient = <span class="keyword">null</span>;</div><div class="line">	<span class="keyword">private</span> TrackerServer trackerServer = <span class="keyword">null</span>;</div><div class="line">	<span class="keyword">private</span> StorageServer storageServer = <span class="keyword">null</span>;</div><div class="line">	<span class="keyword">private</span> StorageClient1 storageClient = <span class="keyword">null</span>;</div><div class="line">	</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="title">FastDFSClient</span><span class="params">(String conf)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">		<span class="keyword">if</span> (conf.contains(<span class="string">"classpath:"</span>)) &#123;</div><div class="line">			conf = conf.replace(<span class="string">"classpath:"</span>, <span class="keyword">this</span>.getClass().getResource(<span class="string">"/"</span>).getPath());</div><div class="line">		&#125;</div><div class="line">		ClientGlobal.init(conf);</div><div class="line">		trackerClient = <span class="keyword">new</span> TrackerClient();</div><div class="line">		trackerServer = trackerClient.getConnection();</div><div class="line">		storageServer = <span class="keyword">null</span>;</div><div class="line">		storageClient = <span class="keyword">new</span> StorageClient1(trackerServer, storageServer);</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	<span class="comment">/**</span></div><div class="line">	 * 上传文件方法</div><div class="line">	 * &lt;p&gt;Title: uploadFile&lt;/p&gt;</div><div class="line">	 * &lt;p&gt;Description: &lt;/p&gt;</div><div class="line">	 * <span class="doctag">@param</span> fileName 文件全路径</div><div class="line">	 * <span class="doctag">@param</span> extName 文件扩展名，不包含（.）</div><div class="line">	 * <span class="doctag">@param</span> metas 文件扩展信息</div><div class="line">	 * <span class="doctag">@return</span></div><div class="line">	 * <span class="doctag">@throws</span> Exception</div><div class="line">	 */</div><div class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">uploadFile</span><span class="params">(String fileName, String extName, NameValuePair[] metas)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">		String result = storageClient.upload_file1(fileName, extName, metas);</div><div class="line">		<span class="keyword">return</span> result;</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">uploadFile</span><span class="params">(String fileName)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">		<span class="keyword">return</span> uploadFile(fileName, <span class="keyword">null</span>, <span class="keyword">null</span>);</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">uploadFile</span><span class="params">(String fileName, String extName)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">		<span class="keyword">return</span> uploadFile(fileName, extName, <span class="keyword">null</span>);</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	<span class="comment">/**</span></div><div class="line">	 * 上传文件方法</div><div class="line">	 * &lt;p&gt;Title: uploadFile&lt;/p&gt;</div><div class="line">	 * &lt;p&gt;Description: &lt;/p&gt;</div><div class="line">	 * <span class="doctag">@param</span> fileContent 文件的内容，字节数组</div><div class="line">	 * <span class="doctag">@param</span> extName 文件扩展名</div><div class="line">	 * <span class="doctag">@param</span> metas 文件扩展信息</div><div class="line">	 * <span class="doctag">@return</span></div><div class="line">	 * <span class="doctag">@throws</span> Exception</div><div class="line">	 */</div><div class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">uploadFile</span><span class="params">(<span class="keyword">byte</span>[] fileContent, String extName, NameValuePair[] metas)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">		</div><div class="line">		String result = storageClient.upload_file1(fileContent, extName, metas);</div><div class="line">		<span class="keyword">return</span> result;</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">uploadFile</span><span class="params">(<span class="keyword">byte</span>[] fileContent)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">		<span class="keyword">return</span> uploadFile(fileContent, <span class="keyword">null</span>, <span class="keyword">null</span>);</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">uploadFile</span><span class="params">(<span class="keyword">byte</span>[] fileContent, String extName)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">		<span class="keyword">return</span> uploadFile(fileContent, extName, <span class="keyword">null</span>);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="service实现"><a href="#service实现" class="headerlink" title="service实现:"></a>service实现:</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.migo.service;</div><div class="line"></div><div class="line"><span class="keyword">import</span> com.migo.utils.FastDFSClient;</div><div class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</div><div class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</div><div class="line"><span class="keyword">import</span> org.springframework.web.multipart.MultipartFile;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.util.HashMap;</div><div class="line"><span class="keyword">import</span> java.util.Map;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * 图片上传</div><div class="line"> * Author  知秋</div><div class="line"> * Created by kauw on 2016/11/11.</div><div class="line"> */</div><div class="line"><span class="meta">@Service</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PicService</span> </span>&#123;</div><div class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;IMAGE_SERVER_BASE_URL&#125;"</span>)</div><div class="line">    <span class="keyword">private</span> String IMAGE_SERVER_BASE_URL;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> Map <span class="title">uploadFile</span><span class="params">(MultipartFile uploadFile)</span></span>&#123;</div><div class="line"></div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            FastDFSClient client=<span class="keyword">new</span> FastDFSClient(<span class="string">"classpath:properties/env.properties"</span>);</div><div class="line">            <span class="comment">//获取图片原始名称</span></div><div class="line">            String filename = uploadFile.getOriginalFilename();</div><div class="line">            <span class="comment">//取扩展名</span></div><div class="line">            String extendName = filename.substring(filename.lastIndexOf(<span class="string">"."</span>) + <span class="number">1</span>);</div><div class="line">            String url=client.uploadFile(uploadFile.getBytes(),extendName);</div><div class="line">            <span class="comment">//拼接URL</span></div><div class="line">            url=IMAGE_SERVER_BASE_URL+url;</div><div class="line">            <span class="comment">//返回map数据</span></div><div class="line">            Map result=<span class="keyword">new</span> HashMap();</div><div class="line">            result.put(<span class="string">"error"</span>,<span class="number">0</span>);</div><div class="line">            result.put(<span class="string">"url"</span>,url);</div><div class="line">            <span class="keyword">return</span> result;</div><div class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">            <span class="comment">//返回Map数据</span></div><div class="line">            Map result = <span class="keyword">new</span> HashMap&lt;&gt;();</div><div class="line">            result.put(<span class="string">"error"</span>, <span class="number">1</span>);</div><div class="line">            result.put(<span class="string">"message"</span>, <span class="string">"上传失败"</span>);</div><div class="line"></div><div class="line">            <span class="keyword">return</span> result;</div><div class="line"></div><div class="line">        &#125;</div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="Controller实现："><a href="#Controller实现：" class="headerlink" title="Controller实现："></a>Controller实现：</h4><blockquote>
<p>在springmvc中上传图片，需要在springmvc.xml中配置多媒体解析器</p>
<p>上传文件返回的数据是：文本类型的json数据   所以在controller里要将map数据转换为字符串返回</p>
<p><code>jsonutils</code>是封装的工具类，很简单，就是封装Jackson的实现方法</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.migo.controller;</div><div class="line"></div><div class="line"><span class="keyword">import</span> com.migo.service.PicService;</div><div class="line"><span class="keyword">import</span> com.migo.utils.JsonUtils;</div><div class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</div><div class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</div><div class="line"><span class="keyword">import</span> org.springframework.web.multipart.MultipartFile;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.util.Map;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * 图片上传controller</div><div class="line"> * Author  知秋</div><div class="line"> * Created by kauw on 2016/11/11.</div><div class="line"> */</div><div class="line"><span class="meta">@Controller</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PicController</span> </span>&#123;</div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="keyword">private</span> PicService picService;</div><div class="line"></div><div class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/rest/pic/upload"</span>)</div><div class="line">    <span class="meta">@ResponseBody</span></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">uploadFile</span><span class="params">(MultipartFile uploadFile)</span></span>&#123;</div><div class="line">        Map result = picService.uploadFile(uploadFile);</div><div class="line"></div><div class="line">        <span class="comment">//把Java对象手工转换成json数据</span></div><div class="line">        String json = JsonUtils.objectToJson(result);</div><div class="line">        <span class="keyword">return</span> json;</div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>到此，图片上传功能完成，具体效果图后面再展示</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Migo商城-图片上传代码实现-六&quot;&gt;&lt;a href=&quot;#Migo商城-图片上传代码实现-六&quot; class=&quot;headerlink&quot; title=&quot;Migo商城 图片上传代码实现 六&quot;&gt;&lt;/a&gt;Migo商城 图片上传代码实现 六&lt;/h2&gt;&lt;p&gt;图片服务器搭建完成后，开始回到商品的图片上传功能的实现&lt;/p&gt;
&lt;h4 id=&quot;先来分析页面代码：&quot;&gt;&lt;a href=&quot;#先来分析页面代码：&quot; class=&quot;headerlink&quot; title=&quot;先来分析页面代码：&quot;&gt;&lt;/a&gt;先来分析页面代码：&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;http://og0sybnix.bkt.clouddn.com/%E5%9B%BE%E7%89%87%E4%B8%8A%E4%BC%A0%E7%BB%84%E4%BB%B6.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://og0sybnix.bkt.clouddn.com/up_pic_click.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://og0sybnix.bkt.clouddn.com/pic_up_params.png&quot; alt=&quot;图片上传参数&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Migo商城2.0" scheme="https://muyinchen.github.io/categories/Migo%E5%95%86%E5%9F%8E2-0/"/>
    
    
      <category term="Migo商城2.0" scheme="https://muyinchen.github.io/tags/Migo%E5%95%86%E5%9F%8E2-0/"/>
    
  </entry>
  
  <entry>
    <title>Migo商城2.0 图片服务器的搭建与使用 五</title>
    <link href="https://muyinchen.github.io/2016/11/11/Migo%E5%95%86%E5%9F%8E%20%20%E5%9B%BE%E7%89%87%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E6%90%AD%E5%BB%BA%E4%B8%8E%E4%BD%BF%E7%94%A8%20%20%E4%BA%94/"/>
    <id>https://muyinchen.github.io/2016/11/11/Migo商城  图片服务器的搭建与使用  五/</id>
    <published>2016-11-11T10:32:02.166Z</published>
    <updated>2016-11-13T03:50:07.020Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Migo商城-图片服务器的搭建与使用-五"><a href="#Migo商城-图片服务器的搭建与使用-五" class="headerlink" title="Migo商城  图片服务器的搭建与使用 五"></a>Migo商城  图片服务器的搭建与使用 五</h2><p>这里简单说下<code>fastdfs</code>的说明搭建使用，回头专门出附章来讲这块的<code>api</code>和各种配置，这里就来过简易版的，能进行开发就可。</p>
<h3 id="什么是FastDFS"><a href="#什么是FastDFS" class="headerlink" title="什么是FastDFS"></a>什么是FastDFS</h3><p>​      <code>FastDFS</code>是一个开源的轻量级分布式文件系统。它解决了大数据量存储和负载均衡等问题。特别适合以中小文件（建议范围：<code>4KB&lt; file_size &lt;500MB）</code>为载体的在线服务，如相册网站、视频网站等等。</p>
<p>​      <code>FastDFS</code>是用c语言编写的一款开源的分布式文件系统。<code>FastDFS</code>为互联网量身定制，充分考虑了冗余备份、负载均衡、线性扩容等机制，并注重高可用、高性能等指标，使用<code>FastDFS</code>很容易搭建一套高性能的文件服务器集群提供文件上传、下载等服务。</p>
<h3 id="FastDFS的设计理念"><a href="#FastDFS的设计理念" class="headerlink" title="FastDFS的设计理念"></a>FastDFS的设计理念</h3><p>和现有的类<code>Google FS</code>分布式文件系统相比，<code>FastDFS</code>的架构和设计理念有其独到之处，主要体现在<code>轻量级</code>、<code>分组方式</code>和<code>对等结构</code>三个方面。<br><a id="more"></a></p>
<h5 id="轻量级"><a href="#轻量级" class="headerlink" title="轻量级"></a>轻量级</h5><p><code>FastDFS</code>只有两个角色：<code>Tracker server</code>和<code>Storage server</code>。<code>Tracker server</code>作为中心结点，其主要作用是负载均衡和调度。<br>​     <code>Tracker server</code>在内存中记录<code>分组</code>和<code>Storage server</code>的状态等信息，不记录文件索引信息，占用的内存量很少。另外，客户端（应用）和<code>Storage server</code>访问<code>Tracker server</code>时，<code>Tracker server</code>扫描内存中的分组和<code>Storage server</code>信息，然后给出应答。由此可以看出<code>Tracker server</code>非常轻量化，不会成为系统瓶颈。<br>​       <code>FastDFS</code>中的<code>Storage server</code>在其他文件系统中通常称作<code>Trunk server</code>或<code>Dataserver</code>。<code>Storage server</code>直接利用<code>OS</code>的文件系统存储文件。<code>FastDFS</code>不会对文件进行分块存储，客户端上传的文件和<code>Storage server</code>上的文件一一对应。<br>​         众所周知，大多数网站都需要存储用户上传的文件，如图片、视频、电子文档等。出于降低带宽和存储成本的考虑，网站通常都会限制用户上传的文件大小，例如图片文件不能超过5MB、视频文件不能超过100MB等。我认为，对于互联网应用，文件分块存储没有多大的必要。它既没有带来多大的好处，又增加了系统的复杂性。<code>FastDFS</code>不对文件进行分块存储，与支持文件分块存储的<code>DFS</code>相比，更加简洁高效，并且完全能满足绝大多数互联网应用的实际需要。<br>​      在<code>FastDFS</code>中，客户端上传文件时，文件<code>ID</code>不是由客户端指定，而是由S<code>torage server</code>生成后返回给客户端的。文件<code>ID</code>中包含了<code>组名</code>、<code>文件相对路径</code>和<code>文件名</code>，<code>Storage server</code>可以根据文件<code>ID</code>直接定位到文件。因此<code>FastDFS</code>集群中根本不需要存储文件索引信息，这是<code>FastDFS</code>比较轻量级的一个例证。而其他文件系统则需要存储文件索引信息，这样的角色通常称作<code>NameServer</code>。其中<code>mogileFS</code>采用<code>MySQL</code>数据库来存储文件索引以及系统相关的信息，其局限性显而易见，<code>MySQL</code>将成为整个系统的瓶颈。<br>​       <code>FastDFS</code>轻量级的另外一个体现是代码量较小。最新的<code>V2.0</code>包括了<code>C</code>客户端<code>API</code>、<code>FastDHT</code>客户端<code>API</code>和<code>PHP extension</code>等，代码行数不到<code>5.2</code>万行。</p>
<h5 id="分组方式"><a href="#分组方式" class="headerlink" title="分组方式"></a>分组方式</h5><p>​       类<code>Google FS</code>都支持文件冗余备份，例如<code>Google FS</code>、<code>TFS</code>的备份数是3。一个文件存储到哪几个存储结点，通常采用动态分配的方式。采用这种方式，一个文件存储到的结点是不确定的。举例说明，文件备份数是3，集群中有A、B、C、D四个存储结点。文件1可能存储在A、B、C三个结点，文件2可能存储在B、C、D三个结点，文件3可能存储在A、B、D三个结点。<br>​       <code>FastDFS</code>采用了<code>分组存储</code>方式。集群由一个或多个组构成，集群存储总容量为集群中所有组的存储容量之和。一个组由一台或多台存储服务器组成，同组内的多台<code>Storage server</code>之间是互备关系，同组存储服务器上的文件是完全一致的。文件上传、下载、删除等操作可以在组内任意一台<code>Storage server</code>上进行。类似木桶短板效应，一个组的存储容量为该组内存储服务器容量最小的那个，由此可见组内存储服务器的软硬件配置最好是一致的。<code>采用分组存储方式的好处是灵活、可控性较强</code>。比如上传文件时，可以由客户端直接指定上传到的组。一个分组的存储服务器访问压力较大时，可以在该组增加存储服务器来扩充服务能力（纵向扩容）。当系统容量不足时，可以增加组来扩充存储容量（横向扩容）。采用这样的分组存储方式，可以使用<code>FastDFS</code>对文件进行管理，使用主流的<code>Web server</code>如<code>Apache、nginx</code>等进行文件下载。</p>
<h5 id="对等结构"><a href="#对等结构" class="headerlink" title="对等结构"></a>对等结构</h5><p>​       <code>FastDFS</code>集群中的<code>Tracker server</code>也可以有多台，<code>Tracker server</code>和<code>Storage server</code>均不存在单点问题。<code>Tracker server</code>之间是对等关系，组内的<code>Storage server</code>之间也是对等关系。传统的<code>Master-Slave</code>结构中的<code>Master</code>是单点，写操作仅针对<code>Master</code>。如果<code>Master</code>失效，需要将<code>Slave</code>提升为<code>Master</code>，实现逻辑会比较复杂。和<code>Master-Slave</code>结构相比，<code>对等结构中所有结点的地位是相同的，每个结点都是Master，不存在单点问题</code>。 </p>
<h3 id="FastDFS的架构"><a href="#FastDFS的架构" class="headerlink" title="FastDFS的架构"></a>FastDFS的架构</h3><h5 id="FastDFS的系统架构-如图："><a href="#FastDFS的系统架构-如图：" class="headerlink" title="FastDFS的系统架构 如图："></a>FastDFS的系统架构 如图：</h5><p><img src="http://og0sybnix.bkt.clouddn.com/fastdfs2.png" alt=""></p>
<p>从图中可以看出，Tracker server之间相互独立，不存在直接联系。 </p>
<p>​     客户端和<code>Storage server</code>主动连接<code>Tracker server</code>。<code>Storage server</code>主动向<code>Tracker server</code>报告其状态信息，包括磁盘剩余空间、文件同步状况、文件上传下载次数等统计信息。<code>Storage server</code>会连接集群中所有的<code>Tracker server</code>，向他们报告自己的状态。<code>Storage server</code>启动一个单独的线程来完成对一台<code>Tracker server</code>的连接和定时报告。需要说明的是，一个组包含的<code>Storage server</code>不是通过配置文件设定的，而是通过<code>Tracker server</code>获取到的。<br>​      不同组的<code>Storage server</code>之间不会相互通信，同组内的<code>Storage server</code>之间会相互连接进行文件同步。<code>Storage server</code>采用<code>binlog</code>文件记录文件上传、删除等更新操作。<code>binlog</code>中只记录文件名，不记录文件内容。<br>​      文件同步只在<code>同组内的Storage server</code>之间进行，采用<code>push</code>方式，即源头服务器同步给目标服务器。只有源头数据才需要同步，备份数据并不需要再次同步，否则就构成环路了。有个例外，就是新增加一台<code>Storage server</code>时，由已有的一台<code>Storage server</code>将已有的所有数据（包括源头数据和备份数据）同步给该新增服务器。<br>​      <code>Storage server</code>中由专门的线程根据<code>binlog</code>进行文件同步。为了最大程度地避免相互影响以及出于系统简洁性考<br>虑，<code>Storage server</code>对组内除自己以外的每台服务器都会启动一个线程来进行文件同步。</p>
<p>​     文件同步采用增量同步方式，系统记录已同步的位置（<code>binlog</code>文件偏移量）到标识文件中。标识文件名格式：<br><code>{dest storage IP}_{port}.mark</code>，例如：192.168.1.14_23000.mark。</p>
<h5 id="文件上传和下载的交互过程"><a href="#文件上传和下载的交互过程" class="headerlink" title="文件上传和下载的交互过程"></a>文件上传和下载的交互过程</h5><h6 id="文件上传流程"><a href="#文件上传流程" class="headerlink" title="文件上传流程"></a>文件上传流程</h6><p>接下来我们一起看一下文件上传和下载的交互过程。文件上传流程的步骤如下 </p>
<p><img src="http://og0sybnix.bkt.clouddn.com/upload_file.jpg" alt=""></p>
<blockquote>
<ol>
<li><code>Client</code>询问<code>Tracker server</code>上传到的<code>Storage server</code>；</li>
<li><code>Tracker server</code>返回一台可用的<code>Storage server</code>，返回的数据为该<code>Storage server</code>的IP地址和端口；</li>
<li>Client直接和该<code>Storage server</code>建立连接，进行文件上传，<code>Storage server</code>返回新生成的文件<code>ID</code>，文件上传结束。 </li>
</ol>
</blockquote>
<p>再啰嗦点细节：</p>
<p>选择<code>tracker server</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">当集群中不止一个tracker server时，由于tracker之间是完全对等的关系，客户端在upload文件时可以任意选择一个trakcer。</div></pre></td></tr></table></figure>
<p>选择存储的<code>group</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">当tracker接收到upload file的请求时，会为该文件分配一个可以存储该文件的group，支持如下选择group的规则： 1. Round robin，所有的group间轮询 2. Specified group，指定某一个确定的group 3. Load balance，剩余存储空间多多group优先</div></pre></td></tr></table></figure>
<p>选择<code>storage server</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">当选定group后，tracker会在group内选择一个storage server给客户端，支持如下选择storage的规则： 1. Round robin，在group内的所有storage间轮询 2. First server ordered by ip，按ip排序 3. First server ordered by priority，按优先级排序（优先级在storage上配置）</div></pre></td></tr></table></figure>
<p>选择<code>storage path</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">当分配好storage server后，客户端将向storage发送写文件请求，storage将会为文件分配一个数据存储目录，支持如下规则： 1. Round robin，多个存储目录间轮询 2. 剩余存储空间最多的优先</div></pre></td></tr></table></figure>
<p>生成<code>Fileid</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">选定存储目录之后，storage会为文件生一个Fileid，由storage server ip、文件创建时间、文件大小、文件crc32和一个随机数拼接而成，然后将这个二进制串进行base64编码，转换为可打印的字符串。</div></pre></td></tr></table></figure>
<p>选择两级目录</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">当选定存储目录之后，storage会为文件分配一个fileid，每个存储目录下有两级256*256的子目录，storage会按文件fileid进行两次hash（猜测），路由到其中一个子目录，然后将文件以fileid为文件名存储到该子目录下。</div></pre></td></tr></table></figure>
<p>生成文件名</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">当文件存储到某个子目录后，即认为该文件存储成功，接下来会为该文件生成一个文件名，文件名由group、存储目录、两级子目录、fileid、文件后缀名（由客户端指定，主要用于区分文件类型）拼接而成。</div></pre></td></tr></table></figure>
<blockquote>
<p>客户端上传文件后存储服务器将文件ID返回给客户端，此文件ID用于以后访问该文件的索引信息。文件索引信息包括：组名，虚拟磁盘路径，数据两级目录，文件名。</p>
</blockquote>
<p><img src="http://og0sybnix.bkt.clouddn.com/fastdfs_name.jpg" alt=""></p>
<h5 id="文件同步"><a href="#文件同步" class="headerlink" title="文件同步"></a>文件同步</h5><p>写文件时，客户端将文件写至<code>group</code>内一个<code>storage server</code>即认为写文件成功，<code>storage server</code>写完文件后，会由后台线程将文件同步至同<code>group</code>内其他的<code>storage server</code>。</p>
<p>每个<code>storage</code>写文件后，同时会写一份<code>binlog</code>，<code>binlog</code>里不包含文件数据，只包含文件名等元信息，这份<code>binlog</code>用于后台同步，<code>storage</code>会记录向<code>group</code>内其他<code>storage</code>同步的进度，以便重启后能接上次的进度继续同步；进度以时间戳的方式进行记录，所以最好能保证集群内所有<code>server</code>的时钟保持同步。</p>
<p><code>storage</code>的同步进度会作为元数据的一部分汇报到<code>tracker</code>上，<code>tracker</code>在选择读<code>storage</code>的时候会以同步进度作为参考。</p>
<p>​      比如一个group内有A、B、C三个<code>storage server</code>，A向C同步到进度为T1 (T1以前写的文件都已经同步到B上了），B向C同步到时间戳为T2（T2 &gt; T1)，<code>tracker</code>接收到这些同步进度信息时，就会进行整理，将最小的那个做为C的同步时间戳，本例中T1即为C的同步时间戳为T1（即所有T1以前写的数据都已经同步到C上了）；同理，根据上述规则，tracker会为A、B生成一个同步时间戳。</p>
<h5 id="文件下载流程"><a href="#文件下载流程" class="headerlink" title="文件下载流程"></a>文件下载流程</h5><p><img src="http://og0sybnix.bkt.clouddn.com/download_file.jpg" alt=""></p>
<blockquote>
<ol>
<li>Client询问Tracker server可以下载指定文件的Storage server，参数为文件ID（包含组名和文件名）；</li>
<li>Tracker server返回一台可用的Storage server；</li>
<li>Client直接和该Storage server建立连接，完成文件下载 </li>
</ol>
</blockquote>
<h5 id="文件同步延迟问题的提出"><a href="#文件同步延迟问题的提出" class="headerlink" title="文件同步延迟问题的提出"></a>文件同步延迟问题的提出</h5><p>客户端将一个文件上传到一台Storage server后，文件上传工作就结束了。由该Storage server根据binlog中的上传记录将这个文件同步到同组的其他Storage server。这样的文件同步方式是异步方式，异步方式带来了文件同步延迟的问题。新上传文件后，在尚未被同步过去的Storage server上访问该文件，会出现找不到文件的现象。</p>
<h6 id="FastDFS是如何解决文件同步延迟这个问题的呢？"><a href="#FastDFS是如何解决文件同步延迟这个问题的呢？" class="headerlink" title="FastDFS是如何解决文件同步延迟这个问题的呢？"></a>FastDFS是如何解决文件同步延迟这个问题的呢？</h6><p>文件的访问分为两种情况：文件更新和文件下载。文件更新包括设置文件附加属性和删除文件。文件的附加属性包括文件大小、图片宽度、图片高度等。FastDFS中，文件更新操作都会优先选择源Storage server，也就是该文件被上传到的那台<br>Storage server。这样的做法不仅避免了文件同步延迟的问题，而且有效地避免了在多台Storage server上更新同一文件可能引起的时序错乱的问题。</p>
<h6 id="那么文件下载是如何解决文件同步延迟这个问题的呢？"><a href="#那么文件下载是如何解决文件同步延迟这个问题的呢？" class="headerlink" title="那么文件下载是如何解决文件同步延迟这个问题的呢？"></a>那么文件下载是如何解决文件同步延迟这个问题的呢？</h6><p>要回答这个问题，需要先了解文件名中包含了什么样的信息。Storage server生成的文件名中，包含了源Storage server的IP地址和文件创建时间等字段。文件创建时间为UNIX时间戳，后面称为文件时间戳。从文件名或文件ID中，可以反解出这两个字段。然后我们再来看一下，Tracker server是如何准确地知道一个文件已被同步到一台Storage server上的。前面已经讲过，文件同步采用主动推送的方式。另外，每台storage server都会定时向tracker server报告它向同组的其他storage server同步到的文件时间戳。当tracker server收到一台storage server的文件同步报告后，它会依次找出该组内各个storage server（后称作为S）被同步到的文件时间戳最小值，作为S的一个属性记录到内存中。<br>FastDFS对文件同步延迟问题的解决方案<br>下面我们来看一下FastDFS采取的解决方法。<br>一个最简单的解决办法，和文件更新一样，优先选择源Storage server下载文件即可。这可以在Tracker server的配置文件中设置，对应的参数名为download_server。<br>另外一种选择Storage server的方法是轮流选择（round-robin）。当Client询问Tracker server有哪些Storage server可以<br>下载指定文件时，Tracker server返回满足如下四个条件之一的Storage server：</p>
<blockquote>
<ol>
<li><p>该文件上传到的源Storage server，文件直接上传到该服务器上的；</p>
</li>
<li><p>文件创建时间戳 &lt; Storage server被同步到的文件时间戳，这意味着当前文件已经被同步过来了；</p>
</li>
<li><p>文件创建时间戳=Storage server被同步到的文件时间戳，且（当前时间—文件创建时间戳） &gt; 一个文件同步完成需要的最大时间（如5分钟）；</p>
<p>（当前时间—文件创建时间戳） &gt; 文件同步延迟阈值，比如我们把阈值设置为1天，表示文件同步在一天内肯定可以完成。 </p>
</li>
</ol>
</blockquote>
<h3 id="图片服务器的搭建"><a href="#图片服务器的搭建" class="headerlink" title="图片服务器的搭建"></a>图片服务器的搭建</h3><p>因为开发所用，这里就搭建个单机版</p>
<p>安装环境 CentOS6.8 64位</p>
<p>需要gcc的编译环境</p>
<p>需要libevent的包。</p>
<p><code>yum install -y zlib zlib-devel pcre pcre-devel gcc gcc-c++ openssl openssl-devel libevent libevent-devel perl unzip</code></p>
<h4 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h4><h5 id="Tracker的安装"><a href="#Tracker的安装" class="headerlink" title="Tracker的安装"></a>Tracker的安装</h5><p>第一步：把源码包上传到linux系统。</p>
<p>第二步：解压缩libfastcommonV1.0.7.tar.gz包。</p>
<p>第三步：进入/root/libfastcommon-1.0.7文件夹执行./make.sh、./make.sh install</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">安装libfastcommon</div><div class="line"></div><div class="line">下载最新版本： libfastcommon</div><div class="line">wget https://github.com/happyfish100/libfastcommon/archive/master.zip</div><div class="line">unzip master.zip</div><div class="line"><span class="built_in">cd</span> libfastcommon-master/</div><div class="line">./make.sh</div><div class="line">./make.sh install</div></pre></td></tr></table></figure>
<p>第四步：把/usr/lib64/libfastcommon.so文件向/usr/lib文件夹下复制一份。(32位系统可这么做，64位不需要)</p>
<p>第五步：把FastDFS_v5.05.tar.gz解压缩。</p>
<p>第六步：进入/root/FastDFS目录执行：./make.sh、./make.sh install</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">wget http://sourceforge.net/projects/fastdfs/files/FastDFS%20Server%20Source%20Code/FastDFS%20Server%20with%20PHP%20Extension%20Source%20Code%20V5.05/FastDFS_v5.05.tar.gz</div><div class="line">tar zxf FastDFS_v5.05.tar.gz &amp;&amp; <span class="built_in">cd</span> FastDFS</div><div class="line">./make.sh</div><div class="line">./make.sh install</div><div class="line">\cp -pa conf/*.conf /etc/fdfs/</div><div class="line"><span class="built_in">cd</span> /etc/fdfs/</div><div class="line">rm -rf *.sample</div></pre></td></tr></table></figure>
<p>第七步：配置trackerServer。</p>
<p>1、 把<code>/root/FastDFS/conf</code>目录下的所以的文件复制到<code>/etc/fdfs</code>目录下。</p>
<p>2、 编辑/etc/fdfs/tracker.conf</p>
<p><img src="http://og0sybnix.bkt.clouddn.com/%E9%85%8D%E7%BD%AEtracker.png" alt=""></p>
<p>第八步：启动tracker服务</p>
<p><code>/usr/bin/fdfs_trackerd/etc/fdfs/tracker.conf restart</code></p>
<h5 id="Storage服务的安装"><a href="#Storage服务的安装" class="headerlink" title="Storage服务的安装"></a>Storage服务的安装</h5><blockquote>
<p>如果storage和tracker不在同一台服务上需要重复执行Tracker的安装的第一步到第六步</p>
</blockquote>
<p>配置Storage服务：</p>
<p>需要修改<code>/etc/fdfs/storage.conf</code>文件</p>
<p><img src="http://og0sybnix.bkt.clouddn.com/storage.conf1.png" alt=""></p>
<p><img src="http://og0sybnix.bkt.clouddn.com/storage.conf2.png" alt=""></p>
<p><img src="http://og0sybnix.bkt.clouddn.com/storage.conf3.png" alt=""></p>
<p>启动服务：</p>
<p><code>[root@localhost fdfs]#/usr/bin/fdfs_storaged /etc/fdfs/storage.conf</code></p>
<h5 id="测试上传服务"><a href="#测试上传服务" class="headerlink" title="测试上传服务"></a>测试上传服务</h5><p>修改客户端的配置文件<code>/etc/fdfs/client.conf</code></p>
<p><img src="http://og0sybnix.bkt.clouddn.com/fastdfsclient.conf.png" alt=""></p>
<p>上传文件：</p>
<p><code>/usr/bin/fdfs_testclient.conf upload xxx.jpg</code></p>
<h5 id="访问图片"><a href="#访问图片" class="headerlink" title="访问图片"></a>访问图片</h5><p>使用FastDFS的Nginx插件和Nginx配合，实现图片的访问。Nginx需要安装到storage服务所在的服务器</p>
<p>安装步骤：</p>
<p>第一步：把插件包解压缩。fastdfs-nginx-module_v1.16.tar.gz</p>
<p>第二步：编辑/root/fastdfs-nginx-module/src/config文件。删除其中的local字样</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">wget http://nginx.org/download/nginx-1.8.0.tar.gz</div><div class="line">http://sourceforge.net/projects/fastdfs/files/FastDFS%20Nginx%20Module%20Source%20Code/fastdfs-nginx-module_v1.16.tar.gz/download</div><div class="line"></div><div class="line">tar zxf fastdfs-nginx-module_v1.16.tar.gz &amp;&amp; tar zxf nginx-1.8.0.tar.gz </div><div class="line"></div><div class="line"><span class="comment">#修改模块中对应的路径，要不然模块不能正确安装加载</span></div><div class="line"><span class="built_in">cd</span> fastdfs-nginx-module/src</div><div class="line">vi conf   <span class="comment">#更改如下， 去掉local，并指定lib64（64系统）</span></div><div class="line">CORE_INCS=<span class="string">"<span class="variable">$CORE_INCS</span> /usr/include/fastdfs /usr/include/fastcommon/"</span></div><div class="line">CORE_LIBS=<span class="string">"<span class="variable">$CORE_LIBS</span> -L/usr/lib64 -lfastcommon -lfdfsclient"</span></div></pre></td></tr></table></figure>
<p>第三步：把<code>/root/fastdfs-nginx-module/src/mod_fastdfs.conf</code>文件复制到<code>/etc/fdfs</code>目录下。</p>
<p>第四步：把<code>/usr/lib64/libfdfsclient.so</code>文件复制到<code>/usr/lib</code>目录下(32位系统，64位系统不需要)</p>
<p>第五步：编译Nginx</p>
<p>对Nginx进行config</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">./configure \</div><div class="line">--prefix=/usr/<span class="built_in">local</span>/nginx \</div><div class="line">--pid-path=/var/run/nginx/nginx.pid \</div><div class="line">--lock-path=/var/lock/nginx.lock \</div><div class="line">--error-log-path=/var/<span class="built_in">log</span>/nginx/error.log \</div><div class="line">--http-log-path=/var/<span class="built_in">log</span>/nginx/access.log \</div><div class="line">--with-http_gzip_static_module \</div><div class="line">--http-client-body-temp-path=/var/temp/nginx/client \</div><div class="line">--http-proxy-temp-path=/var/temp/nginx/proxy \</div><div class="line">--http-fastcgi-temp-path=/var/temp/nginx/fastcgi \</div><div class="line">--http-uwsgi-temp-path=/var/temp/nginx/uwsgi \</div><div class="line">--http-scgi-temp-path=/var/temp/nginx/scgi \</div><div class="line">--add-module=/root/fastdfs-nginx-module/src</div></pre></td></tr></table></figure>
<p>第六步：配置<code>Nginx</code></p>
<p><img src="http://og0sybnix.bkt.clouddn.com/fastdfs_nginx.png" alt=""></p>
<p>第七步：编辑<code>Nginx</code>插件的配置文件：</p>
<p>修改<code>/etc/fdfs/mod_fastdfs.conf</code>文件</p>
<p><img src="http://og0sybnix.bkt.clouddn.com/mod_fastdfs1.png" alt=""></p>
<p><img src="http://og0sybnix.bkt.clouddn.com/mod_fastdfs2.png" alt=""></p>
<p><img src="http://og0sybnix.bkt.clouddn.com/mod_fastdfs3.png" alt=""></p>
<p><img src="http://og0sybnix.bkt.clouddn.com/mod_fastdfs4.png" alt=""></p>
<p>第八步：启动<code>Nginx</code></p>
<p>最後，再多说一点 这是之前自己 笔记的一点心得，贴出来</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">nginx通过插件fastdfs-nginx-module_v1.16.tar管理访问/group1/M00/过来的路径</div><div class="line">这是插件的日志路径</div><div class="line"># the base path to store log files</div><div class="line">base_path=/tmp</div><div class="line">这里接收管理storage存放路径</div><div class="line"># store_path#, based 0, if store_path0 not exists, it&apos;s value is base_path</div><div class="line"># the paths must be exist</div><div class="line"># must same as storage.conf 注意看这些注释，然后就知道怎么配了</div><div class="line">store_path0=/home/fastdfs/storage</div><div class="line">通过下面来和索引器联系起来</div><div class="line"># valid only when load_fdfs_parameters_from_tracker is true</div><div class="line">tracker_server=192.168.42.129:22122</div></pre></td></tr></table></figure>
<p>忘说了：<br>启动测试前，开放端口号端口给浏览器访问</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">/sbin/iptables -I INPUT -p tcp --dport 80 -j ACCEPT</div><div class="line">/sbin/iptables -I INPUT -p tcp --dport 22 -j ACCEPT</div><div class="line">/sbin/iptables -I INPUT -p tcp --dport 22122 -j ACCEPT</div><div class="line">#然后保存：</div><div class="line">/etc/rc.d/init.d/iptables save</div><div class="line">#重启防火墙以便改动生效:(或者直接重启系统)</div><div class="line">/etc/init.d/iptables restart</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Migo商城-图片服务器的搭建与使用-五&quot;&gt;&lt;a href=&quot;#Migo商城-图片服务器的搭建与使用-五&quot; class=&quot;headerlink&quot; title=&quot;Migo商城  图片服务器的搭建与使用 五&quot;&gt;&lt;/a&gt;Migo商城  图片服务器的搭建与使用 五&lt;/h2&gt;&lt;p&gt;这里简单说下&lt;code&gt;fastdfs&lt;/code&gt;的说明搭建使用，回头专门出附章来讲这块的&lt;code&gt;api&lt;/code&gt;和各种配置，这里就来过简易版的，能进行开发就可。&lt;/p&gt;
&lt;h3 id=&quot;什么是FastDFS&quot;&gt;&lt;a href=&quot;#什么是FastDFS&quot; class=&quot;headerlink&quot; title=&quot;什么是FastDFS&quot;&gt;&lt;/a&gt;什么是FastDFS&lt;/h3&gt;&lt;p&gt;​      &lt;code&gt;FastDFS&lt;/code&gt;是一个开源的轻量级分布式文件系统。它解决了大数据量存储和负载均衡等问题。特别适合以中小文件（建议范围：&lt;code&gt;4KB&amp;lt; file_size &amp;lt;500MB）&lt;/code&gt;为载体的在线服务，如相册网站、视频网站等等。&lt;/p&gt;
&lt;p&gt;​      &lt;code&gt;FastDFS&lt;/code&gt;是用c语言编写的一款开源的分布式文件系统。&lt;code&gt;FastDFS&lt;/code&gt;为互联网量身定制，充分考虑了冗余备份、负载均衡、线性扩容等机制，并注重高可用、高性能等指标，使用&lt;code&gt;FastDFS&lt;/code&gt;很容易搭建一套高性能的文件服务器集群提供文件上传、下载等服务。&lt;/p&gt;
&lt;h3 id=&quot;FastDFS的设计理念&quot;&gt;&lt;a href=&quot;#FastDFS的设计理念&quot; class=&quot;headerlink&quot; title=&quot;FastDFS的设计理念&quot;&gt;&lt;/a&gt;FastDFS的设计理念&lt;/h3&gt;&lt;p&gt;和现有的类&lt;code&gt;Google FS&lt;/code&gt;分布式文件系统相比，&lt;code&gt;FastDFS&lt;/code&gt;的架构和设计理念有其独到之处，主要体现在&lt;code&gt;轻量级&lt;/code&gt;、&lt;code&gt;分组方式&lt;/code&gt;和&lt;code&gt;对等结构&lt;/code&gt;三个方面。&lt;br&gt;
    
    </summary>
    
      <category term="Migo商城2.0" scheme="https://muyinchen.github.io/categories/Migo%E5%95%86%E5%9F%8E2-0/"/>
    
    
      <category term="Migo商城2.0" scheme="https://muyinchen.github.io/tags/Migo%E5%95%86%E5%9F%8E2-0/"/>
    
  </entry>
  
  <entry>
    <title>Migo商城2.0 参考通用mapper思想对service代码的二次优化封装  四</title>
    <link href="https://muyinchen.github.io/2016/11/10/Migo%E5%95%86%E5%9F%8E%20%20%E5%AF%B9%E4%BB%A3%E7%A0%81%E7%9A%84%E4%BA%8C%E6%AC%A1%E4%BC%98%E5%8C%96%E5%B0%81%E8%A3%85%20%20%E5%9B%9B/"/>
    <id>https://muyinchen.github.io/2016/11/10/Migo商城  对代码的二次优化封装  四/</id>
    <published>2016-11-10T13:13:25.997Z</published>
    <updated>2016-11-13T03:49:52.965Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Migo商城-参考通用mapper思想对service代码的二次优化封装-四"><a href="#Migo商城-参考通用mapper思想对service代码的二次优化封装-四" class="headerlink" title="Migo商城  参考通用mapper思想对service代码的二次优化封装  四"></a>Migo商城  参考通用mapper思想对service代码的二次优化封装  四</h2><p>上一篇通过域名访问，nginx反向代理的效果图：</p>
<p><img src="http://og0sybnix.bkt.clouddn.com/nginx%E6%95%88%E6%9E%9C.png" alt=""></p>
<p>然后步入正题：</p>
<p>对比第一版的代码，这里再贴段的</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Service</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ItemCatService</span> </span>&#123;</div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="keyword">private</span> ItemCatMapper itemCatMapper;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> List&lt;ItemCat&gt; <span class="title">getItemCatList</span><span class="params">(Long parentId)</span> </span>&#123;</div><div class="line">        ItemCat example = <span class="keyword">new</span> ItemCat();</div><div class="line">        example.setParentId(parentId);</div><div class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.itemCatMapper.select(example);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<p>其实很多service都会用到这些增删改查，既然通用mapper可以做封装，我们何不学通用mapper做过通用service？自己造个适合自己的小轮子</p>
<p>要添加的通用方法：</p>
<p>1、  <code>queryById</code></p>
<p>2、  <code>queryAll</code></p>
<p>3、  <code>queryOne</code></p>
<p>4、  <code>queryListByWhere</code></p>
<p>5、  <code>queryPageListByWhere</code></p>
<p>6、  <code>save</code></p>
<p>7、  <code>update</code></p>
<p>8、  <code>deleteById</code></p>
<p>9、  <code>deleteByIds</code></p>
<p>10、 <code>deleteByWhere</code><br><a id="more"></a></p>
</blockquote>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.migo.service;</div><div class="line"></div><div class="line"><span class="keyword">import</span> com.github.pagehelper.PageHelper;</div><div class="line"><span class="keyword">import</span> com.github.pagehelper.PageInfo;</div><div class="line"><span class="keyword">import</span> com.migo.pojo.BasePojo;</div><div class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</div><div class="line"><span class="keyword">import</span> tk.mybatis.mapper.common.Mapper;</div><div class="line"><span class="keyword">import</span> tk.mybatis.mapper.entity.Example;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.util.Date;</div><div class="line"><span class="keyword">import</span> java.util.List;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Author  知秋</div><div class="line"> * Created by kauw on 2016/11/10.</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseService</span> &lt;<span class="title">T</span> <span class="keyword">extends</span> <span class="title">BasePojo</span>&gt;</span>&#123;</div><div class="line"></div><div class="line">    <span class="comment">//这里利用了Spring4才支持的泛型注入</span></div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="keyword">private</span> Mapper&lt;T&gt; mapper;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 根据id查询</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> T <span class="title">queryById</span><span class="params">(Long id)</span></span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.mapper.selectByPrimaryKey(id);</div><div class="line">    &#125;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 根据条件查询一条数据</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> T <span class="title">queryOne</span><span class="params">(T example)</span></span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.mapper.selectOne(example);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 查询所有数据</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> List&lt;T&gt; <span class="title">queryAll</span><span class="params">()</span></span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.mapper.select(<span class="keyword">null</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 根据条件查询数据列表</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> List&lt;T&gt; <span class="title">queryListByWhere</span><span class="params">(T example)</span></span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.mapper.select(example);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 分页查询数据列表</div><div class="line">     * <span class="doctag">@param</span> example 查询条件</div><div class="line">     * <span class="doctag">@param</span> page 页数</div><div class="line">     * <span class="doctag">@param</span> rows 页面大小</div><div class="line">     * <span class="doctag">@return</span></div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> PageInfo&lt;T&gt; <span class="title">queryPageListByWhere</span><span class="params">(T example,Integer page,Integer rows)</span></span>&#123;</div><div class="line"></div><div class="line">        <span class="comment">//设置分页参数</span></div><div class="line">        PageHelper.startPage(page,rows);</div><div class="line">        <span class="comment">//执行查询</span></div><div class="line">        List&lt;T&gt; list = <span class="keyword">this</span>.mapper.select(example);</div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> PageInfo&lt;T&gt;(list);</div><div class="line">    &#125;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 新增数据，注意设置数据的创建和更新时间</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">save</span><span class="params">(T t)</span></span>&#123;</div><div class="line">        Date date=<span class="keyword">new</span> Date();</div><div class="line">        t.setCreated(date);</div><div class="line">        t.setUpdated(date);</div><div class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.mapper.insertSelective(t);</div><div class="line"></div><div class="line">    &#125;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 更新数据，设置数据的更新时间</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">update</span><span class="params">(T t)</span></span>&#123;</div><div class="line">        t.setUpdated(<span class="keyword">new</span> Date());</div><div class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.mapper.updateByPrimaryKey(t);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 更新数据，设置数据的更新时间（更新部分数据）</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">updateSelective</span><span class="params">(T t)</span></span>&#123;</div><div class="line">        t.setUpdated(<span class="keyword">new</span> Date());</div><div class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.mapper.updateByPrimaryKeySelective(t);</div><div class="line">    &#125;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 根据id删除数据</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">deleteById</span><span class="params">(Long id)</span></span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.mapper.deleteByPrimaryKey(id);</div><div class="line">    &#125;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 批量删除数据</div><div class="line">     * <span class="doctag">@param</span> clazz</div><div class="line">     * <span class="doctag">@param</span> property</div><div class="line">     * <span class="doctag">@param</span> list</div><div class="line">     * <span class="doctag">@return</span></div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">deleteByIds</span><span class="params">(Class&lt;T&gt; clazz,String property,List&lt;Object&gt; list)</span></span>&#123;</div><div class="line">        Example example=<span class="keyword">new</span> Example(clazz);</div><div class="line">        example.createCriteria().andIn(property,list);</div><div class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.mapper.deleteByExample(example);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 根据条件删除数据</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">deleteByWhere</span><span class="params">(T example)</span></span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.mapper.delete(example);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>接下来，之前的service就可以各种省事了</p>
<p>首先改造<code>ItemCatService</code></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Author  知秋</div><div class="line"> * Created by kauw on 2016/11/8.</div><div class="line"> */</div><div class="line"><span class="meta">@Service</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ItemCatService</span> <span class="keyword">extends</span> <span class="title">BaseService</span>&lt;<span class="title">ItemCat</span>&gt; </span>&#123;</div><div class="line">   <span class="comment">/* @Autowired</span></div><div class="line">    private ItemCatMapper itemCatMapper;</div><div class="line"></div><div class="line"></div><div class="line">    public List&lt;ItemCat&gt; getItemCatList(Long parentId) &#123;</div><div class="line">        ItemCat example = new ItemCat();</div><div class="line">        example.setParentId(parentId);</div><div class="line">        return this.itemCatMapper.select(example);</div><div class="line">    &#125;*/</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>接着改造<code>ItemCatController</code></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Controller</span></div><div class="line"><span class="meta">@RequestMapping</span>(<span class="string">"item/cat"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ItemCatController</span> </span>&#123;</div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="keyword">private</span> ItemCatService itemCatService;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 根据父节点id查询商品类目表</div><div class="line">     */</div><div class="line"></div><div class="line">    <span class="meta">@RequestMapping</span>(method = RequestMethod.GET)</div><div class="line"><span class="keyword">public</span> ResponseEntity&lt;List&lt;ItemCat&gt;&gt; getItemCatList(</div><div class="line">        <span class="meta">@RequestParam</span>(value = <span class="string">"id"</span>,defaultValue = <span class="string">"0"</span>) Long parentId</div><div class="line">)&#123;</div><div class="line"></div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        <span class="comment">//List&lt;ItemCat&gt; itemcats=itemCatService.getItemCatList(parentId);</span></div><div class="line">        ItemCat example=<span class="keyword">new</span> ItemCat();</div><div class="line">        example.setParentId(parentId);</div><div class="line">        List&lt;ItemCat&gt; itemCats = itemCatService.queryListByWhere(example);</div><div class="line">        <span class="keyword">if</span> (<span class="keyword">null</span>==itemCats&amp;&amp;itemCats.isEmpty())&#123;</div><div class="line">            <span class="comment">//资源不存在，响应404</span></div><div class="line">            <span class="keyword">return</span> ResponseEntity.status(HttpStatus.NOT_FOUND).body(<span class="keyword">null</span>);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span>  ResponseEntity.ok(itemCats);</div><div class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">        e.printStackTrace();</div><div class="line">        <span class="comment">// 出错，响应500</span></div><div class="line">        <span class="keyword">return</span> ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(<span class="keyword">null</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>顺带改造下写的那个测试类</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Author  知秋</div><div class="line"> * Created by kauw on 2016/11/8.</div><div class="line"> */</div><div class="line"><span class="meta">@RunWith</span>(SpringJUnit4ClassRunner.class) <span class="comment">//表示继承了SpringJUnit4ClassRunner类</span></div><div class="line"><span class="meta">@ContextConfiguration</span>(locations = &#123;<span class="string">"classpath*:spring/*.xml"</span>&#125;)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Logger logger=Logger.getLogger(Test.class);</div><div class="line">    <span class="meta">@Resource</span></div><div class="line">    <span class="keyword">private</span> ItemCatService itemCatService;</div><div class="line">    <span class="meta">@org</span>.junit.<span class="function">Test</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test1</span><span class="params">()</span>&#123;</div><div class="line">       <span class="comment">// List&lt;ItemCat&gt; itemCatList = itemCatService.getItemCatList(0L);</span></div><div class="line">        ItemCat example=<span class="keyword">new</span> ItemCat();</div><div class="line">        example.setParentId(<span class="number">0L</span>);</div><div class="line">        List&lt;ItemCat&gt; itemCatList = itemCatService.queryListByWhere(example);</div><div class="line">        logger.info(JSON.toJSONString(itemCatList));</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>运行项目，完美，就不截图了，改造成功</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Migo商城-参考通用mapper思想对service代码的二次优化封装-四&quot;&gt;&lt;a href=&quot;#Migo商城-参考通用mapper思想对service代码的二次优化封装-四&quot; class=&quot;headerlink&quot; title=&quot;Migo商城  参考通用mapper思想对service代码的二次优化封装  四&quot;&gt;&lt;/a&gt;Migo商城  参考通用mapper思想对service代码的二次优化封装  四&lt;/h2&gt;&lt;p&gt;上一篇通过域名访问，nginx反向代理的效果图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://og0sybnix.bkt.clouddn.com/nginx%E6%95%88%E6%9E%9C.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;然后步入正题：&lt;/p&gt;
&lt;p&gt;对比第一版的代码，这里再贴段的&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Service&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ItemCatService&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Autowired&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; ItemCatMapper itemCatMapper;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; List&amp;lt;ItemCat&amp;gt; &lt;span class=&quot;title&quot;&gt;getItemCatList&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Long parentId)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        ItemCat example = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ItemCat();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        example.setParentId(parentId);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.itemCatMapper.select(example);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;其实很多service都会用到这些增删改查，既然通用mapper可以做封装，我们何不学通用mapper做过通用service？自己造个适合自己的小轮子&lt;/p&gt;
&lt;p&gt;要添加的通用方法：&lt;/p&gt;
&lt;p&gt;1、  &lt;code&gt;queryById&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;2、  &lt;code&gt;queryAll&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;3、  &lt;code&gt;queryOne&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;4、  &lt;code&gt;queryListByWhere&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;5、  &lt;code&gt;queryPageListByWhere&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;6、  &lt;code&gt;save&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;7、  &lt;code&gt;update&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;8、  &lt;code&gt;deleteById&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;9、  &lt;code&gt;deleteByIds&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;10、 &lt;code&gt;deleteByWhere&lt;/code&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Migo商城2.0" scheme="https://muyinchen.github.io/categories/Migo%E5%95%86%E5%9F%8E2-0/"/>
    
    
      <category term="Migo商城2.0" scheme="https://muyinchen.github.io/tags/Migo%E5%95%86%E5%9F%8E2-0/"/>
    
  </entry>
  
  <entry>
    <title>Migo商城2.0 Nginx的安装与使用 三</title>
    <link href="https://muyinchen.github.io/2016/11/10/Migo%E5%95%86%E5%9F%8E2.0%C2%A0Nginx%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8%20%E4%B8%89/"/>
    <id>https://muyinchen.github.io/2016/11/10/Migo商城2.0 Nginx的安装与使用 三/</id>
    <published>2016-11-10T10:10:30.743Z</published>
    <updated>2016-11-13T03:51:05.799Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Migo商城2-0-Nginx的安装与使用-三"><a href="#Migo商城2-0-Nginx的安装与使用-三" class="headerlink" title="Migo商城2.0 Nginx的安装与使用 三"></a>Migo商城2.0 Nginx的安装与使用 三</h1><p>因这方面的网上的文档很多，在此就不过多仔细说明了,因操作过程一致，这里拿nginx-1.9.12来做示例</p>
<h4 id="Nginx的特点"><a href="#Nginx的特点" class="headerlink" title="Nginx的特点"></a>Nginx的特点</h4><blockquote>
<p>1、Nginx 专为性能优化而开发，性能是其最重要的考量,实现上非常注重效率 。它支<br>持内核 Poll 模型，能经受高负载的考验,有报告表明能支持高达 50,000 个并发连接数</p>
<p> 2、Nginx 具有很高的稳定性，Nginx 采取了分阶段资源分配技术，使得它的 CPU 与<br>内存占用率非常低。</p>
<p> 3、Nginx 代码质量非常高，代码很规范，手法成熟，模块扩展也很容易。</p>
<p> 4、Nginx 还可以实现无缓存的反向代理加速，简单的负载均衡和容错。<br><a id="more"></a></p>
</blockquote>
<h4 id="Nginx的应用场景"><a href="#Nginx的应用场景" class="headerlink" title="Nginx的应用场景"></a>Nginx的应用场景</h4><blockquote>
<p>1、http服务器。Nginx是一个http服务可以独立提供http服务。可以做网页静态服务器。</p>
<p>2、虚拟主机。可以实现在一台服务器虚拟出多个网站。例如个人网站使用的虚拟主机。</p>
<p>3、反向代理，负载均衡。当网站的访问量达到一定程度后，单台服务器不能满足用户的请求时，需要用多台服务器集群可以使用</p>
<p>nginx做反向代理。并且多台服务器可以平均分担负载，不会因为某台服务器负载高宕机而某台服务器闲置的情况</p>
</blockquote>
<p>在下载源码包并编译之前，先安装好开发环境：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@code ~]<span class="comment"># yum install pcre-devel openssl-devel -y 使nginx支持正则表达式及https加密</span></div><div class="line"></div><div class="line">[root@code ~]<span class="comment"># yum groupinstall “Desktop Platform Development” “Development tools” -y 开发包</span></div></pre></td></tr></table></figure>
<p>具体的nginx支持的库还是专门说下算了：</p>
<blockquote>
<p>nginx是C语言开发，建议在linux上运行</p>
<p>  <strong>gcc</strong></p>
<pre><code>安装nginx需要先将官网下载的源码进行编译，编译依赖gcc环境，如果没有gcc环境，需要安装gcc：yum install gcc-c++ 
</code></pre><p>  <strong>PCRE</strong></p>
<pre><code>PCRE(PerlCompatible Regular Expressions)是一个Perl库，包括 perl 兼容的正则表达式库。nginx的http模块使用pcre来解析正则表达式，所以需要在linux上安装pcre库。
</code></pre><p><code>yuminstall -y pcre pcre-devel</code></p>
<p>注：pcre-devel是使用pcre开发的一个二次开发库。nginx也需要此库。</p>
<p> <strong>zlib</strong></p>
<pre><code>zlib库提供了很多种压缩和解压缩的方式，nginx使用zlib对http包的内容进行gzip，所以需要在linux上安装zlib库。
</code></pre><p><code>yuminstall -y zlib zlib-devel</code></p>
<p> <strong>openssl</strong></p>
<pre><code>OpenSSL是一个强大的安全套接字层密码库，囊括主要的密码算法、常用的密钥和证书封装管理功能及SSL协议，并提供丰富的应用程序供测试或其它目的使用。

nginx不仅支持http协议，还支持https（即在ssl协议上传输http），所以需要在linux安装openssl库。
</code></pre><p><code>yuminstall -y openssl openssl-devel</code></p>
</blockquote>
<h4 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">[root@code ~]<span class="comment"># groupadd -r nginx 创建系统组nginx</span></div><div class="line"></div><div class="line">[root@code ~]<span class="comment"># useradd -g nginx -s /sbin/nologin -r nginx 创建用户nginx并添加进nginx组</span></div><div class="line"></div><div class="line">[root@code ~]<span class="comment"># yum install wget -y 安装wget工具</span></div><div class="line"></div><div class="line">[root@code ~]<span class="comment"># wget http://nginx.org/download/nginx-1.9.12.tar.gz 下载源码包到本地</span></div><div class="line"></div><div class="line">[root@code ~]<span class="comment"># tar xf nginx-1.9.12.tar.gz 解压源码包</span></div><div class="line"></div><div class="line">[root@code ~]<span class="comment"># cd nginx-1.9.12</span></div><div class="line"></div><div class="line">[root@code nginx-1.9.12]<span class="comment"># mkdir -pv /data/logs/nginx 创建ngnix日志目录</span></div><div class="line"></div><div class="line">[root@code nginx-1.9.12]<span class="comment"># ./configure \</span></div><div class="line">--prefix=/usr/<span class="built_in">local</span>/nginx \ </div><div class="line">--user=nginx --group=nginx \</div><div class="line">--pid-path=/var/run/nginx/nginx.pid \</div><div class="line">--lock-path=/var/lock/nginx.lock \</div><div class="line">--with-http_ssl_module \ </div><div class="line">--with-http_image_filter_module \ </div><div class="line">--with-http_gzip_static_module \</div><div class="line">--http-client-body-temp-path=/var/temp/nginx/client \</div><div class="line">--http-proxy-temp-path=/var/temp/nginx/proxy \</div><div class="line">--http-fastcgi-temp-path=/var/temp/nginx/fastcgi \</div><div class="line">--http-uwsgi-temp-path=/var/temp/nginx/uwsgi \</div><div class="line">--http-scgi-temp-path=/var/temp/nginx/scgi \</div><div class="line">--with-http_gunzip_module \ </div><div class="line">--with-http_stub_status_module \ </div><div class="line">--http-log-path=/data/logs/nginx/access.log \ </div><div class="line">--error-log-path=/data/logs/nginx/error.log 配置出编译文件，其中的编译选项我会在文章后面列出</div><div class="line"></div><div class="line">[root@code nginx-1.9.12]<span class="comment"># make &amp; make install 编译并安装</span></div></pre></td></tr></table></figure>
<blockquote>
<p><strong>注意：上边将临时文件目录指定为/var/temp/nginx，需要在/var下创建temp及nginx目录</strong></p>
</blockquote>
<p>下面是编译后生成的所有文件： </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">/usr/<span class="built_in">local</span>/nginx/</div><div class="line">├── conf</div><div class="line">│ ├── fastcgi.conf</div><div class="line">│ ├── fastcgi.conf.default</div><div class="line">│ ├── fastcgi_params</div><div class="line">│ ├── fastcgi_params.default</div><div class="line">│ ├── koi-utf</div><div class="line">│ ├── koi-win</div><div class="line">│ ├── mime.types</div><div class="line">│ ├── mime.types.default</div><div class="line">│ ├── nginx.conf 主配置文件</div><div class="line">│ ├── nginx.conf.default</div><div class="line">│ ├── scgi_params</div><div class="line">│ ├── scgi_params.default</div><div class="line">│ ├── uwsgi_params</div><div class="line">│ ├── uwsgi_params.default</div><div class="line">│ └── win-utf</div><div class="line">├── html 网站根目录</div><div class="line">│ ├── 50x.html</div><div class="line">│ └── index.html</div><div class="line">├── logs</div><div class="line">└── sbin</div><div class="line">　　 └── nginx nginx主程序</div></pre></td></tr></table></figure>
<p>修改Nginx的主页文件(为了测试)： <code>vim /usr/local/nginx/html/index.html</code> </p>
<p>修改内容保存：</p>
<p><code>&lt;h1&gt;Welcome!&lt;/h1&gt;</code><br><code>&lt;h2&gt;This is Nginx site&lt;/h2&gt;</code> </p>
<h4 id="启动nginx服务"><a href="#启动nginx服务" class="headerlink" title="启动nginx服务"></a>启动nginx服务</h4><p><code>[root@code ~]# /usr/local/nginx/sbin/nginx 没有报错就是启动正常</code><br><code>[root@code ~]# ss -tnl | grep “80” 查看80端口是否已经启动</code><br><code>LISTEN　　　0　　　128　　　:80　　　:*　　##80端口已经启动</code> </p>
<h4 id="测试页面是否能正常访问"><a href="#测试页面是否能正常访问" class="headerlink" title="测试页面是否能正常访问"></a>测试页面是否能正常访问</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[root@code ~]<span class="comment"># curl http://192.168.10.1</span></div><div class="line"></div><div class="line">&lt;h1&gt;Welcome!&lt;/h1&gt; </div><div class="line"></div><div class="line">&lt;h2&gt;This is Nginx site&lt;/h2&gt;</div></pre></td></tr></table></figure>
<blockquote>
<p>输出以上信息表示能够正常访问 </p>
</blockquote>
<h4 id="Nginx的配置"><a href="#Nginx的配置" class="headerlink" title="Nginx的配置"></a>Nginx的配置</h4><ol>
<li><p>配置http服务器，配置虚拟机</p>
<p>a)        通过端口区分，一个nginx可以同时监听多个端口</p>
<p>b)       通过ip区分，可以在一台服务器上绑定多个ip来根据ip区分。（很少使用）</p>
<p>c)        通过域名区分，最常见的方式。</p>
</li>
<li><p>配置反向代理、负载均衡</p>
<blockquote>
<p>需要修改的配置文件：nginx.conf</p>
<p>http节点下一个server节点就是一个虚拟机</p>
</blockquote>
<p>​</p>
<p><img src="http://og0sybnix.bkt.clouddn.com/nginx.png" alt=""></p>
<p>​</p>
<p>关于域名这个东西这里就不解释了，不懂可以谷歌百度的</p>
<p>这里把图中的反向代理，负载均衡再多说两句的，其实图里都讲到了</p>
<blockquote>
<p>作为反向代理服务器时，nginx只是转发请求。</p>
<p>可以配置多个tomcat，每个tomcat对应不同的域名</p>
</blockquote>
<p>负载均衡用图来表示下</p>
<p><img src="http://og0sybnix.bkt.clouddn.com/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1.png" alt=""></p>
<p>​</p>
<p>另附平常用的比较多的命令</p>
<blockquote>
<p>进入<code>sbin</code>目录 命令 <code>cd /usr/local/nginx/sbin</code> </p>
<p><code>Nginx</code>的关闭：</p>
<p><code>[root@localhost sbin]# ./nginx -s stop</code></p>
<p><code>Nginx</code>重新加载配置文件：</p>
<p><code>[root@localhost sbin]# ./nginx -s reload</code></p>
<p>验证配置文件是否正确的命令：<br>a、方法一<br><code>/usr/local/nginx/sbin/nginx -t -c /usr/local/nginx/conf/nginx.conf</code><br>b、进入<code>sbin</code>目录 命令 <code>cd /usr/local/nginx/sbin</code><br>验证命令为 <code>./nginx -t</code><br>出现 <code>XXXXXX is ok</code> 表示配置文件没问题 </p>
<p>​</p>
<p>​</p>
</blockquote>
<p>到此，<code>nginx</code>结束，不过，平时可以用<code>windows</code>下的<code>nginx</code>做开发的，简单易用</p>
<p>具体要用的东西，解压文件到一个全英文的路径下比如<code>d:/aaa/</code></p>
<p>三个命令：(在 CMD 中执行)</p>
<p>启动：<code>start nginx.exe</code></p>
<p>停止：<code>nginx.exe -s stop</code></p>
<p>重新加载：<code>nginx.exe -s reload</code></p>
<p>​</p>
<p>只有2个进程nginx才算是真正的启动成功：</p>
<p><img src="http://og0sybnix.bkt.clouddn.com/nginx%E8%BF%9B%E7%A8%8B.png" alt=""></p>
<p>​</p>
<p>​</p>
<p>​</p>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Migo商城2-0-Nginx的安装与使用-三&quot;&gt;&lt;a href=&quot;#Migo商城2-0-Nginx的安装与使用-三&quot; class=&quot;headerlink&quot; title=&quot;Migo商城2.0 Nginx的安装与使用 三&quot;&gt;&lt;/a&gt;Migo商城2.0 Nginx的安装与使用 三&lt;/h1&gt;&lt;p&gt;因这方面的网上的文档很多，在此就不过多仔细说明了,因操作过程一致，这里拿nginx-1.9.12来做示例&lt;/p&gt;
&lt;h4 id=&quot;Nginx的特点&quot;&gt;&lt;a href=&quot;#Nginx的特点&quot; class=&quot;headerlink&quot; title=&quot;Nginx的特点&quot;&gt;&lt;/a&gt;Nginx的特点&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;1、Nginx 专为性能优化而开发，性能是其最重要的考量,实现上非常注重效率 。它支&lt;br&gt;持内核 Poll 模型，能经受高负载的考验,有报告表明能支持高达 50,000 个并发连接数&lt;/p&gt;
&lt;p&gt; 2、Nginx 具有很高的稳定性，Nginx 采取了分阶段资源分配技术，使得它的 CPU 与&lt;br&gt;内存占用率非常低。&lt;/p&gt;
&lt;p&gt; 3、Nginx 代码质量非常高，代码很规范，手法成熟，模块扩展也很容易。&lt;/p&gt;
&lt;p&gt; 4、Nginx 还可以实现无缓存的反向代理加速，简单的负载均衡和容错。&lt;br&gt;
    
    </summary>
    
      <category term="Migo商城2.0" scheme="https://muyinchen.github.io/categories/Migo%E5%95%86%E5%9F%8E2-0/"/>
    
    
      <category term="Migo商城2.0" scheme="https://muyinchen.github.io/tags/Migo%E5%95%86%E5%9F%8E2-0/"/>
    
  </entry>
  
  <entry>
    <title>Migo商城2.0 后台管理页面分析及商品类目展示实现 二</title>
    <link href="https://muyinchen.github.io/2016/11/08/Migo%E5%95%86%E5%9F%8E2.0%20%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E9%A1%B5%E9%9D%A2%E5%88%86%E6%9E%90%E5%8F%8A%E5%95%86%E5%93%81%E7%B1%BB%E7%9B%AE%E5%B1%95%E7%A4%BA%E5%AE%9E%E7%8E%B0%20%E4%BA%8C/"/>
    <id>https://muyinchen.github.io/2016/11/08/Migo商城2.0 后台管理页面分析及商品类目展示实现 二/</id>
    <published>2016-11-08T03:56:44.560Z</published>
    <updated>2016-11-13T03:50:54.230Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Migo商城2-0-后台管理页面分析及商品类目展示实现-二"><a href="#Migo商城2-0-后台管理页面分析及商品类目展示实现-二" class="headerlink" title="Migo商城2.0 后台管理页面分析及商品类目展示实现 二"></a>Migo商城2.0 后台管理页面分析及商品类目展示实现 二</h2><h4 id="首页布局如下图所示"><a href="#首页布局如下图所示" class="headerlink" title="首页布局如下图所示"></a>首页布局如下图所示</h4><p><img src="http://og0sybnix.bkt.clouddn.com/%E9%A6%96%E9%A1%B5%E9%A1%B5%E9%9D%A2%E5%B8%83%E5%B1%80.png" alt="enter image description here"></p>
<p>树所对应代码</p>
<p><img src="http://og0sybnix.bkt.clouddn.com/%E6%A0%91%E6%89%80%E5%AF%B9%E5%BA%94%E6%BA%90%E7%A0%81.png" alt="enter image description here"></p>
<p>菜单点击事件源码<br>先判断是否是叶子节点，然后再进行下面的判断<br><img src="http://og0sybnix.bkt.clouddn.com/%E7%82%B9%E5%87%BB%E4%BA%8B%E4%BB%B6.png" alt="enter image description here"><br><a id="more"></a><br>点击新增商品后，点击选择类目，弹出窗口，在窗口中显示商品类目数据<br>效果如图：</p>
<p><img src="http://og0sybnix.bkt.clouddn.com/%E9%80%89%E6%8B%A9%E7%B1%BB%E7%9B%AE%E6%95%88%E6%9E%9C.png" alt="enter image description here"><br> 其中，弹出框如何做出来，找到其源码：</p>
<p><img src="http://og0sybnix.bkt.clouddn.com/%E5%88%9D%E5%A7%8B%E5%8C%96%E9%80%89%E6%8B%A9%E7%B1%BB%E7%9B%AE%E7%BB%84%E4%BB%B6.png" alt="enter image description here"><br><img src="http://og0sybnix.bkt.clouddn.com/%E5%88%9B%E5%BB%BA%E5%AF%8C%E6%96%87%E6%9C%AC%E5%B9%B6%E5%88%9D%E5%A7%8B%E5%8C%96%E7%B1%BB%E7%9B%AE.png" alt="enter image description here"></p>
<p>调用的类目选择所在js代码<br><img src="http://og0sybnix.bkt.clouddn.com/%E8%B0%83%E7%94%A8%E5%88%9D%E5%A7%8B%E5%8C%96%E7%B1%BB%E7%9B%AE%E9%80%89%E6%8B%A9.png" alt="enter image description here"><br>还是将代码贴下的，通过下面这段代码来加载一个类目tree，判断这个tree</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 初始化选择类目组件</span></div><div class="line">   initItemCat : <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</div><div class="line">   	$(<span class="string">".selectItemCat"</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params">i,e</span>)</span>&#123;</div><div class="line">   		<span class="keyword">var</span> _ele = $(e);</div><div class="line">   		<span class="keyword">if</span>(data &amp;&amp; data.cid)&#123;</div><div class="line">   			_ele.after(<span class="string">"&lt;span style='margin-left:10px;'&gt;"</span>+data.cid+<span class="string">"&lt;/span&gt;"</span>);</div><div class="line">   		&#125;<span class="keyword">else</span>&#123;</div><div class="line">   			_ele.after(<span class="string">"&lt;span style='margin-left:10px;'&gt;&lt;/span&gt;"</span>);</div><div class="line">   		&#125;</div><div class="line">   		_ele.unbind(<span class="string">'click'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">   			$(<span class="string">"&lt;div&gt;"</span>).css(&#123;<span class="attr">padding</span>:<span class="string">"5px"</span>&#125;).html(<span class="string">"&lt;ul&gt;"</span>)</div><div class="line">   			.window(&#123;</div><div class="line">   				<span class="attr">width</span>:<span class="string">'500'</span>,</div><div class="line">   			    <span class="attr">height</span>:<span class="string">"450"</span>,</div><div class="line">   			    <span class="attr">modal</span>:<span class="literal">true</span>,</div><div class="line">   			    <span class="attr">closed</span>:<span class="literal">true</span>,</div><div class="line">   			    <span class="attr">iconCls</span>:<span class="string">'icon-save'</span>,</div><div class="line">   			    <span class="attr">title</span>:<span class="string">'选择类目'</span>,</div><div class="line">   			    <span class="attr">onOpen</span> : <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">   			    	<span class="keyword">var</span> _win = <span class="keyword">this</span>;</div><div class="line">   			    	$(<span class="string">"ul"</span>,_win).tree(&#123;</div><div class="line">   			    		<span class="attr">url</span>:<span class="string">'/rest/item/cat/list'</span>,</div><div class="line">   			    		<span class="attr">animate</span>:<span class="literal">true</span>,</div><div class="line">   			    		<span class="attr">onClick</span> : <span class="function"><span class="keyword">function</span>(<span class="params">node</span>)</span>&#123;</div><div class="line">   			    			<span class="keyword">if</span>($(<span class="keyword">this</span>).tree(<span class="string">"isLeaf"</span>,node.target))&#123;</div><div class="line">   			    				<span class="comment">// 填写到cid中</span></div><div class="line">   			    				_ele.parent().find(<span class="string">"[name=cid]"</span>).val(node.id);</div><div class="line">   			    				_ele.next().text(node.text).attr(<span class="string">"cid"</span>,node.id);</div><div class="line">   			    				$(_win).window(<span class="string">'close'</span>);</div><div class="line">   			    				<span class="keyword">if</span>(data &amp;&amp; data.fun)&#123;</div><div class="line">   			    					data.fun.call(<span class="keyword">this</span>,node);</div><div class="line">   			    				&#125;</div><div class="line">   			    			&#125;</div><div class="line">   			    		&#125;</div><div class="line">   			    	&#125;);</div><div class="line">   			    &#125;,</div><div class="line">   			    <span class="attr">onClose</span> : <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">   			    	$(<span class="keyword">this</span>).window(<span class="string">"destroy"</span>);</div><div class="line">   			    &#125;</div><div class="line">   			&#125;).window(<span class="string">'open'</span>);</div><div class="line">   		&#125;);</div><div class="line">   	&#125;);</div><div class="line">   &#125;,</div></pre></td></tr></table></figure>
<p>查看<code>jquery api</code>关于<code>tree</code>控件需要返回的json数据格式<br><img src="http://og0sybnix.bkt.clouddn.com/EasyUI%E7%9A%84tree%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84.png" alt="enter image description here"></p>
<p>从以上代码可以看出</p>
<blockquote>
<p>请求的<code>url：/item/cat/list</code><br>使用tree控件的异步机制来实现，第一次取顶层节点列表。如果节点下有子节点状态就是关闭状态，如果没有子节点就打开状态。<br>每个节点中包含三个属性： <code>id</code>：节点<code>ID</code>，对加载远程数据很重要。 <code>text</code>：显示节点文本。 <code>state</code>：节点状态，’<code>open</code>‘ 或 ‘<code>closed</code>‘</p>
<p>返回结果是json数据，是一个节点列表，每个节点包含<code>id、text、state</code>三个属性。</p>
<p>请求的参数：<code>id</code>（当前节点的<code>id</code>）</p>
<p>数据分析： 查询的表：<code>tb_item_cat</code> 数据是一个树形结果的数据。<code>parentId、isparent</code></p>
</blockquote>
<p>再看下商品类目表结构：<br><img src="http://og0sybnix.bkt.clouddn.com/%E5%95%86%E5%93%81%E7%B1%BB%E7%9B%AE%E8%A1%A8%E7%BB%93%E6%9E%84.png" alt="enter image description here"></p>
<h4 id="后台代码实现"><a href="#后台代码实现" class="headerlink" title="后台代码实现"></a>后台代码实现</h4><p>接着，在manage-pojo中添加依赖，因为使用的是通用mapper，需要支持jpa，要给pojo添加注解来映射数据库表</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.persistence<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>persistence-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure>
<p>导入<code>pojo</code></p>
<p><img src="http://og0sybnix.bkt.clouddn.com/%E5%AF%BC%E5%85%A5pojo.png" alt="enter image description here"></p>
<p> <code>mapper</code>里添加接口</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"> <span class="keyword">package</span> com.migo.mapper;</div><div class="line"></div><div class="line"><span class="keyword">import</span> com.migo.pojo.ItemCat;</div><div class="line"><span class="keyword">import</span> tk.mybatis.mapper.common.Mapper;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Author  知秋</div><div class="line"> * Created by kauw on 2016/11/8.</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ItemCatMapper</span> <span class="keyword">extends</span> <span class="title">Mapper</span>&lt;<span class="title">ItemCat</span>&gt; </span>&#123;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><code>service</code>实现</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.migo.service;</div><div class="line"></div><div class="line"><span class="keyword">import</span> com.migo.mapper.ItemCatMapper;</div><div class="line"><span class="keyword">import</span> com.migo.pojo.ItemCat;</div><div class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</div><div class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.util.List;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Author  知秋</div><div class="line"> * Created by kauw on 2016/11/8.</div><div class="line"> */</div><div class="line"><span class="meta">@Service</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ItemCatService</span> </span>&#123;</div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="keyword">private</span> ItemCatMapper itemCatMapper;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> List&lt;ItemCat&gt; <span class="title">getItemCatList</span><span class="params">(Long parentId)</span> </span>&#123;</div><div class="line">        ItemCat example = <span class="keyword">new</span> ItemCat();</div><div class="line">        example.setParentId(parentId);</div><div class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.itemCatMapper.select(example);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><code>controller</code>实现</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.migo.controller;</div><div class="line"></div><div class="line"><span class="keyword">import</span> com.migo.pojo.ItemCat;</div><div class="line"><span class="keyword">import</span> com.migo.service.ItemCatService;</div><div class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</div><div class="line"><span class="keyword">import</span> org.springframework.http.HttpStatus;</div><div class="line"><span class="keyword">import</span> org.springframework.http.ResponseEntity;</div><div class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMethod;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.util.List;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Author  知秋</div><div class="line"> * Created by kauw on 2016/11/8.</div><div class="line"> */</div><div class="line"><span class="meta">@Controller</span></div><div class="line"><span class="meta">@RequestMapping</span>(<span class="string">"item/cat"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ItemCatController</span> </span>&#123;</div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="keyword">private</span> ItemCatService itemCatService;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 根据父节点id查询商品类目表</div><div class="line">     */</div><div class="line"></div><div class="line">    <span class="meta">@RequestMapping</span>(method = RequestMethod.GET)</div><div class="line">    <span class="keyword">public</span> ResponseEntity&lt;List&lt;ItemCat&gt;&gt; getItemCatList(</div><div class="line">            <span class="meta">@RequestParam</span>(value = <span class="string">"&#123;d"</span>,defaultValue = <span class="string">"0"</span>) Long parentId</div><div class="line">    )&#123;</div><div class="line"></div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            List&lt;ItemCat&gt; itemcats=<span class="keyword">this</span>.itemCatService.getItemCatList(parentId);</div><div class="line">            <span class="keyword">if</span> (<span class="keyword">null</span>==itemcats&amp;&amp;itemcats.isEmpty())&#123;</div><div class="line">                <span class="comment">//资源不存在，响应404</span></div><div class="line">                <span class="keyword">return</span> ResponseEntity.status(HttpStatus.NOT_FOUND).body(<span class="keyword">null</span>);</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">return</span>  ResponseEntity.ok(itemcats);</div><div class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">            <span class="comment">// 出错，响应500</span></div><div class="line">            <span class="keyword">return</span> ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(<span class="keyword">null</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<p> 对<code>ItemCat</code><br>进行改造，增加扩展字段，支持<code>EasyUItree</code>的显示,这样就可以避免再写一个第一版中的EasyuiTreeNode类，同时也省了第一版中在<code>service</code>中的一系列对<code>easyuiTreeNode</code>的处理(这里有疑问可以参照第一版的相关代码)</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.migo.pojo;</div><div class="line"></div><div class="line"><span class="keyword">import</span> javax.persistence.GeneratedValue;</div><div class="line"><span class="keyword">import</span> javax.persistence.GenerationType;</div><div class="line"><span class="keyword">import</span> javax.persistence.Id;</div><div class="line"><span class="keyword">import</span> javax.persistence.Table;</div><div class="line"></div><div class="line"><span class="meta">@Table</span>(name = <span class="string">"tb_item_cat"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ItemCat</span> <span class="keyword">extends</span> <span class="title">BasePojo</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Id</span></div><div class="line">    <span class="meta">@GeneratedValue</span>(strategy = GenerationType.IDENTITY)</div><div class="line">    <span class="keyword">private</span> Long id;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> Long parentId;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> String name;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> Integer status;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> Integer sortOrder;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> Boolean isParent;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> Long <span class="title">getId</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> id;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Long id)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.id = id;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> Long <span class="title">getParentId</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> parentId;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setParentId</span><span class="params">(Long parentId)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.parentId = parentId;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> name;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.name = name;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getStatus</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> status;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setStatus</span><span class="params">(Integer status)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.status = status;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getSortOrder</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> sortOrder;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSortOrder</span><span class="params">(Integer sortOrder)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.sortOrder = sortOrder;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> Boolean <span class="title">getIsParent</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> isParent;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setIsParent</span><span class="params">(Boolean isParent)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.isParent = isParent;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">// 扩展字段，支持EasyUItree的显示,这样就可以避免再写一个第一版中的EasyuiTreeNode类，同时也省了第一版中</span></div><div class="line">    <span class="comment">//在service中的一系列对easyuiTreeNode的处理</span></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getText</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.getName();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getState</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.getIsParent() ? <span class="string">"closed"</span> : <span class="string">"open"</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>运行，输入地址运行结果<br>出错1：地址错误，去js文件list删掉，因为现在是要彻底<code>restful</code>化<br><img src="http://og0sybnix.bkt.clouddn.com/%E8%BF%90%E8%A1%8C%E5%90%8E%E5%87%BA%E9%94%991.png" alt="enter image description here"></p>
<p><img src="http://og0sybnix.bkt.clouddn.com/js%E5%88%A0%E9%99%A4%E5%9C%B0%E6%96%B9.png" alt="enter image description here"></p>
<p>更改重新选择后，错误2: 405错误<br><img src="http://og0sybnix.bkt.clouddn.com/405%E9%94%99%E8%AF%AF.png" alt="enter image description here"><br>原因：查<code>api，tree</code>控件默认是<code>get</code>请求 修改下即可<br><img src="http://og0sybnix.bkt.clouddn.com/treeapi%E6%96%87%E6%A1%A3%E9%BB%98%E8%AE%A4post%E8%AF%B7%E6%B1%82.png" alt="enter image description here"></p>
<p><img src="http://og0sybnix.bkt.clouddn.com/%E6%9B%B4%E6%94%B9%E8%AF%B7%E6%B1%82%E7%B1%BB%E5%9E%8B.png" alt="enter image description here"></p>
<p>刷新后连接显示没有结果，查后台代码，因没添加log4j日志配置文件，先写个测试用例试试手，发现是数据库密码写错了，坑。。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> test;</div><div class="line"></div><div class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</div><div class="line"><span class="keyword">import</span> com.migo.pojo.ItemCat;</div><div class="line"><span class="keyword">import</span> com.migo.service.ItemCatService;</div><div class="line"><span class="keyword">import</span> org.apache.log4j.Logger;</div><div class="line"><span class="keyword">import</span> org.junit.runner.RunWith;</div><div class="line"><span class="keyword">import</span> org.springframework.test.context.ContextConfiguration;</div><div class="line"><span class="keyword">import</span> org.springframework.test.context.junit4.SpringJUnit4ClassRunner;</div><div class="line"></div><div class="line"><span class="keyword">import</span> javax.annotation.Resource;</div><div class="line"><span class="keyword">import</span> java.util.List;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Author  知秋</div><div class="line"> * Created by kauw on 2016/11/8.</div><div class="line"> */</div><div class="line"><span class="meta">@RunWith</span>(SpringJUnit4ClassRunner.class) <span class="comment">//表示继承了SpringJUnit4ClassRunner类</span></div><div class="line"><span class="meta">@ContextConfiguration</span>(locations = &#123;<span class="string">"classpath*:spring/*.xml"</span>&#125;)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Logger logger=Logger.getLogger(Test.class);</div><div class="line">    <span class="meta">@Resource</span></div><div class="line">    <span class="keyword">private</span> ItemCatService itemCatService;</div><div class="line">    <span class="meta">@org</span>.junit.<span class="function">Test</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test1</span><span class="params">()</span>&#123;</div><div class="line">        List&lt;ItemCat&gt; itemCatList = itemCatService.getItemCatList(<span class="number">0L</span>);</div><div class="line">        logger.info(JSON.toJSONString(itemCatList));</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>问题解决：<br><img src="http://og0sybnix.bkt.clouddn.com/%E6%9C%80%E5%90%8E%E7%BB%93%E6%9E%9C.png" alt="enter image description here"></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Migo商城2-0-后台管理页面分析及商品类目展示实现-二&quot;&gt;&lt;a href=&quot;#Migo商城2-0-后台管理页面分析及商品类目展示实现-二&quot; class=&quot;headerlink&quot; title=&quot;Migo商城2.0 后台管理页面分析及商品类目展示实现 二&quot;&gt;&lt;/a&gt;Migo商城2.0 后台管理页面分析及商品类目展示实现 二&lt;/h2&gt;&lt;h4 id=&quot;首页布局如下图所示&quot;&gt;&lt;a href=&quot;#首页布局如下图所示&quot; class=&quot;headerlink&quot; title=&quot;首页布局如下图所示&quot;&gt;&lt;/a&gt;首页布局如下图所示&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;http://og0sybnix.bkt.clouddn.com/%E9%A6%96%E9%A1%B5%E9%A1%B5%E9%9D%A2%E5%B8%83%E5%B1%80.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/p&gt;
&lt;p&gt;树所对应代码&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://og0sybnix.bkt.clouddn.com/%E6%A0%91%E6%89%80%E5%AF%B9%E5%BA%94%E6%BA%90%E7%A0%81.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/p&gt;
&lt;p&gt;菜单点击事件源码&lt;br&gt;先判断是否是叶子节点，然后再进行下面的判断&lt;br&gt;&lt;img src=&quot;http://og0sybnix.bkt.clouddn.com/%E7%82%B9%E5%87%BB%E4%BA%8B%E4%BB%B6.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Migo商城2.0" scheme="https://muyinchen.github.io/categories/Migo%E5%95%86%E5%9F%8E2-0/"/>
    
    
      <category term="Migo商城2.0" scheme="https://muyinchen.github.io/tags/Migo%E5%95%86%E5%9F%8E2-0/"/>
    
  </entry>
  
  <entry>
    <title>由域联系到的逃逸分析</title>
    <link href="https://muyinchen.github.io/2016/11/08/%E7%94%B1%E5%9F%9F%E8%81%94%E7%B3%BB%E5%88%B0%E7%9A%84%E9%80%83%E9%80%B8%E5%88%86%E6%9E%90/"/>
    <id>https://muyinchen.github.io/2016/11/08/由域联系到的逃逸分析/</id>
    <published>2016-11-07T23:34:53.715Z</published>
    <updated>2016-11-13T03:51:20.458Z</updated>
    
    <content type="html"><![CDATA[<p>这是之前在博客园的笔记<br> 以后可能会补充</p>
<p>　</p>
<blockquote>
<p>　说到域，假如给小学生中学生或者没有学过编程语言的人理解，更好说明其本质，就是作用范围，而这也就是上下文的意思，无须去理解的那么抽象。接下来就从函数讲起吧。</p>
</blockquote>
<pre><code>这里拿js的闭包来说，不解释那么多，贴几段代码的
变量的作用域无非就是两种：全局变量和局部变量。
</code></pre><p>Javascript语言的特殊之处，就在于函数内部可以直接读取全局变量。<br><a id="more"></a><br>Js代码<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">　<span class="keyword">var</span> n=<span class="number">999</span>;</div><div class="line">　　<span class="function"><span class="keyword">function</span> <span class="title">f1</span>(<span class="params"></span>)</span>&#123;</div><div class="line">　　　　alert(n);</div><div class="line">　　&#125;</div><div class="line">　　f1(); <span class="comment">// 999</span></div></pre></td></tr></table></figure></p>
<blockquote>
<p>另一方面，在函数外部自然无法读取函数内的局部变量。</p>
</blockquote>
<p>Js代码<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">f1</span>(<span class="params"></span>)</span>&#123;</div><div class="line">　　　　<span class="keyword">var</span> n=<span class="number">999</span>;</div><div class="line">　　&#125;</div><div class="line">　　alert(n); <span class="comment">// error</span></div></pre></td></tr></table></figure></p>
<p>这里有一个地方需要注意，函数内部声明变量的时候，一定要使用var命令。如果不用的话，你实际上声明了一个全局变量！<br>Js代码<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">f1</span>(<span class="params"></span>)</span>&#123;</div><div class="line">　　　　n=<span class="number">999</span>;</div><div class="line">　　&#125;</div><div class="line">　　f1();</div><div class="line">　　alert(n); <span class="comment">// 999</span></div></pre></td></tr></table></figure></p>
<hr>
<p>  如何从外部读取局部变量？<br>出于种种原因，我们有时候需要得到函数内的局部变量。但是，前面已经说过了，正常情况下，这是办不到的，只有通过变通方法才能实现。<br>那就是在函数的内部，再定义一个函数。<br>Js代码<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">f1</span>(<span class="params"></span>)</span>&#123;</div><div class="line">　　　　n=<span class="number">999</span>;</div><div class="line">　　　　<span class="function"><span class="keyword">function</span> <span class="title">f2</span>(<span class="params"></span>)</span>&#123;</div><div class="line">　　　　　　alert(n); <span class="comment">// 999</span></div><div class="line">　　　　&#125;</div><div class="line">　　&#125;</div></pre></td></tr></table></figure></p>
<p>在上面的代码中，函数f2就被包括在函数f1内部，这时f1内部的所有局部变量，对f2都是可见的。但是反过来就不行，f2内部的局部变量，对f1 就是不可见的。这就是Javascript语言特有的“链式作用域”结构<code>（chain scope）</code>，<br>子对象会一级一级地向上寻找所有父对象的变量。所以，父对象的所有变量，对子对象都是可见的，反之则不成立。<br>既然f2可以读取f1中的局部变量，那么只要把f2作为返回值，我们不就可以在f1外部读取它的内部变量了吗！</p>
<p>Js代码<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">f1</span>(<span class="params"></span>)</span>&#123;</div><div class="line">　　　　n=<span class="number">999</span>;</div><div class="line">　　　　<span class="function"><span class="keyword">function</span> <span class="title">f2</span>(<span class="params"></span>)</span>&#123;</div><div class="line">　　　　　　alert(n);</div><div class="line">　　　　&#125;</div><div class="line">　　　　<span class="keyword">return</span> f2;</div><div class="line">　　&#125;</div><div class="line"></div><div class="line">　　<span class="keyword">var</span> result=f1();</div><div class="line">　　result(); <span class="comment">// 999</span></div></pre></td></tr></table></figure></p>
<blockquote>
<p>上面例子中的f2函数，就是闭包，其实就是两个容器，大的套个小的，有点类似套娃，再往大自然延伸一点：<br>f1函数就是河，而f2函数就是河里的鱼，鱼的新陈代谢的产物就是其返回的结果，同样是不是类似于我们和空气的关系，吸进去的是氧气，返回的结果的是二氧化碳</p>
</blockquote>
<p>同样可以联系下Java中的类的函数，是不是也是一个道理，这就是函数的上下文</p>
<h5 id="由域联系到的逃逸分析"><a href="#由域联系到的逃逸分析" class="headerlink" title="由域联系到的逃逸分析"></a>由域联系到的逃逸分析</h5><p> 接着由这个可以联想到代码中的逃逸分析，其实本就不是什么高深的东西，和现实联想下一个本应被销毁的东西没有被处理掉，会造成多大的浪费，比如地雷，战时有很大作用，和平时期，假如在居民区范围，那就有很大的问题；又比如犯人，一个越了域(用这个字觉得更形象)的恐怖分子，会造成多大的恐慌和社会问题，所以说逃逸分析，分析的就是作用域</p>
<blockquote>
<p> 先拿Java来说，逃逸常见分三种情况：<br>  给全局变量赋值，发生逃逸；<br>  方法的返回值，会发生逃逸<br>   实例的引用传递，也会发生逃逸</p>
</blockquote>
<p>   这里又引出了一个优化的问题，Java对象总是在堆中分配的，因此，Java对象的创建和回收对系统的开销也是很大的，而<code>Java</code>被诟病的一个地方认为其性能慢的一个原因就是Java不支持运行时栈分配对象，没有想<code>c++</code>里面的<code>struct</code>结构或者是c#里的值对象。<code>jdk6</code>中的<code>swing</code>呢刚才和性能消耗的瓶颈就是由于发生逃逸造成的，栈内置保存了对象的指针，当对象不再被引用后，需要依靠<code>GC</code>来遍历引用书并回收内存，如果对象的数量比较多，就会给<code>GC</code>带来比较大的压力，也就间接影响了应用的性能，所以，减少临时对象在堆内分配的数量，无疑是最有效的优化方法。<br>   再次回到域这个话题，在<code>Java</code>应用里我们很容易想到，一般在方法体内，我们声明了一个局部变量，且该变量的方法执行生命周期内未发生逃逸，因为在方法体内未将引用暴露给外面，按照JVM内存分配机制，首先会在堆里<code>new</code>出变量类的实例，然后将返回的对象指针压入调用栈，再继续执行，这是<code>jvm</code>未优化之前的走方式。<br>   通过逃逸分析，我们可以对<code>jvm</code>的这个过程进行优化，即对栈的重新分配，首先需要分析并找到这期间为发生逃逸的变量，将变量类的实例化直接在栈里发生，即不需要经过堆，分配完成后，继续在栈内执行，最后线程结束，栈空间被回收，同样，局部变量也会跟着栈消失，优化后和优化前的区别就是减少了临时对象在堆内的分配数量(即未逃逸的对象无须堆内创建)。<br>   逃逸分析不能在静态编译时进行，必须在JIT里完成，因为我们在正常的代码过程中运行时会通过动态代理改变一个类的行为，这时就无法得志类已经变化。<br>   举个例子，比如一个方法的返回值是void，方法内部有对象的创建，如：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">use_a</span><span class="params">()</span></span></div><div class="line">  &#123; A a=<span class="keyword">new</span> A();</div><div class="line">   <span class="comment">//a.xx();</span></div><div class="line">   ...</div><div class="line">   a=<span class="keyword">null</span></div><div class="line">   &#125;</div></pre></td></tr></table></figure></p>
<p>从上面代码可以看出，a这个局部对象，没有返回，没有赋值全局变量等操作，所以，其是没有发生逃逸的，由于整个生命周期都在一个方法体内，这样的对象就可以在运行时栈进行分配和销毁。<br> <code>JIT</code>在编译时，假如能分析出这种代码，那么非逃逸的对象的创建和回收就可以在栈上进行，从而大大提高<code>Java</code>的运行性能。<br>  往往我们会碰到这个情况，就是方法内调用另一个方法，有点类似js的闭包了吧，这时就要进行内联分析，因为往往一些对象在被调用过程中创建并返回给调用，比如上面的<code>a.xx()</code>，假如有返回值赋值给另外的局部变量的过程(这下应该好理解这个概念了吧),在调用过程中使用完就被销毁回收了，其实都清楚程序的执行过程是自上而下的，其实函数的调用也无非是把一段代码嵌入到另一段代码里顺序执行处理而已，说白了两个方法内联成一个方法体，而这个也是我们平常方法重构的一个过程，这种原来通过返回传递的对象就变成了方法内的局部对象，也就变成了非逃逸对象了，这样，这些对象就可以在同一个栈上进行分配了。<br>  <code>Java7</code>已经开始支持对象的栈分配和逃逸分析，这样除了上述的优化外还会带来 同步消除和矢量替代，关于这两个可以查阅相应资料<br>  这里对方法逃逸再贴两段代码，方便大家加深认识：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> StringBuffer <span class="title">craeteStringBuffer</span><span class="params">(String s1, String s2)</span> </span>&#123;</div><div class="line">       StringBuffer sb = <span class="keyword">new</span> StringBuffer();</div><div class="line">       sb.append(s1);</div><div class="line">       sb.append(s2);</div><div class="line">       <span class="keyword">return</span> sb;</div><div class="line">   &#125;</div></pre></td></tr></table></figure></p>
<p><code>StringBuffer sb</code>是一个方法内部变量，上述代码中直接将sb返回，这样这个<code>StringBuffer</code>有可能被其他方法所改变，这样它的作用域就不只是在方法内部，虽然它是一个局部变量，称其逃逸到了方法外部。<br>甚至还有可能被外部线程访问到，譬如赋值给类变量或可以在其他线程中访问的实例变量，称为线程逃逸。</p>
<p>上述代码如果想要<code>StringBuffer sb</code>不逃出方法，可以这样写：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">createStringBuffer</span><span class="params">(String s1, String s2)</span> </span>&#123;</div><div class="line">        StringBuffer sb = <span class="keyword">new</span> StringBuffer();</div><div class="line">        sb.append(s1);</div><div class="line">        sb.append(s2);</div><div class="line">        <span class="keyword">return</span> sb.toString();</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<p>不直接返回 <code>StringBuffer</code>，那么<code>StringBuffer</code>将不会逃逸出方法。</p>
<p>   同样，我们分析下js中闭包在此的行为：<br>==   最大用处有两个，一个是前面提到的可以读取函数内部的变量，另一个就是让这些变量的值始终保持在内存中==。<br>Js代码<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">　<span class="function"><span class="keyword">function</span> <span class="title">f1</span>(<span class="params"></span>)</span>&#123;</div><div class="line">　　　　<span class="keyword">var</span> n=<span class="number">999</span>;</div><div class="line">　　　　nAdd=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;n+=<span class="number">1</span>&#125;</div><div class="line">　　　　<span class="function"><span class="keyword">function</span> <span class="title">f2</span>(<span class="params"></span>)</span>&#123;</div><div class="line">　　　　　　alert(n);</div><div class="line">　　　　&#125;</div><div class="line">　　　　<span class="keyword">return</span> f2;</div><div class="line">　　&#125;</div><div class="line">　　<span class="keyword">var</span> result=f1();</div><div class="line">　　result(); <span class="comment">// 999</span></div><div class="line">　　nAdd();</div><div class="line">　　result(); <span class="comment">// 1000</span></div></pre></td></tr></table></figure></p>
<p>在这段代码中，<code>result</code>实际上就是闭包<code>f2</code>函数。它一共运行了两次，第一次的值是<code>999</code>，第二次的值是<code>1000</code>。这证明了，函数<code>f1</code>中的局部变量n一直保存在内存中，并没有在<code>f1</code>调用后被自动清除。<br>为什么会这样呢？原因就在于<code>f1</code>是<code>f2</code>的父函数，<code>==</code>而<code>f2</code>被赋给了一个全局变量，这导致f2始终在内存中，而<code>f2</code>的存在依赖于<code>f1</code>，因此<code>f1</code>也始终在内存中，不会在调用结束后，被垃圾回收机制<code>（garbage collection）</code>回收。</p>
<blockquote>
<p>这段代码中另一个值得注意的地方，就是<code>“nAdd=function(){n+=1}”</code>这一行，首先在<code>nAdd</code>前面没有使用<code>var</code>关键字，因此<br><code>nAdd</code>是一个全局变量，而不是局部变量。其次，<code>nAdd</code>的值是一个匿名函数（anonymous function），而这个<br>匿名函数本身也是一个闭包，所以<code>nAdd</code>相当于是一个<code>setter</code>，可以在函数外部对函数内部的局部变量进行操作。</p>
</blockquote>
<h5 id="使用闭包的注意点"><a href="#使用闭包的注意点" class="headerlink" title="使用闭包的注意点"></a>使用闭包的注意点</h5><blockquote>
<p>由于闭包会使得函数中的变量都被保存在内存中，内存消耗很大，所以不能滥用闭包，否则会造成网页的性能问题，在IE中可能导致内存泄露。解决方法是，在退出函数之前，将不使用的局部变量全部删除。</p>
</blockquote>
<p>暂时先到这里吧，想到的比较多，比如tomcat容器，SpringMVC和Spring的父子容器，solrhome和solrcore之间的关系等等吧，有空接着整理</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这是之前在博客园的笔记&lt;br&gt; 以后可能会补充&lt;/p&gt;
&lt;p&gt;　&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;　说到域，假如给小学生中学生或者没有学过编程语言的人理解，更好说明其本质，就是作用范围，而这也就是上下文的意思，无须去理解的那么抽象。接下来就从函数讲起吧。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;这里拿js的闭包来说，不解释那么多，贴几段代码的
变量的作用域无非就是两种：全局变量和局部变量。
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Javascript语言的特殊之处，就在于函数内部可以直接读取全局变量。&lt;br&gt;
    
    </summary>
    
      <category term="java" scheme="https://muyinchen.github.io/categories/java/"/>
    
    
      <category term="域，上下文" scheme="https://muyinchen.github.io/tags/%E5%9F%9F%EF%BC%8C%E4%B8%8A%E4%B8%8B%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>Migo商城2.0  框架搭建 一</title>
    <link href="https://muyinchen.github.io/2016/11/07/Migo%E5%95%86%E5%9F%8E2.0%20%20%E6%A1%86%E6%9E%B6%E6%90%AD%E5%BB%BA%20%E4%B8%80/"/>
    <id>https://muyinchen.github.io/2016/11/07/Migo商城2.0  框架搭建 一/</id>
    <published>2016-11-07T06:47:22.448Z</published>
    <updated>2016-11-13T03:50:36.664Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Migo商城2-0-框架搭建-一"><a href="#Migo商城2-0-框架搭建-一" class="headerlink" title="Migo商城2.0  框架搭建 一"></a>Migo商城2.0  框架搭建 一</h2><p>1.0版本github链接：<a href="https://github.com/muyinchen/migoShop" target="_blank" rel="external">https://github.com/muyinchen/migoShop</a><br>2.0版本github链接：<a href="https://github.com/muyinchen/migoshop2.0" target="_blank" rel="external">https://github.com/muyinchen/migoshop2.0</a></p>
<h3 id="开发技术"><a href="#开发技术" class="headerlink" title="开发技术"></a>开发技术</h3><p>Spring<br>Springmvc<br>Mybatis</p>
<p>Redis<br>Solr<br>RabbitMQ<br>Dubbo<br>httpclient(调用系统服务)<br>nginx<br>fastdfs 5.0.5<br>MysqL</p>
<h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><p>IDEA 2016.1.3(64)<br>maven 3.2.9<br>tomcat 7<br>jdk 1.7<br>MySQL 5.6<br>nginx 1.11.4<br>redis 3.2.4<br>solr 6.2.1</p>
<a id="more"></a>
<h3 id="构建maven项目"><a href="#构建maven项目" class="headerlink" title="构建maven项目"></a>构建maven项目</h3><p><img src="http://og0sybnix.bkt.clouddn.com/parent.png" alt="enter image description here"><br>注意是pom</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></div><div class="line">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></div><div class="line">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</div><div class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.migo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></div><div class="line"></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- 集中定义依赖版本号 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">junit.version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">junit.version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">spring.version</span>&gt;</span>4.1.3.RELEASE<span class="tag">&lt;/<span class="name">spring.version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">mybatis.version</span>&gt;</span>3.2.8<span class="tag">&lt;/<span class="name">mybatis.version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">mybatis.spring.version</span>&gt;</span>1.2.2<span class="tag">&lt;/<span class="name">mybatis.spring.version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">mybatis.paginator.version</span>&gt;</span>1.2.15<span class="tag">&lt;/<span class="name">mybatis.paginator.version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">mysql.version</span>&gt;</span>5.1.32<span class="tag">&lt;/<span class="name">mysql.version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">slf4j.version</span>&gt;</span>1.6.4<span class="tag">&lt;/<span class="name">slf4j.version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">jackson.version</span>&gt;</span>2.4.2<span class="tag">&lt;/<span class="name">jackson.version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">druid.version</span>&gt;</span>1.0.9<span class="tag">&lt;/<span class="name">druid.version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">httpclient.version</span>&gt;</span>4.3.5<span class="tag">&lt;/<span class="name">httpclient.version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">jstl.version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">jstl.version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">servlet-api.version</span>&gt;</span>2.5<span class="tag">&lt;/<span class="name">servlet-api.version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">jsp-api.version</span>&gt;</span>2.0<span class="tag">&lt;/<span class="name">jsp-api.version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">joda-time.version</span>&gt;</span>2.5<span class="tag">&lt;/<span class="name">joda-time.version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">commons-lang3.version</span>&gt;</span>3.3.2<span class="tag">&lt;/<span class="name">commons-lang3.version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">commons-io.version</span>&gt;</span>1.3.2<span class="tag">&lt;/<span class="name">commons-io.version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">commons-net.version</span>&gt;</span>3.3<span class="tag">&lt;/<span class="name">commons-net.version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">pagehelper.version</span>&gt;</span>4.1.6<span class="tag">&lt;/<span class="name">pagehelper.version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">jsqlparser.version</span>&gt;</span>0.9.1<span class="tag">&lt;/<span class="name">jsqlparser.version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">commons-fileupload.version</span>&gt;</span>1.3.1<span class="tag">&lt;/<span class="name">commons-fileupload.version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">jedis.version</span>&gt;</span>2.7.2<span class="tag">&lt;/<span class="name">jedis.version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">solrj.version</span>&gt;</span>6.2.1<span class="tag">&lt;/<span class="name">solrj.version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dubbo.version</span>&gt;</span>2.5.3<span class="tag">&lt;/<span class="name">dubbo.version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">zookeeper.version</span>&gt;</span>3.4.7<span class="tag">&lt;/<span class="name">zookeeper.version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">zkclient.version</span>&gt;</span>0.1<span class="tag">&lt;/<span class="name">zkclient.version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">activemq.version</span>&gt;</span>5.11.2<span class="tag">&lt;/<span class="name">activemq.version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">freemarker.version</span>&gt;</span>2.3.23<span class="tag">&lt;/<span class="name">freemarker.version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">quartz.version</span>&gt;</span>2.2.2<span class="tag">&lt;/<span class="name">quartz.version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></div><div class="line">            <span class="comment">&lt;!-- 时间操作组件 --&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>joda-time<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>joda-time<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;joda-time.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="comment">&lt;!-- Apache工具组件 --&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-lang3<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;commons-lang3.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;commons-io.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-net<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-net<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;commons-net.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="comment">&lt;!-- Jackson Json处理工具包 --&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;jackson.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="comment">&lt;!-- httpclient --&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.httpcomponents<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>httpclient<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;httpclient.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="comment">&lt;!-- quartz任务调度框架 --&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.quartz-scheduler<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>quartz<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;quartz.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="comment">&lt;!-- 单元测试 --&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;junit.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="comment">&lt;!-- 日志处理 --&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-log4j12<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;slf4j.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="comment">&lt;!-- Mybatis --&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mybatis.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mybatis.spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.miemiedev<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-paginator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mybatis.paginator.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;pagehelper.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="comment">&lt;!-- MySql --&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mysql.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="comment">&lt;!-- 连接池 --&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;druid.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="comment">&lt;!-- Spring --&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-beans<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aspects<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jms<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context-support<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="comment">&lt;!-- JSP相关 --&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;jstl.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;servlet-api.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;jsp-api.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="comment">&lt;!-- 文件上传组件 --&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;commons-fileupload.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="comment">&lt;!-- Redis客户端 --&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>redis.clients<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jedis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;jedis.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="comment">&lt;!-- solr客户端 --&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.solr<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>solr-solrj<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;solrj.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="comment">&lt;!-- dubbo相关 --&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dubbo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;dubbo.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.zookeeper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>zookeeper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;zookeeper.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.sgroschupf<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>zkclient<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;zkclient.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.activemq<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>activemq-all<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;activemq.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.freemarker<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>freemarker<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;freemarker.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>$&#123;project.artifactId&#125;<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></div><div class="line">            <span class="comment">&lt;!-- 资源文件拷贝插件 --&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-resources-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></div><div class="line">            <span class="comment">&lt;!-- java编译插件 --&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">source</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">target</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">pluginManagement</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></div><div class="line">                <span class="comment">&lt;!-- 配置Tomcat插件 --&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tomcat.maven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tomcat7-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">pluginManagement</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="创建migo-common"><a href="#创建migo-common" class="headerlink" title="创建migo-common"></a>创建migo-common</h3><p><img src="http://og0sybnix.bkt.clouddn.com/migo-common.png" alt="enter image description here"></p>
<p>此为整个项目的通用模块</p>
<p>pom：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line">   &lt;?xml version="1.0" encoding="UTF-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></div><div class="line">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></div><div class="line">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</div><div class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.migo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>common<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- 添加依赖的jar包 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- 时间操作组件 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>joda-time<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>joda-time<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- Apache工具组件 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-lang3<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-net<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-net<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- Jackson Json处理工具包 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- httpclient --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.httpcomponents<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>httpclient<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- quartz任务调度框架 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.quartz-scheduler<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>quartz<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- 单元测试 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- 日志处理 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-log4j12<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="创建migo-manage"><a href="#创建migo-manage" class="headerlink" title="创建migo-manage"></a>创建migo-manage</h3><p>此为后台管理系统<br>使用Maven的聚合将所有的子工程进行创建<br><img src="http://og0sybnix.bkt.clouddn.com/manage.png" alt="enter image description here"></p>
<h4 id="子工程之间的依赖关系"><a href="#子工程之间的依赖关系" class="headerlink" title="子工程之间的依赖关系"></a>子工程之间的依赖关系</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">migo-manage-web --&gt; migo-manage-service --&gt;  migo-manage-mapper --&gt; migo-manage-pojo</div></pre></td></tr></table></figure>
<h4 id="导入依赖"><a href="#导入依赖" class="headerlink" title="导入依赖"></a>导入依赖</h4><blockquote>
<p>导入依赖的原则：<br> 1、    所有的工程都需要的依赖应该在聚合工程（migo-manage）中导入。<br> 2、    在使用依赖的最底层导入。<br> 3、运行时所需要的依赖在web工程中加入。</p>
<p>注意：<br>聚合工程的tomcat插件要在聚合工程中导入，migo-manage中导入</p>
<h5 id="有些依赖包的用法会单独开博文讲解用法"><a href="#有些依赖包的用法会单独开博文讲解用法" class="headerlink" title="有些依赖包的用法会单独开博文讲解用法"></a>有些依赖包的用法会单独开博文讲解用法</h5></blockquote>
<h5 id="migo-manage-pom"><a href="#migo-manage-pom" class="headerlink" title="migo-manage pom"></a>migo-manage pom</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div></pre></td><td class="code"><pre><div class="line">  &lt;?xml version="1.0" encoding="UTF-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></div><div class="line">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></div><div class="line">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</div><div class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">modules</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>manage-pojo<span class="tag">&lt;/<span class="name">module</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>manage-mapper<span class="tag">&lt;/<span class="name">module</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>manage-service<span class="tag">&lt;/<span class="name">module</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>manage-web<span class="tag">&lt;/<span class="name">module</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">modules</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.migo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>manage<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.migo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>common<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="comment">&lt;!-- 单元测试 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-log4j12<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- Apache工具组件 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-lang3<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></div><div class="line">            <span class="comment">&lt;!-- 配置Tomcat插件 --&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tomcat.maven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tomcat7-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">port</span>&gt;</span>8081<span class="tag">&lt;/<span class="name">port</span>&gt;</span></div><div class="line">                    <span class="tag">&lt;<span class="name">path</span>&gt;</span>/<span class="tag">&lt;/<span class="name">path</span>&gt;</span></div><div class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></div></pre></td></tr></table></figure>
<h5 id="manage-pojo-pom"><a href="#manage-pojo-pom" class="headerlink" title="manage-pojo pom"></a>manage-pojo pom</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></div><div class="line">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></div><div class="line">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</div><div class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>manage<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.migo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>manage-pojo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.persistence<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>persistence-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></div></pre></td></tr></table></figure>
<h5 id="manage-service-pom"><a href="#manage-service-pom" class="headerlink" title="manage-service pom"></a>manage-service pom</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></div><div class="line">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></div><div class="line">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</div><div class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>manage<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.migo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>manage-service<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.migo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>manage-mapper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- 分页助手 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.jsqlparser<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsqlparser<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>redis.clients<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jedis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework.amqp/spring-rabbit --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.amqp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-rabbit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.6.3.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"></div><div class="line"></div><div class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></div></pre></td></tr></table></figure>
<h5 id="manage-web-pom"><a href="#manage-web-pom" class="headerlink" title="manage-web pom"></a>manage-web pom</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></div><div class="line">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></div><div class="line">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</div><div class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>manage<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.migo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>manage-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.migo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>manage-service<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aspects<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- MySql --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- Jackson Json处理工具包 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- 连接池 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- JSP相关 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- 时间操作组件 --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>joda-time<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>joda-time<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="框架整合思路"><a href="#框架整合思路" class="headerlink" title="框架整合思路"></a>框架整合思路</h3><blockquote>
<p>ssm框架整合思路： Dao层：mybatis、spring、mybatis和spring的整合包。<br>Mybatis：mybatis-config.xml，文件可以为空，但是文件必须存在。<br>applicationContext-dao.xml：数据库连接池、SqlSessionFactory（整合包中类），配置一个包扫描器，扫描Mapper接口，生成代理对象。</p>
<p>Service层：spring<br>applicationContext-service.xml：扫描@Service注解的类，创建对象放到spring容器中。 事务配置：<br>applicationContext-trans.xml：配置切面、切点、配置事务管理器。</p>
<p>表现层：springmvc 配置springmvc.xml：配置注解驱动、视图解析器，配置包扫描器@Controller注解 的类。</p>
<p>web.xml 配置初始化spring容器 配置前端控制器DispatcherServlet 配置post乱码过滤器</p>
</blockquote>
<h4 id="整合通用mapper"><a href="#整合通用mapper" class="headerlink" title="整合通用mapper"></a>整合通用mapper</h4><blockquote>
<p>3.2.0版本以后配置更简单，以前的拦截器不能继续使用<br>纯Spring配置方式：</p>
</blockquote>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!--  &lt;bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer"&gt;</span></div><div class="line">    &lt;property name="basePackage" value="com.isea533.mybatis.mapper"/&gt;</div><div class="line">    &lt;property name="properties"&gt;</div><div class="line">        &lt;value&gt;</div><div class="line">            mappers=tk.mybatis.mapper.common.Mapper</div><div class="line">        &lt;/value&gt;</div><div class="line">    &lt;/property&gt;</div><div class="line">&lt;/bean&gt;  --&gt;</div><div class="line"> <span class="comment">&lt;!-- 配置mybatis的SessionFactory --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"sqlSessionFactory"</span> <span class="attr">class</span>=<span class="string">"org.mybatis.spring.SqlSessionFactoryBean"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span>/&gt;</span></div><div class="line">       <span class="comment">&lt;!-- &lt;property name="mapperLocations" value="classpath:/mybatis/mappers/**/*.xml"/&gt;--&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"typeAliasesPackage"</span> <span class="attr">value</span>=<span class="string">"com.migo.pojo"</span>/&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- 自动扫描注册Mybatis mapper --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"tk.mybatis.spring.mapper.MapperScannerConfigurer"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"basePackage"</span> <span class="attr">value</span>=<span class="string">"com.migo.mapper"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"sqlSessionFactoryBeanName"</span> <span class="attr">value</span>=<span class="string">"sqlSessionFactory"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="创建web-xml"><a href="#创建web-xml" class="headerlink" title="创建web.xml"></a>创建web.xml</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></div><div class="line">         <span class="attr">xmlns</span>=<span class="string">"http://java.sun.com/xml/ns/javaee"</span></div><div class="line">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"</span></div><div class="line">         <span class="attr">id</span>=<span class="string">"WebApp_ID"</span> <span class="attr">version</span>=<span class="string">"2.5"</span>&gt;</div><div class="line">    <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>migo-manage<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">context-param</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:spring/applicationContext*.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!--Spring的ApplicationContext 载入 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">listener</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">listener</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- 编码过滤器，以UTF8编码 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">filter</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>UTF8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- 解决PUT请求无法提交表单数据的问题 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">filter</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>HttpMethodFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.HttpPutFormContentFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>HttpMethodFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- 将POST请求转化为DELETE或者是PUT 要用_method指定真正的请求参数 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">filter</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>HiddenHttpMethodFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.HiddenHttpMethodFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>HiddenHttpMethodFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></div><div class="line"></div><div class="line"></div><div class="line">    <span class="comment">&lt;!-- 配置SpringMVC框架入口 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>migo-manage<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:spring/springmvc.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>migo-manage<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/rest/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="导入静态页面"><a href="#导入静态页面" class="headerlink" title="导入静态页面"></a>导入静态页面</h4><p><img src="http://og0sybnix.bkt.clouddn.com/%E9%9D%99%E6%80%81%E9%A1%B5%E9%9D%A2.png" alt="enter image description here"></p>
<h4 id="写个通用跳转页面"><a href="#写个通用跳转页面" class="headerlink" title="写个通用跳转页面"></a>写个通用跳转页面</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.migo.controller;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMethod;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Author  知秋</div><div class="line"> * Created by kauw on 2016/11/7.</div><div class="line"> * 通用页面的跳转</div><div class="line"> */</div><div class="line"><span class="meta">@Controller</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PageController</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"/page/&#123;pageName&#125;"</span>,method = RequestMethod.GET)</div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">tpage</span><span class="params">(@PathVariable String pageName)</span></span>&#123;</div><div class="line">        <span class="keyword">return</span> pageName;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>效果页面展示<br><img src="http://og0sybnix.bkt.clouddn.com/%E9%80%9A%E7%94%A8%E8%B7%B3%E8%BD%AC%E5%B1%95%E7%A4%BA.png" alt="enter image description here"></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Migo商城2-0-框架搭建-一&quot;&gt;&lt;a href=&quot;#Migo商城2-0-框架搭建-一&quot; class=&quot;headerlink&quot; title=&quot;Migo商城2.0  框架搭建 一&quot;&gt;&lt;/a&gt;Migo商城2.0  框架搭建 一&lt;/h2&gt;&lt;p&gt;1.0版本github链接：&lt;a href=&quot;https://github.com/muyinchen/migoShop&quot;&gt;https://github.com/muyinchen/migoShop&lt;/a&gt;&lt;br&gt;2.0版本github链接：&lt;a href=&quot;https://github.com/muyinchen/migoshop2.0&quot;&gt;https://github.com/muyinchen/migoshop2.0&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;开发技术&quot;&gt;&lt;a href=&quot;#开发技术&quot; class=&quot;headerlink&quot; title=&quot;开发技术&quot;&gt;&lt;/a&gt;开发技术&lt;/h3&gt;&lt;p&gt;Spring&lt;br&gt;Springmvc&lt;br&gt;Mybatis&lt;/p&gt;
&lt;p&gt;Redis&lt;br&gt;Solr&lt;br&gt;RabbitMQ&lt;br&gt;Dubbo&lt;br&gt;httpclient(调用系统服务)&lt;br&gt;nginx&lt;br&gt;fastdfs 5.0.5&lt;br&gt;MysqL&lt;/p&gt;
&lt;h3 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h3&gt;&lt;p&gt;IDEA 2016.1.3(64)&lt;br&gt;maven 3.2.9&lt;br&gt;tomcat 7&lt;br&gt;jdk 1.7&lt;br&gt;MySQL 5.6&lt;br&gt;nginx 1.11.4&lt;br&gt;redis 3.2.4&lt;br&gt;solr 6.2.1&lt;/p&gt;
    
    </summary>
    
      <category term="Migo商城2.0" scheme="https://muyinchen.github.io/categories/Migo%E5%95%86%E5%9F%8E2-0/"/>
    
    
      <category term="Migo商城2.0" scheme="https://muyinchen.github.io/tags/Migo%E5%95%86%E5%9F%8E2-0/"/>
    
  </entry>
  
  <entry>
    <title>hexo常用命令笔记</title>
    <link href="https://muyinchen.github.io/2016/11/06/hexo%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E7%AC%94%E8%AE%B0/"/>
    <id>https://muyinchen.github.io/2016/11/06/hexo常用命令笔记/</id>
    <published>2016-11-06T01:44:21.119Z</published>
    <updated>2016-11-13T03:49:22.788Z</updated>
    
    <content type="html"><![CDATA[<h3 id="hexo"><a href="#hexo" class="headerlink" title="hexo"></a>hexo</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">npm install hexo -g #安装  </div><div class="line">npm update hexo -g #升级  </div><div class="line">hexo init #初始化</div></pre></td></tr></table></figure>
<h3 id="简写"><a href="#简写" class="headerlink" title="简写"></a>简写</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">hexo n &quot;我的博客&quot; == hexo new &quot;我的博客&quot; #新建文章</div><div class="line">hexo p == hexo publish</div><div class="line">hexo g == hexo generate#生成</div><div class="line">hexo s == hexo server #启动服务预览</div><div class="line">hexo d == hexo deploy#部署</div></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="服务器"><a href="#服务器" class="headerlink" title="服务器"></a>服务器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">hexo server #Hexo 会监视文件变动并自动更新，您无须重启服务器。</div><div class="line">hexo server -s #静态模式</div><div class="line">hexo server -p 5000 #更改端口</div><div class="line">hexo server -i 192.168.1.1 #自定义 IP</div><div class="line"></div><div class="line">hexo clean #清除缓存 网页正常情况下可以忽略此条命令</div><div class="line">hexo g #生成静态网页</div><div class="line">hexo d #开始部署</div></pre></td></tr></table></figure>
<h3 id="监视文件变动"><a href="#监视文件变动" class="headerlink" title="监视文件变动"></a>监视文件变动</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">hexo generate #使用 Hexo 生成静态文件快速而且简单</div><div class="line">hexo generate --watch #监视文件变动</div><div class="line"></div><div class="line">完成后部署</div><div class="line">两个命令的作用是相同的</div><div class="line">hexo generate --deploy</div><div class="line">hexo deploy --generate</div><div class="line">hexo deploy -g</div><div class="line">hexo server -g</div></pre></td></tr></table></figure>
<h3 id="草稿"><a href="#草稿" class="headerlink" title="草稿"></a>草稿</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo publish [layout] &lt;title&gt;</div></pre></td></tr></table></figure>
<h3 id="模版"><a href="#模版" class="headerlink" title="模版"></a>模版</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">hexo new &quot;postName&quot; #新建文章</div><div class="line">hexo new page &quot;pageName&quot; #新建页面</div><div class="line">hexo generate #生成静态页面至public目录</div><div class="line">hexo server #开启预览访问端口（默认端口4000，&apos;ctrl + c&apos;关闭server）</div><div class="line">hexo deploy #将.deploy目录部署到GitHub</div><div class="line"></div><div class="line">hexo new [layout] &lt;title&gt;</div><div class="line">hexo new photo &quot;My Gallery&quot;</div><div class="line">hexo new &quot;Hello World&quot; --lang tw</div></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th style="text-align:left">变量</th>
<th style="text-align:right">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">layout</td>
<td style="text-align:right">布局</td>
</tr>
<tr>
<td style="text-align:left">title</td>
<td style="text-align:right">标题</td>
</tr>
<tr>
<td style="text-align:left">date</td>
<td style="text-align:right">建立</td>
</tr>
</tbody>
</table>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">title: 使用Hexo搭建个人博客</div><div class="line">layout: post</div><div class="line">date: 2014-03-03 19:07:43</div><div class="line">comments: true</div><div class="line">categories: Blog</div><div class="line">tags: [Hexo]</div><div class="line">keywords: Hexo, Blog</div><div class="line">description: 暮色匆匆去，音消尘也无</div><div class="line">模版（Scaffold）</div><div class="line">hexo new photo &quot;My Gallery&quot;</div></pre></td></tr></table></figure>
<h3 id="设置文章摘要"><a href="#设置文章摘要" class="headerlink" title="设置文章摘要"></a>设置文章摘要</h3><p>以上是文章摘要 <!--more--> 以下是余下全文 </p>
<h3 id="写作"><a href="#写作" class="headerlink" title="写作"></a>写作</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hexo new page &lt;title&gt;</div><div class="line">hexo new post &lt;title&gt;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">变量	   描述</div><div class="line">:title	标题</div><div class="line">:year	建立的年份（4 位数）</div><div class="line">:month	建立的月份（2 位数）</div><div class="line">:i_month	建立的月份（去掉开头的零）</div><div class="line">:day	建立的日期（2 位数）</div><div class="line">:i_day	建立的日期（去掉开头的零）</div></pre></td></tr></table></figure>
<h3 id="推送到服务器上"><a href="#推送到服务器上" class="headerlink" title="推送到服务器上"></a>推送到服务器上</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">hexo n #写文章</div><div class="line">hexo g #生成</div><div class="line">hexo d #部署 #可与hexo g合并为 hexo d -g</div></pre></td></tr></table></figure>
<h3 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h3><p>1.找不到git部署</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ERROR Deployer not found: git</div></pre></td></tr></table></figure>
<p>解决方法</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-deployer-git --save</div></pre></td></tr></table></figure>
<p>3.部署类型设置git<br>hexo 3.0 部署类型不再是github，<code>_config.yml</code> 中修改</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"># Deployment</div><div class="line">## Docs: http://hexo.io/docs/deployment.html</div><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  repository: git@***.github.com:***/***.github.io.git</div><div class="line">  branch: master</div></pre></td></tr></table></figure>
<ol>
<li>xcodebuild</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">xcode-select: error: tool &apos;xcodebuild&apos; requires Xcode, but active developer directory &apos;/Library/Developer/CommandLineTools&apos; is a command line tools instance</div><div class="line"></div><div class="line">npm install bcrypt</div></pre></td></tr></table></figure>
<ol>
<li>RSS不显示<br>安装RSS插件</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-feed --save</div></pre></td></tr></table></figure>
<h3 id="开启RSS功能"><a href="#开启RSS功能" class="headerlink" title="开启RSS功能"></a>开启RSS功能</h3><p>编辑<code>hexo/_config.yml</code>，添加如下代码：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rss: /atom.xml #rss地址  默认即可</div></pre></td></tr></table></figure>
<h3 id="开启评论"><a href="#开启评论" class="headerlink" title="开启评论"></a>开启评论</h3><p>1.我使用多说代替自带的评论，在多说 网站注册 &gt; 后台管理 &gt; 添加新站点 &gt; 工具 === 复制通用代码 里面有 short_name</p>
<p>1 在根目录 <code>_config.yml</code> 添加一行 <code>disqus_shortname: jslite</code> 是在多说注册时产生的<br>复制到 <code>themes\landscape\layout\_partial\article.ejs</code><br>2 把</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;% if (!index &amp;&amp; post.comments &amp;&amp; config.disqus_shortname)&#123; %&gt;</div><div class="line">&lt;section id=&quot;comments&quot;&gt;</div><div class="line">&lt;div id=&quot;disqus_thread&quot;&gt;</div><div class="line">  &lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;//disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;</div><div class="line">&lt;/div&gt;</div><div class="line">&lt;/section&gt;</div><div class="line">&lt;% &#125; %&gt;</div></pre></td></tr></table></figure>
<p>改为</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">&lt;% if (!index &amp;&amp; post.comments &amp;&amp; config.disqus_shortname)&#123; %&gt;</div><div class="line">  &lt;section id=&quot;comments&quot;&gt;</div><div class="line">    &lt;!-- 多说评论框 start --&gt;</div><div class="line">    &lt;div class=&quot;ds-thread&quot; data-thread-key=&quot;&lt;%= post.layout %&gt;-&lt;%= post.slug %&gt;&quot; data-title=&quot;&lt;%= post.title %&gt;&quot; data-url=&quot;&lt;%= page.permalink %&gt;&quot;&gt;&lt;/div&gt;</div><div class="line">    &lt;!-- 多说评论框 end --&gt;</div><div class="line">    &lt;!-- 多说公共JS代码 start (一个网页只需插入一次) --&gt;</div><div class="line">    &lt;script type=&quot;text/javascript&quot;&gt;</div><div class="line">    var duoshuoQuery = &#123;short_name:&apos;&lt;%= config.disqus_shortname %&gt;&apos;&#125;;</div><div class="line">      (function() &#123;</div><div class="line">        var ds = document.createElement(&apos;script&apos;);</div><div class="line">        ds.type = &apos;text/javascript&apos;;ds.async = true;</div><div class="line">        ds.src = (document.location.protocol == &apos;https:&apos; ? &apos;https:&apos; : &apos;http:&apos;) + &apos;//static.duoshuo.com/embed.js&apos;;</div><div class="line">        ds.charset = &apos;UTF-8&apos;;</div><div class="line">        (document.getElementsByTagName(&apos;head&apos;)[0] </div><div class="line">         || document.getElementsByTagName(&apos;body&apos;)[0]).appendChild(ds);</div><div class="line">      &#125;)();</div><div class="line">      &lt;/script&gt;</div><div class="line">    &lt;!-- 多说公共JS代码 end --&gt;</div><div class="line">  &lt;/section&gt;</div><div class="line">&lt;% &#125; %&gt;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;hexo&quot;&gt;&lt;a href=&quot;#hexo&quot; class=&quot;headerlink&quot; title=&quot;hexo&quot;&gt;&lt;/a&gt;hexo&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;npm install hexo -g #安装  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm update hexo -g #升级  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;hexo init #初始化&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;简写&quot;&gt;&lt;a href=&quot;#简写&quot; class=&quot;headerlink&quot; title=&quot;简写&quot;&gt;&lt;/a&gt;简写&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;hexo n &amp;quot;我的博客&amp;quot; == hexo new &amp;quot;我的博客&amp;quot; #新建文章&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;hexo p == hexo publish&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;hexo g == hexo generate#生成&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;hexo s == hexo server #启动服务预览&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;hexo d == hexo deploy#部署&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://muyinchen.github.io/2016/11/03/hello-world/"/>
    <id>https://muyinchen.github.io/2016/11/03/hello-world/</id>
    <published>2016-11-02T17:57:03.440Z</published>
    <updated>2016-11-13T03:49:13.258Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<a id="more"></a>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Run-server&quot;&gt;&lt;a href=&quot;#Run-server&quot; class=&quot;headerlink&quot; title=&quot;Run server&quot;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ hexo server&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
